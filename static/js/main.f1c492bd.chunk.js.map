{"version":3,"sources":["react-components/layout/SignedInLinks.js","react-components/layout/SignedOutLinks.js","letcode-code-runner/type.ts","api-calls/user-api-calls.js","react-components/fetchWrapper.js","react-components/layout/Header.js","react-components/auth/SignIn.js","react-components/auth/SignUp.js","react-components/auth/MainLogin.js","react-components/mainpage/SearchBar.js","react-components/mainpage/AllFilter.js","react-components/mainpage/Sortby.js","react-components/mainpage/TitleCards.js","react-components/mainpage/DailyQuestionCard.js","api-calls/test-case-api-calls.js","api-calls/question-api-calls.js","react-components/mainpage/MainPage.js","img_source/placeholder.png","react-components/user/Message.js","react-components/user/Profile.js","letcode-code-runner/mapper.ts","letcode-code-runner/letcode-mapper.ts","react-components/post-question/type-popup.js","react-components/test-case/add-test-case.js","react-components/test-case/test-case-view-lg.js","react-components/post-question/create-question-testcase.js","react-components/post-question/create-question.js","react-components/question-page/QuestionDesc.js","react-components/question-page/Editor.js","api-calls/answers-api-calls.js","react-components/question-page/Answers.js","react-components/question-page/TestCases.js","react-components/question-page/QuestionContainer.js","letcode-code-runner/code-runner.ts","react-components/answer-question/editor.js","letcode-code-runner/python/python-mapper.ts","letcode-code-runner/python/code-runner-python-impl.ts","letcode-code-runner/code-runner-global.ts","react-components/test-case/test-case-view-sm.js","react-components/answer-question/answer-question.js","App.js","reportWebVitals.js","index.js","react-codemirror2/index.js"],"names":["SignedInLinks","user","this","props","className","NavLink","as","Link","to","NavDropdown","title","username","id","Item","onClick","console","log","Component","SignedOutLinks","Type","selfType","keyType","valueType","INT","FLOAT","STRING","BOOL","includes","Error","undefined","VariableType","name","type","FunctionType","paramsType","returnType","users","intro","profilePic","getUser","callback","setTimeout","FetchWrapper","state","data","fetchComplete","authorized","loadData","setState","fetchData","onDataReady","private","React","cloneElement","children","history","replace","withRouter","Header","wrappedHeader","SignIn","password","handleChange","e","target","value","onSubmit","preventDefault","Container","Row","Col","Form","Group","Label","Control","placeholder","onChange","Text","SignUp","confirmPwd","handleSubmit","alert","length","MainLogin","SearchBar","Card","InputBase","theme","size","fill","AllFilter","titles","top","mid","bot","Sortby","makeStyles","root","padding","display","alignItems","width","margin","classes","TitleCard","useState","collection","setcollection","path","items","_id","desc","DailyQuestionCard","testCases","owner_id","inputs","output","numRun","date","Date","toString","lag","questions","functionType","LIST","by","numUpVote","numAnswers","getQuestion","MainPage","options","map","obj","ind","wrappedMainPage","Message","messages","time","sender","class","message","index","href","content","PostHistroy","style","marginLeft","MyCollection","Profile","fileUploadState","displayID","toggle","tab","ListGroup","action","src","alt","cb","wrappedProfile","CodeMapperAccumulator","vars","code","CodeMapper","int_","float_","string_","bool_","dict_","list_","input","acc","codeMap","Map","splitOutterMost","slice","kv","key_value","set","mapCode","codeList","x","TypeMapper","mapType","canBeMapped","isPair","str1","str2","l","str","strList","brackets","last","i","push","trim","pop","StringToLetCodeCodeMapper","val","test","f","String","parseInt","parseFloat","pairs","forEach","v","k","join","LetCodeTypeMapper","key","TypePopup","pushModal","keyTypeStr","valueTypeStr","getTypeselectionFrom","setKey","bind","setValue","onComplete","onCancel","Modal","show","onHide","aria-labelledby","centered","closeButton","Title","Body","getBody","Footer","DICT","onSelected","defaultValue","selectedValue","o","AddtestCaseForm","userIn","error","isReturn","upload","nameError","descError","varsCp","field","update","newT","indexOf","varType","htmlFor","required","ty","updateVars","onAdd","local","rows","mapToGroup","result","isLocal","allPass","notEmpty","vt","formatted","err","AddTestCaseModal","TestCaseViewLarge","header","actualOutputHead","actualOutputVal","testCase","isModal","actualOutput","toDateString","TestCaseViewModal","status","mapStatus","TestCasePage","onBack","tc","newTc","aria-label","filter","aria-hidden","CreateQuestion","description","functionName","returnDescription","currentInputName","currentInputDescription","currentInputType","page","testcases","popUps","handleAddInput","inputName","inputDescription","inputType","newPopUps","popLast","int","float","bool","string","question","checkVaild","getFunctionType","owenr_id","aria-describedby","handleTypeSelection","newInputs","postCurrentQuestion","QuestionDesc","Editor","selectedLang","editor","cancel","onCodeChange","mustInclude","split","lang","extraTheme","onBeforeChange","onEditorChange","indentWithTabs","tabSize","indentUnit","lineWrapping","mode","getMode","lineNumbers","matchBrackets","matchhighlight","autoCloseBrackets","answers","detail","language","upvotes","downvotes","Answers","changeCode","answerList","answer","readOnly","warppedAnswers","questionId","TestCases","showAddTestCase","onTestCaseAdd","wrappedTestCase","question_id","getTestCases","QuestionContainer","activeTab","setActiveTab","location","useLocation","pathname","substring","lastIndexOf","sm","Nav","tabs","NavItem","classnames","active","TabContent","TabPane","tabId","offset","Button","color","warppedQuestionContainer","RunnerState","match","params","TestTracker","userCode","generatedCode","testCompletionTime","testPassed","TestCase","expectedOutput","onSuceess","onFailure","LetCodeToPythonCodeMapper","PythonTypeMapper","PythonLetCodeCodeMapperFuncName","PythonToLetCodeCodeMapper","testWarpingFunctionName","CoderunnerPythonImpl","UNINIT","interpreter_webworker","onStdout","onError","notifyRunnerState","currentTestTracker","resolveCurrentTracker","updateState","INITING","then","worker","default","addEventListener","onmessage","READY","handleMessage","onerror","handleError","postMessage","ERROR","COMPILING","s","testCasesInternalName","args","tcName","getVariableName","numTest","testWarperName","Promise","resolve","msg","RUNNING","testCaseNum","nameWanted","outputName","codeRuners","getCodeRunner","get","TestCaseViewSmall","role","xmlns","height","viewBox","d","selected","canSelect","_key","onSelect","checked","autoComplete","getHeader","getIconByStatus","AnswerQuestion","preferedLang","userId","supLang","func","langs","canSupportFunctionType","getSupportedLang","defaultLang","runner","setConsole","consoleOnMsg","consoleOnErr","starter","getStarterCode","store","JSON","parse","localStorage","getItem","localTestCase","setItem","stringify","supportedLang","concat","codeRunner","starterList","codeRunnerState","testCaseDetail","testCaseSortBy","testCasesView","runnerState","newLog","Math","max","messagesEnd","scrollIntoView","behavior","newCases","maxWidth","lastHistory","toLocaleString","sort","a","b","onTestCaseSelect","testcase","h","runOnce","init","TestToRun","newTestCases","onTestOut","pass","nnTc","newTcs","info","runTest","codeTacker","newHistory","unshift","onLangSelectChange","getMustIncludeStarter","clear","ref","el","Tabs","activeKey","Tab","eventKey","DropdownButton","variant","Dropdown","mapTestCases","mapHistory","removeItem","window","reload","getRecentTestInfo","disabled","toUpperCase","warppedAnswerQuestion","Flatten","App","exact","component","QuestionPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","_typeof","Symbol","iterator","constructor","__extends","_extendStatics","setPrototypeOf","__proto__","Array","p","__","create","defineProperty","exports","UnControlled","Controlled","cm","require","SERVER_RENDERED","navigator","global","Helper","equals","y","_this","ok","keys","tx","every","Shared","delegateCursor","position","scroll","focus","doc","getDoc","setCursor","delegateScroll","coordinates","scrollTo","delegateSelection","ranges","setSelections","selection","cursor","autoScroll","getOption","applyNext","next","preserved","autoCursor","applyUserDefined","wire","prop","on","event","onBlur","onContextMenu","onCopy","onCursor","getCursor","onCursorActivity","onCut","onDblClick","onDragEnter","onDragLeave","onDragOver","onDragStart","onDrop","onFocus","lineNumber","gutter","onGutterClick","EditorChangeEvent","onInputRead","onKeyDown","onKeyHandled","onKeyPress","onKeyUp","onMouseDown","onPaste","line","element","onRenderLine","onScroll","getScrollInfo","onSelection","onTouchStart","onUpdate","from","onViewportChange","_super","applied","appliedNext","appliedUserDefined","deferred","emulating","hydrated","initCb","editorDidConfigure","mounted","hydrate","_options","userDefinedOptions","defaults","some","setOption","mirror","resolveChange","initChange","lastLine","lastChar","getLine","replaceRange","ch","clearHistory","origin","undo","redo","text","getValue","mirrorChange","setHistory","getHistory","componentDidMount","defineMode","fn","shared","originalData","phantomChange","editorDidMount","componentDidUpdate","prevProps","componentWillUnmount","editorWillUnmount","shouldComponentUpdate","nextProps","nextState","createElement","self","continueChange","detached","onBeforeChangeCb","detach","editorDidAttach","editorDidDetach"],"mappings":"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","file":"static/js/main.f1c492bd.chunk.js","sourcesContent":["import { NavLink, NavDropdown } from 'react-bootstrap'\n// import { getUser } from '../../api_code/GetFromBackend'\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\n\nclass SignedInLinks extends Component {\n    render() {\n        const { user } = this.props;\n        return (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                    <NavLink as={Link} to=\"/newquestion\">New Question</NavLink>\n                </li>\n                <NavDropdown title={'Hi! ' + user.username} id=\"basic-nav-dropdown\" className=\"active\">\n                    <NavDropdown.Item as={Link} to=\"/myprofile\">My profile</NavDropdown.Item>\n                    {/* <NavDropdown.Item onClick={()=>handleLogout(this.props.user.username)}>Log out</NavDropdown.Item> */}\n                    <NavDropdown.Item onClick={console.log(\"log out\")}>Log out</NavDropdown.Item>\n                </NavDropdown>\n            </ul>\n        )\n    }\n}\n\n\nexport default SignedInLinks","import React, { Component } from 'react'\nimport {NavLink} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst SignedOutLinks = (props) => {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n                <NavLink as={Link} to=\"/signin_up\">Sign in/Sign up</NavLink>\n        </li>\n        </ul>\n    )\n}\nexport default SignedOutLinks","\nexport class Type { \n    static readonly INT: Type = new Type(\"int\");\n    static readonly FLOAT: Type = new Type(\"float\");\n    static readonly STRING: Type = new Type(\"string\");\n    static readonly BOOL: Type = new Type(\"bool\");\n    static DICT(keyType: Type, valueType: Type): Type { \n        if (![Type.INT, Type.FLOAT, Type.STRING, Type.BOOL].includes(keyType)) { \n            throw new Error(\"key must be immutable type\");\n        }\n        if (!keyType || !valueType) { \n            throw new Error(\"key and value type must be specified!\");\n        }\n        return new Type(\"dict\", keyType, valueType);\n    }\n    static LIST(valueType: Type): Type { \n        if (!valueType) {\n            throw new Error(\"value type must be specified!\");\n        }\n        return new Type(\"list\", undefined, valueType);\n    }\n\n    private constructor(public readonly selfType: string, public readonly keyType?: Type , public readonly valueType?: Type) { } \n}\n\n\nexport class VariableType {\n    constructor(public readonly name: string, public readonly type: Type) { }\n}\n\nexport class FunctionType {\n    constructor(public readonly name: string, public readonly paramsType: VariableType[], public readonly returnType: VariableType) { }\n}\n","import { Type } from \"../letcode-code-runner/type\"\n\nconst lag = 200\n\nconst users = [\n    {\n        username: 'username',\n        intro: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n        profilePic: '../../assets/placeholder.png'\n    }\n]\n\nexport function getUser(callback) { \n    setTimeout(() => {\n        callback(users[0]);\n    }, lag)\n}\n\nexport function getUserPostHistory(userId, callback) {\n    setTimeout(() => {\n        callback([{ \"id\": 1, \"title\": \"Palindrome Number\", \"description\": \"Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forw a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forwardard.\" },\n        { \"id\": 2, \"title\": \"Longest Substring Without Repeating Characters\", \"description\": \"Given a string s, find the length of the longest substring without repeating characters.\" },\n        { \"id\": 3, \"title\": \"Reverse Nodes in k-group\", \"description\": \"Given a linked list, reverse the nodes of a linked list k at a time and return its modified list.\" }]);\n    }, lag)\n}\n\n\nexport function getUserCollection(userId, callback) {\n    setTimeout(() => {\n        callback([{ \"id\": 1, \"title\": \"Palindrome Number\", \"description\": \"Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forw a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forwardard.\" },\n        { \"id\": 2, \"title\": \"Longest Substring Without Repeating Characters\", \"description\": \"Given a string s, find the length of the longest substring without repeating characters.\" },\n        { \"id\": 3, \"title\": \"Reverse Nodes in k-group\", \"description\": \"Given a linked list, reverse the nodes of a linked list k at a time and return its modified list.\" }]);\n    }, lag)\n}\n\n\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass FetchWrapper extends React.Component {\n\n    state = {\n        data: null,\n        fetchComplete: false,\n        authorized: false\n    };\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    onDataReady(data, authorized) {\n        this.setState({\n            data: data,\n            fetchComplete: true,\n            authorized: authorized\n        });\n    }\n\n    loadData() {\n        this.props.fetchData((data, authorized) => this.onDataReady(data, authorized));\n    }\n\n    render() {\n        if (this.state.fetchComplete) {\n            if (!this.props.private || this.state.authorized) {\n                return React.cloneElement(this.props.children, { data: this.state.data, history: this.props.history, loadData: () => this.loadData() });\n            }\n            this.props.history.replace(\"/signin_up\");\n        }\n        return null;\n    }\n}\n\nexport default withRouter(FetchWrapper);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { NavLink } from 'react-bootstrap'\r\nimport { getUser } from '../../api-calls/user-api-calls'\r\nimport FetchWrapper from \"../fetchWrapper\"\r\n\r\nconst Header = (props) => {\r\n    return ( \r\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light py-1\">\r\n        \r\n        <div className=\"navbar navbar-expand-md navbar-light bg-light\">\r\n            <NavLink className=\"navbar-brand mx-auto\" as={Link} to=\"/\">LetCode</NavLink>\r\n        </div>\r\n        <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            {props.data ? <SignedInLinks user={props.data}></SignedInLinks> : <SignedOutLinks></SignedOutLinks>}\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nfunction wrappedHeader() {\r\n  return <FetchWrapper fetchData={getUser}><Header /></FetchWrapper>;\r\n}\r\n\r\n\r\n\r\nexport default wrappedHeader;","import React, { Component } from 'react'\nimport { Form, Container, Row, Col } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport './MainLogin.css'\n\nclass SignIn extends Component {\n    state = {\n        username: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        // userSignIn(this.state).then(\n        //     res => {\n        //         if (res.status == 200){\n        //             alert('success')\n        //         }else{\n        //             alert('fail')\n        //         }\n        //     }\n        // )\n    }\n\n    render() {\n        return (\n            <div className=\"MainLogin-center\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h3>Sign In</h3>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Username\" id=\"username\" onChange={this.handleChange} />\n                                <Form.Text className=\"text-muted\">\n                                    We'll never share your email with anyone else.\n                        </Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" id=\"password\" onChange={this.handleChange} />\n                            </Form.Group>\n\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <button className=\"blue\" type=\"submit\" onClick={this.onSubmit}>\n                            Sign In\n                    </button>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(SignIn)","import React, { Component } from 'react'\nimport { Form, Container, Row, Col } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport './MainLogin.css'\n\nclass SignUp extends Component {\n    state = {\n        username: '',\n        password: '',\n        confirmPwd: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        if (!this.state.username  || !this.state.password || !this.state.confirmPwd) {\n            alert(\"Missing required information.\")\n        } \n        else if (this.state.password !== this.state.confirmPwd) {\n            alert(\"Confirmed password differ from the password.\")\n        } \n        else if (this.state.password.length <= 8){\n            alert(\"Password need to be no less than 8 characters!\")\n        }\n        else {\n            let user = {\n                username: this.state.username,\n                password: this.state.password,\n                intro: \"hi\",\n                profilePic: '../../assets/placeholder.png'\n            }\n            // postUser(user).then((res) => {\n            //     if (res.status == 200){\n            //         alert('Your account is successfully created!')\n            //     }\n            //     else{\n            //         console.log(res.status)\n            //         alert('Your username is already taken!')\n            //     }\n            // }\n            // )\n            \n            // console.log(\"i want to see this res status\", res)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"MainLogin-center\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h3>Sign Up</h3>\n                        </Col>\n\n                    </Row>\n                    <Row>\n\n                        <Col>\n                            <p>Please fill in this form to create an account!</p>\n                        </Col>\n                    </Row>\n\n                    <Form>\n                        <Form.Row>\n                            <Col>\n                                <Form.Control placeholder=\"Username\" id=\"username\" onChange={this.handleChange} />\n                            </Col>\n                        </Form.Row>\n                    </Form>\n                    <br />\n                    {/* <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control type=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={this.handleChange} />\n                            </Form.Group>\n                        </Col>\n                    </Row> */}\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" id=\"password\" onChange={this.handleChange} />\n                                <br></br>\n                                <Form.Control type=\"password\" placeholder=\"Confirm Password\" id=\"confirmPwd\" onChange={this.handleChange} />\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <button className=\"blue\" type=\"submit\" onClick={this.handleSubmit} >\n                            Sign Up\n                        </button>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default SignUp","import React from 'react'\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst MainLogin = () => {\n    return (\n        <Container>\n            <Row>\n                <Col><SignIn></SignIn></Col>\n                <Col><SignUp></SignUp></Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default MainLogin","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {Search, search} from '@icon-park/react'\nimport './cards.css'\n\n\nclass SearchBar extends Component {\n    render() {\n        return (\n            <Card className=\"shadow p-2 bg-white\" className=\"search-bar-background\"> \n            <InputBase className=\"search-input\"\n                placeholder=\"Search Question\"/>\n            <Search className=\"search-icon\" theme=\"outline\" size=\"30\" fill=\"#333\" onClick={()=>{console.log(\"search\")}}></Search>\n\n            </Card>        \n        )\n    }\n}\nexport default SearchBar;","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { NavLink, NavDropdown } from 'react-bootstrap'\n\nclass AllFilter extends Component {\n    constructor(props){\n        super(props)\n        this.titles = this.props.titles\n    }\n    render() {\n        return (\n            <div>\n                <NavDropdown title={this.titles.name} id=\"basic-nav-dropdown\" className=\"active\">\n                    <NavDropdown.Item >{this.titles.top}</NavDropdown.Item>\n                    {/* <NavDropdown.Item onClick={()=>handleLogout(this.props.user.username)}>Log out</NavDropdown.Item> */}\n                    <NavDropdown.Item>{this.titles.mid}</NavDropdown.Item>\n                    <NavDropdown.Item>{this.titles.bot}</NavDropdown.Item>\n                </NavDropdown>\n            </div>       \n        )\n    }\n}\nexport default AllFilter;","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { NavLink, NavDropdown } from 'react-bootstrap'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '10%',\n        margin: 9\n    },\n  }));\n\nclass Sortby extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <NavDropdown title=\"Sort by\" id=\"basic-nav-dropdown\" className=\"active\">\n                    <NavDropdown.Item >Most Popular</NavDropdown.Item>\n                    {/* <NavDropdown.Item onClick={()=>handleLogout(this.props.user.username)}>Log out</NavDropdown.Item> */}\n                    <NavDropdown.Item>Resently answered</NavDropdown.Item>\n                    {/* <NavDropdown.Item></NavDropdown.Item> */}\n                </NavDropdown>\n            </div>       \n        )\n    }\n}\nexport default Sortby;","import React, {useState} from 'react'\nimport { Star} from '@icon-park/react'\nimport { NavLink } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\n\nfunction TitleCard(props){\n\n\n  const [collection, setcollection] = useState(true)\n\n  var changeCollection = (e) => {\n    e.preventDefault()\n    if (collection === false){\n      setcollection(true)\n\n    }\n    else{\n      setcollection(false)\n    }\n    console.log(\"question status:\", collection)\n  }\n\n  const path ='/' + props.items._id + '/detail';\n\n    return (\n        <div className=\"card\"> \n        <div className=\"block star-icon mystar\">\n          <Star onClick={changeCollection} theme={collection ? \"outline\" : \"filled\"} size=\"30\" fill={collection ? \"#333\" : \"orange\" }/></div>  \n        <div className=\"card-body\" onClick={()=>console.log(\"question\")}>\n            <div className = \"col\">\n            <div className =\"row\">     \n              <NavLink as={Link} to={path}>{props.items.name}</NavLink>\n            </div>   \n            <br></br>\n            <div className=\"question-description\"> {props.items.desc} </div>\n            <br></br>\n            <div className=\"row\">\n              <div className=\"block upvote-number\">upvotes: </div>\n              <div className=\"block reply-number\">replies: </div>\n            </div>\n            </div>  \n          </div>       \n      </div>\n)\n}\n\nexport default TitleCard;\n","import React, {useState} from 'react'\nimport Card from 'react-bootstrap/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport \"./cards.css\"\nimport { Star} from '@icon-park/react'\n\n\nfunction DailyQuestionCard(props){\n    \n    \n    const [collection, setcollection] = useState(true)\n    var changeCollection = (e) => {\n        e.preventDefault()\n        if (collection == false){\n          setcollection(true)\n        }\n        else{\n          setcollection(false)\n        }\n        console.log(\"question of the day status:\", collection)\n      }\n    \n    return (\n        <Card>        \n        <CardContent>\n            <div className=\"row\">\n                <div classclassName=\"col\" >\n                <div className=\"block star-icon mystar\">\n                        <Star theme={collection ? \"outline\" : \"filled\"} size=\"30\" fill={collection ? \"#333\" : \"orange\" } onClick={changeCollection}/></div>\n                    <div className=\"row\">\n                    <div className=\"block question-of-the-day-topic\"  onClick={()=>{console.log(\"this is question of the day\")}}>{props.items.title}</div>\n                    </div>   \n                    <br></br>\n                    <div className=\"question-description\"> {props.items.description} </div>\n                    <br></br>\n                    <div className=\"row\">\n              <div className=\"block upvote-number\">upvotes: </div>\n              <div className=\"block reply-number\">replies: </div>\n            </div>\n                </div>\n                <div className=\"col\">\n                    <div className=\"question-of-the-day-reply\">\n                        replies heree\n                        <br></br>\n                        and here\n                        <br></br>\n                        and here\n                        question reply\n                    </div>\n                </div>\n            </div>\n          </CardContent> \n        </Card>     \n    )\n}\n\nexport default DailyQuestionCard;\n","const lag = 200\n\n\nexport const testCases = [\n    {\n        _id: 0,\n        name: \"Empty Case\",\n        desc: \"No elements\",\n        owner_id: 0,\n        inputs: ['[]'],\n        output: '[]',\n        numRun: 4,\n        date: new Date().toString()\n    },\n    {\n        _id: 1,\n        name: \"Easy Case\",\n        desc: \"Only three elements\",\n        owner_id: 0,\n        inputs: ['[3,4,1]'],\n        output: '[1,3,4]',\n        numRun: 4,\n        date: new Date().toString()\n    },\n    {\n        _id: 2,\n        name: \"Medium Case\",\n        desc: \"Over ten elements\",\n        owner_id: 0,\n        inputs: ['[10,9,8,7,6,5,4,3,2,1]'],\n        output: '[1,2,3,4,5,6,7,8,9,10]',\n        numRun: 1,\n        date: new Date().toString()\n    },\n    {\n        _id: 3,\n        name: \"Hard Case\",\n        desc: \"contain negative elements\",\n        owner_id: 0,\n        inputs: ['[0,3,-1,10,-3,9,0]'],\n        output: '[-3,-1,0,0,3,9,10]',\n        numRun: 2,\n        date: new Date().toString()\n    },\n    {\n        _id: 4,\n        name: \"Medium case\",\n        desc: \"nums[0] + nums[1] == 9, we return [0, 1]\",\n        owner_id: 1,\n        inputs: ['[2,7,11,15]', '9'],\n        output: '[0,1]',\n        numRun: 2,\n        date: new Date().toString()\n    },\n    {\n        _id: 5,\n        name: \"Easy Case\",\n        desc: \"nums[0] + nums[1] == 6, we return [0, 1]\",\n        owner_id: 1,\n        inputs: ['[3,3]', '6'],\n        output: '[0,1]',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 6,\n        name: \"Easy Case\",\n        desc: \"nums[1] + nums[2] == 6, we return [1, 2]\",\n        owner_id: 1,\n        inputs: ['[3,2,4]', '6'],\n        output: '[1,2]',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 7,\n        name: \"Easy Case\",\n        desc: \"F(2) = F(1) + F(0) = 1 + 0 = 1.\",\n        owner_id: 2,\n        inputs: ['2'],\n        output: '1',\n        numRun: 2,\n        date: new Date().toString()\n    },\n    {\n        _id: 8,\n        name: \"Easy Case\",\n        desc: \"F(3) = F(2) + F(1) = 1 + 1 = 2.\",\n        owner_id: 2,\n        inputs: ['3'],\n        output: '2',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 9,\n        name: \"Easy Case\",\n        desc: \"F(4) = F(3) + F(2) = 2 + 1 = 3.\",\n        owner_id: 2,\n        inputs: ['4'],\n        output: '3',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 10,\n        name: \"Hard Case\",\n        desc: \"F(20) = F(19) + F(18) = 4181 + 2,584 = 6765.\",\n        owner_id: 2,\n        inputs: ['20'],\n        output: '6765',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 11,\n        name: \"Easy Case\",\n        desc: \"ascending order monotonic array\",\n        owner_id: 3,\n        inputs: ['[1,2,2,3]'],\n        output: 'true',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 12,\n        name: \"Easy Case\",\n        desc: \"descending order monotonic array\",\n        owner_id: 3,\n        inputs: ['[6,4,3,3,0]'],\n        output: 'true',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 13,\n        name: \"Easy Case\",\n        desc: \"[1,3,2] not monotonic array\",\n        owner_id: 3,\n        inputs: ['[1,3,2]'],\n        output: 'false',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 14,\n        name: \"Easy Case\",\n        desc: \"Same numbers\",\n        owner_id: 3,\n        inputs: ['[2,2,2]'],\n        output: 'true',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 15,\n        name: \"Easy Case\",\n        desc: \"n=10  There are 4 prime numbers less than 10, they are 2, 3, 5, 7.\",\n        owner_id: 4,\n        inputs: ['10'],\n        output: '4',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 15,\n        name: \"Easy Case\",\n        desc: \"n=0 There are no prime numbers less than 0\",\n        owner_id: 4,\n        inputs: ['0'],\n        output: '0',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 16,\n        name: \"Easy Case\",\n        desc: \"n=1 There are no prime numbers less than 1\",\n        owner_id: 4,\n        inputs: ['1'],\n        output: '0',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 17,\n        name: \"Easy Case\",\n        desc: \"s = letcode\",\n        owner_id: 5,\n        inputs: [\"'letcode'\"],\n        output: '1',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 18,\n        name: \"Medium Case\",\n        desc: \"s = abbcccddddeeeeedcba\",\n        owner_id: 5,\n        inputs: [\"'abbcccddddeeeeedcba'\"],\n        output: '5',\n        numRun: 3,\n        date: new Date().toString()\n    },\n    {\n        _id: 16,\n        name: \"Medium Case\",\n        desc: \"s = hooraaaaaaaaaaay\",\n        owner_id: 5,\n        inputs: [\"'hooraaaaaaaaaaay'\"],\n        output: '11',\n        numRun: 3,\n        date: new Date().toString()\n    },\n]\n\n\n\nexport function addTestCase(testCase, cb) { \n    testCase._id = testCases.length;\n    testCases.push(testCase);\n    setTimeout(() => {\n            if (cb)\n                cb(testCases.filter(tc => tc.owner_id === testCase.owenr_id));\n        }, lag)\n}\n\nexport function getTestCases(question_id, cb) {\n    setTimeout(() => {      \n            cb(testCases.filter(tc => tc.owner_id === question_id));\n        }, lag)\n\n}\n\n","import { Type, FunctionType, VariableType } from \"../letcode-code-runner/type\"\nimport { testCases } from './test-case-api-calls'\n\nconst lag = 200\n\nconst questions = [\n    {   \n        _id: 0,\n        functionType: new FunctionType(\"sortList\", [new VariableType(\"array\", Type.LIST(Type.INT))], new VariableType(\"return\", Type.LIST(Type.INT))),\n        name: \"Sort list\",\n        desc: \"computer science, arranging in an ordered sequence is called 'sorting'. Sorting is a common operation in many applications, and efficient algorithms to perform it have been developed.\",\n        date: new Date().toString(),\n        by: \"user32\",\n        numUpVote: 2,\n        numAnswers: 1\n    },\n    {\n        _id: 1,\n        functionType: new FunctionType(\"twoSum\", [new VariableType(\"nums\", Type.LIST(Type.INT)), new VariableType(\"target\", Type.INT)], new VariableType(\"return\", Type.LIST(Type.INT))),\n        name: \"Two Sum\",\n        desc: \"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\",\n        date: new Date().toString(),\n        by: \"user32\",\n        numUpVote: 3,\n        numAnswers: 1\n    },\n    {\n        _id: 2,\n        functionType: new FunctionType(\"fibonacciNumbers\", [new VariableType(\"N\", Type.INT)], new VariableType(\"return\", Type.INT)),\n        name: \"Fibonacci numbers\",\n        desc: \"The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1.\",\n        date: new Date().toString(),\n        by: \"user32\",\n        numUpVote: 3,\n        numAnswers: 1\n    },\n    {\n        _id: 3,\n        functionType: new FunctionType(\"monotonicArray\", [new VariableType(\"A\", Type.LIST(Type.INT))], new VariableType(\"return\", Type.BOOL)),\n        name: \"Monotonic Array\",\n        desc: \"An array is monotonic if it is either monotone increasing or monotone decreasing. An array A is monotone decreasing if for all i <= j, A[i] >= A[j]. Return true if and only if the given array A is monotonic.\",\n        date: new Date().toString(),\n        by: \"user32\",\n        numUpVote: 3,\n        numAnswers: 1\n    },\n\n    {\n        _id: 4,\n        functionType: new FunctionType(\"countPrimes\", [new VariableType(\"n\", Type.INT)], new VariableType(\"return\", Type.INT)),\n        name: \"Count Primes\",\n        desc: \"Count the number of prime numbers less than a non-negative number, n.\",\n        date: new Date().toString(),\n        by: \"user32\",\n        numUpVote: 5,\n        numAnswers: 1\n    }, \n    {\n        _id: 5,\n        functionType: new FunctionType(\"consecutiveCharacters\", [new VariableType(\"s\", Type.STRING)], new VariableType(\"return\", Type.INT)),\n        name: \"Consecutive Characters\",\n        desc: \"Given a string s, the power of the string is the maximum length of a non-empty substring that contains only one unique character. Return the power of the string.\",\n        date: new Date().toString(),\n        by: \"user32\",\n        numUpVote: 3,\n        numAnswers: 1\n    },\n]\n\n\n\nexport function getQuestion(callback, id) {\n    if (id === undefined) { \n        setTimeout(() => {\n            callback(questions);\n        }, lag)\n        return;\n    }\n    setTimeout(() => {\n        callback(questions[id]);\n    }, lag)\n}\n\nexport function postQuestion(question, callback) { \n    question._id = questions.length\n    question.date = new Date().toString();\n    question.numUpVote = 0;\n    question.numAnswers = 0;\n    question.by = \"user32\"\n    questions.push(question)\n    setTimeout(() => {\n        callback(question);\n    }, lag)\n}\n\n\nexport function getQuestionAllInfo(id, callback) { \n    setTimeout(() => {\n        console.log(id)\n        const data = { userId: 123, question: questions[id], testCases: testCases.filter(tc => tc.owner_id == id)}\n        callback(data, true);\n    }, lag)\n}\n","import React, { Component } from 'react'\nimport SearchBar from './SearchBar';\nimport AllFilter from './AllFilter';\nimport Sortby from './Sortby.js';\nimport TitleCard from './TitleCards';\nimport DailyQuestionCard from './DailyQuestionCard';\nimport { getQuestion } from '../../api-calls/question-api-calls'\nimport FetchWrapper from \"../fetchWrapper\"\nimport \"./MainPage.css\";\n\nclass MainPage extends Component {\n\n    options =\n        [\n            { name: \"Difficulty\", top: \"hard\", mid: \"medium\", bot: \"easy\" },\n            { name: \"Status\", top: \"Todo\", mid: \"Solved\", bot: \"Attempted\" }\n        ]\n    \n    render() {\n        return (\n            <div>\n                {/* <h1 className=\"question-of-the-day-title\">Question of the DAYYY</h1>\n                <div className=\"question-of-the-day-card\">\n                    <DailyQuestionCard items={{ \"id\": 2, \"title\": \"Longest Substring Without Repeating Characters\", \"description\": \"Given a string s, find the length of the longest substring without repeating characters.\" }} className=\"card\" />\n                </div> */}\n                <div className=\"search-bar\"><SearchBar></SearchBar></div>\n                <div className=\"row filter-rows\">\n                <div className=\"block difficulty-filter\"><AllFilter titles={this.options[0]}></AllFilter></div>\n                    <div className=\"block status-filter\"><AllFilter titles={this.options[1]}></AllFilter></div>\n                <div className=\"block sortby-filter\"><Sortby></Sortby></div>\n                </div>\n\n                {this.props.data.map((obj, ind) => <div className=\"question-card\" key={ind}><TitleCard items={obj} className=\"card\"/></div>)}\n            </div>\n        \n        )\n    }\n}\n\n\nfunction wrappedMainPage() {\n    return <FetchWrapper fetchData={getQuestion}><MainPage/></FetchWrapper>;\n}\n\n\nexport default wrappedMainPage;","export default __webpack_public_path__ + \"static/media/placeholder.a1c30e1f.png\";","import React, { Component } from 'react'\nimport { Card, ListGroup } from 'react-bootstrap'\nimport \"./profile.css\"\n\n\nclass Message extends Component {\n    state = {\n        messages:\n            [{ \"id\": 1, \"title\": \"message1\", \"content\": \"Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forw a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forwardard.\", time: '3 days ago', sender: 'sender1'},\n            { \"id\": 2, \"title\": \"message2\", \"content\": \"Given a string s, find the length of the longest substring without repeating characters.\", time: '3 days ago', sender: 'sender2' },\n            { \"id\": 3, \"title\": \"message3\", \"content\": \"Given a linked list, reverse the nodes of a linked list k at a time and return its modified list.\", time: '3 days ago', sender: 'sender3' }]\n    }\n\n    render() {\n        return (\n            <div class=\"list-group\">\n                {this.state.messages.map((message, index) => (\n                    <a key={ index } href=\"#\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n                        <div class=\"d-flex w-100 justify-content-between\">\n                            <h5 class=\"mb-1\">{message.title}</h5>\n                            <small>{message.time}</small>\n                        </div>\n                        <p class=\"mb-1\">{message.content}</p>\n                        <small>{message.sender}</small>\n                    </a>\n                )\n                )\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default Message \n","import React, { Component, useState } from 'react'\nimport {ListGroup} from 'react-bootstrap'\nimport { getUser, getUserCollection, getUserPostHistory } from '../../api-calls/user-api-calls'\nimport profilePic from '../../img_source/placeholder.png'\nimport TitleCard from '../mainpage/TitleCards'\nimport Message from './Message'\nimport FetchWapper from \"../fetchWrapper\"\nimport \"./profile.css\"\n\n\n\nfunction home(data) {\n    return (\n        <div className='col-10'>\n            <div className='row-3'>\n                <img className='profileImg' src={profilePic} alt=\"profile\"></img>\n                <h3 className='text-center'>Welcome back, user1</h3>\n            </div>\n            <div className='row-1'>\n            </div>\n            <div className='row-6'>\n                <div className='text-center'>\n                    <h3> message goes here....</h3>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction personalInfo(data) {\n    return (\n        <div className='col-10'>\n            <div className='row-3'>\n                <img className='profileImg' src={profilePic} alt=\"profile\"></img>\n                <h3 className='text-center'>Welcome back, user1</h3>\n            </div>\n            <div className='row-1'>\n            </div>\n            <div className='row-6'>\n                <div className='text-center'>\n                    <h3> username: this is username</h3>\n                    <h3> password: this is password</h3>\n                    <h3> email: this is email</h3>\n                    <h3> introduction: this is introduction</h3>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction PostHistroy(props) {\n    return (\n        <div className='col-10'>\n            {props.data.map((obj, ind) => <div style={{ marginLeft: '10%', width: '80%', padding: \"0.5%\" }} key={ind}><TitleCard items={obj} class=\"card\" /></div>)}\n        </div>\n    )\n}\n\nfunction replies(user) {\n    return (\n        <div className='col-10'>\n            <h3>this is replies</h3>\n            <Message></Message>\n        </div>\n    )\n}\n\nfunction MyCollection(props) {\n    return (\n        <div className='col-10'>\n            {props.data.map((obj, ind) => <div style={{ marginLeft: '10%', width: '80%', padding: \"0.5%\" }} key={ind}><TitleCard items={obj} class=\"card\" /></div>)}\n        </div>\n    )\n}\n\n\nclass Profile extends Component {\n    state = {\n        fileUploadState: \"\",\n        displayID: '1',\n    }\n\n\n    render() {\n        const user = this.props.data;\n        const toggle = tab => {\n            if (this.state.displayID !== tab){\n                this.setState({\n                    displayID: tab\n                })\n            };\n        }\n        return (\n            <div className=\"profile-container\">\n                <div className=\"row-full-screen\">\n                    <div className=\"col-2\">\n                        <ListGroup>\n                            <ListGroup.Item></ListGroup.Item>\n                            <ListGroup.Item action onClick={() =>  toggle('1')}>\n                                home\n                            </ListGroup.Item>\n                            <ListGroup.Item action onClick={() =>  toggle('2')}>\n                                personal info\n                            </ListGroup.Item>\n                            <ListGroup.Item action onClick={() => toggle('3')}>\n                                post history\n                            </ListGroup.Item>\n                            <ListGroup.Item action onClick={() => toggle('4')}>\n                                replies\n                            </ListGroup.Item>\n                            <ListGroup.Item action onClick={() => toggle('5')}>\n                                collections\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </div>\n                    {this.state.displayID === '1' && home(this.props.data)}\n                    {this.state.displayID === '2' && personalInfo(this.props.data)}\n                    {this.state.displayID === '3' && <FetchWapper fetchData={(cb) => getUserPostHistory(this.props.data._id, cb)}><PostHistroy/></FetchWapper>}\n                    {this.state.displayID === '4' && replies(this.props.data)}\n                    {this.state.displayID === '5' && <FetchWapper fetchData={(cb) => getUserCollection(this.props.data._id, cb)}><MyCollection/></FetchWapper>}\n                   \n                </div>\n            </div>\n        )\n    }\n}\n\nfunction wrappedProfile() {\n    return <FetchWapper fetchData={getUser}><Profile /></FetchWapper>;\n}\n\nexport default wrappedProfile\n","import { Type } from \"./type\"\n\nexport class CodeMapperAccumulator {\n    vars: string[] = [];\n    code: string = \"\"\n}\n\n// The accumlator(acc) can be useful if one line initialization of val is not supported by the target language\n// i.e let's say user's input is {\"a\": 1, \"b\": 2} and the target language don't support one line init of dict\n// we can only init a empty dict first, then insert all entries. Therefore we need append \"user_dict = new dict()\",\n// \"user_dict.insert(\"a\", 1)\" \"user_dict.insert(\"b\", \"2\")\" to acc.code; Append \"user_dict\" to acc.vars and return \n// \"user_dict\". However, if one line init is supported we can just return \"new dict {\"a\": 1, \"b\": 2}\" and don't use \n// the accmulator at all.\nexport class CodeMapper {\n    [key: string]: any;\n    constructor(public int_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public float_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public string_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public bool_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public dict_?: (val: Map<string, string>, acc: CodeMapperAccumulator) => string,\n        public list_?: (val: string[], acc: CodeMapperAccumulator) => string,\n    ) { }\n\n    mapCode(input: string, type: Type, acc?: CodeMapperAccumulator): string {\n        if (!acc)\n            acc = new CodeMapperAccumulator();\n        if (input.length === 0)\n            throw new Error(\"input is empty\");\n\n        if (!this[type.selfType + \"_\"])\n            throw new Error(type.toString() + \" is not supported\");\n\n        if (type.selfType === \"dict\") {\n            if (input[0] !== \"{\" || input[input.length - 1] !== \"}\")\n                throw new Error(\"expect dict, got \" + input);\n            const codeMap = new Map<string, string>();\n            if (input.length === 2) \n                return this.dict_!(codeMap, acc);\n            for (let kv of splitOutterMost(input.slice(1, -1), \",\")) {\n                const key_value = splitOutterMost(kv, \":\");\n                if (key_value.length !== 2)\n                    throw new Error(\"expect key value pair but got \" + kv);\n                codeMap.set(this.mapCode(key_value[0], type.keyType!, acc),\n                    this.mapCode(key_value[1], type.valueType!, acc));\n            }\n            return this.dict_!(codeMap, acc);\n        }\n        if (type.selfType === \"list\") {\n            if (input[0] !== \"[\" || input[input.length - 1] !== \"]\")\n                throw new Error(\"expect list, got \" + input);\n            if (input.length === 2) \n                return this.list_!([], acc);\n            const codeList = splitOutterMost(input.slice(1, -1), \",\")\n                .map<string>(x => this.mapCode(x, type.valueType!, acc));\n            return this.list_!(codeList, acc);\n        }\n        return this[type.selfType + \"_\"](input, acc);\n    }\n}\n\nexport class TypeMapper {\n    [key: string]: any;\n    constructor(public int_?: () => string,\n        public float_?: () => string,\n        public string_?: () => string,\n        public bool_?: () => string,\n        public dict_?: (key: string, value: string) => string,\n        public list_?: (value: string) => string,\n    ) { }\n\n    mapType(type: Type): string {\n        if (!this[type.selfType + \"_\"])\n            throw new Error(type.selfType + \" is not supported\");\n\n        if (type.selfType === \"dict\") {\n            return this.dict_!(this.mapType(type.keyType!), this.mapType(type.valueType!));\n        }\n        if (type.selfType === \"list\") {\n            return this.list_!(this.mapType(type.valueType!));\n        }\n        return this[type.selfType + \"_\"]();\n    }\n\n    canBeMapped(type: Type): boolean {\n        if (type.selfType === \"dict\") {\n            return this.dict_ !== undefined && this.canBeMapped(type.keyType!) && this.canBeMapped(type.valueType!);\n        }\n        if (this.selfType === \"list\") {\n            return this.list_ !== undefined && this.canBeMapped(type.valueType!);\n        }\n        return this[type.selfType + \"_\"] !== undefined;\n    }\n}\n\nfunction isPair(str1: string, str2: string) { \n    let l = [str1, str2];\n    if (l.includes(\"{\") && l.includes(\"}\"))\n        return true;\n    if (l.includes(\"[\") && l.includes(\"]\"))\n        return true;\n    if (l.includes(\"(\") && l.includes(\")\"))\n        return true;\n    return false;\n}\n\nfunction splitOutterMost(str: string, by: string): string[] {\n    const strList: string[] = [];\n    const brackets: string[] = [];\n    let last = 0;\n    for (let i = 0; i < str.length; i++) { \n        if (str[i] === by && brackets.length === 0) { \n            strList.push(str.slice(last, i).trim());\n            last = i + 1;\n        }\n        else if ([\"[\", \"]\", \"{\", \"}\", \"(\", \")\"].includes(str[i])) {\n            if (isPair(str[i], brackets[brackets.length - 1]))\n                brackets.pop()\n            else brackets.push(str[i]);\n        }\n    }\n    strList.push(str.slice(last).trim());\n    return strList\n}\n","import { CodeMapper, TypeMapper } from \"./mapper\"\n\n// this is an example of how code mapping work, we are mapping user's input to LetCode standard form(it's syntex is similar to python)\n// It checkes if user's input can be mapped to this type during the mapping.\nconst mapDict = (val: Map<string, string>) => {\n    const pairs: String[] = []\n    val.forEach((v, k) => pairs.push(k + \":\" + v))\n    return \"{\" + pairs.join(\",\") + \"}\"\n}\n\nconst mapList = (val: string[]) => {\n    return \"[\" + val.join(\",\") + \"]\";\n}\n\nconst mapInt = (val: string) => {\n    if (!(/^\\-?(0|[1-9]\\d*)$/).test(val))\n        throw new Error(\"expect int, got \" + val);\n    return val\n}\n\nconst mapFloat = (val: string) => {\n    if (!(/^\\-?[\\d]*(\\.[\\d]+)?$/g).test(val))\n        throw new Error(\"expect float, got \" + val);\n    const f = String(parseInt(val));\n    if (f === val)\n        return f + \".0\";\n    return String(parseFloat(val));\n}\n\nconst mapString = (val: string) => {\n    if (val.length < 2 || (val[0] !== val[val.length - 1])|| (val[0] !== \"\\'\" && val[0] !== \"\\\"\"))\n        throw new Error(\"expect string, got \" + val);\n    return \"'\" + val.slice(1, -1) + \"'\";\n}\n\nconst mapBool = (val: string) => {\n    if (![\"True\", \"False\", \"true\", \"false\"].includes(val))\n        throw new Error(\"expect boolean, got \" + val);\n    if ([\"True\", \"true\"].includes(val))\n        return \"true\";\n    return \"false\";\n}\n\nconst StringToLetCodeCodeMapper = new CodeMapper(mapInt, mapFloat, mapString, mapBool, mapDict, mapList)\n \n// This is the type annotations mapping of LetCode standard form\nconst LetCodeTypeMapper =\n    new TypeMapper(\n        () => \"int\",\n        () => \"float\",\n        () => \"string\",\n        () => \"bool\",\n        (key, val) => \"dict<\" + key + \",\" + val + \">\",\n        (val) => \"list<\" + val + \">\"\n    )\n\nexport { StringToLetCodeCodeMapper, LetCodeTypeMapper }\n \n","import React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Type } from '../../letcode-code-runner/type'\nimport { LetCodeTypeMapper } from \"../../letcode-code-runner/letcode-mapper\"\n\n\nclass TypePopup extends React.Component {\n\n    state = {\n        keyType: null,\n        valueType: null,\n    }\n\n    setKey(e) {\n        this.setState({\n            keyType: {\n                \"int\": Type.INT,\n                \"float\": Type.FLOAT,\n                \"bool\": Type.BOOL,\n                \"string\": Type.STRING\n            }[e.target.value]\n        });\n    }\n\n    setValue(e, pushModal) {\n        if (e.target.value === \"dict\" || e.target.value === \"list\") {\n            pushModal(e.target.value, value => {\n                this.setState({ valueType: value });\n            });\n        }\n        else { \n            this.setState({\n                valueType: {\n                    \"int\": Type.INT,\n                    \"float\": Type.FLOAT,\n                    \"bool\": Type.BOOL,\n                    \"string\": Type.STRING\n                }[e.target.value]\n            });\n        }\n        \n    }\n\n    getBody(type, pushModal) {\n        const keyTypeStr = this.state.keyType ? LetCodeTypeMapper.mapType(this.state.keyType) : \"selected\" \n        const valueTypeStr = this.state.valueType ? LetCodeTypeMapper.mapType(this.state.valueType) : \"selected\"\n        if (type === \"dict\") {\n            return (\n                <div>\n                    {getTypeselectionFrom(this.setKey.bind(this), \"Select Key Type\", keyTypeStr, [\"int\", \"float\", \"string\", \"bool\"])}\n                    {getTypeselectionFrom(e => this.setValue(e, pushModal), \"Select Value Type\", valueTypeStr, [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"])}\n                </div>\n            )\n        }\n        return getTypeselectionFrom(e => this.setValue(e, pushModal), \"Select Key Type\", valueTypeStr, [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"] )\n    }\n   \n    render() {\n\n        const {\n            type,\n            onComplete,\n            onCancel,\n            pushModal\n        } = this.props;\n\n\n        return (\n            <Modal\n                show={true}\n                size=\"md\"\n                onHide={onCancel}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        {type === \"dict\" ? \"Specify key and value type of dict\" : \"Specify value type of list\"}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.getBody(type, pushModal)}\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"bg-secondary\" onClick={onCancel}>\n                        Close\n                    </button>\n                    <button className=\"btn btn-primary\" onClick={() => { \n                        if (type === \"list\") {\n                            onComplete(Type.LIST(this.state.valueType));\n                        }\n                        else if (type === \"dict\") { \n                            onComplete(Type.DICT(this.state.keyType, this.state.valueType));\n\n                        }\n                        onCancel();\n                    }}>\n                        Done\n                    </button>\n                </Modal.Footer>\n            </Modal>)\n    }\n}\n\nfunction getTypeselectionFrom(onSelected, defaultValue, selectedValue, options, id) {\n    if (selectedValue !== \"selected\" && !options.includes(selectedValue)) { \n        options.push(selectedValue);\n    }\n    return (\n        <div className=\"col col-md-4\">\n            <select className=\"custom-select\" id={id} onChange={onSelected} value={selectedValue}>\n                <option value=\"selected\">{defaultValue}</option>\n                {options.map(o => <option value={o}>{o}</option> )}\n            </select>\n        </div>\n    )\n}\n\n\nexport { TypePopup, getTypeselectionFrom };\n","import React from \"react\"\nimport { Modal } from \"react-bootstrap\"\nimport { StringToLetCodeCodeMapper, LetCodeTypeMapper} from \"../../letcode-code-runner/letcode-mapper\"\n\n\n\nclass AddtestCaseForm extends React.Component { \n    constructor(props) { \n        super(props)\n        const vars = props.functionType.paramsType.map(x => {\n            return {\n                name: x.name,\n                type: x.type,\n                userIn: \"\",\n                error: \"\"\n            }\n        });\n        vars.push({\n            name: \"return\",\n            type: props.functionType.returnType.type,\n            userIn: \"\",\n            error: \"\",\n            isReturn: true\n        });\n        this.state = {\n            upload: false,\n            vars: vars,\n            name: \"\",\n            nameError: \"\",\n            desc: \"\",\n            descError: \"\",\n            upload: false\n        }\n    }\n\n    updateVars(varsCp, target, field, update) { \n        let newT = { ...target };\n        newT[field] = update;\n        if (field !== \"error\")  \n            newT.error = \"\";\n        varsCp[this.state.vars.indexOf(target)] = newT\n        return varsCp;\n    }\n\n\n    mapToGroup(varType, ind) { \n        return (\n            <div className=\"form-group\" key={ind}>\n                <label htmlFor={varType.name}>{varType.name + \": \" + LetCodeTypeMapper.mapType(varType.type)}</label>\n                <input type=\"text\" className={\"form-control \" + (varType.error !== \"\" ? \"is-invalid\" : \"\")} id={varType.name + (!varType.isReturn ? \"-input\" : \"\")} required onChange={(e) => {\n                    const varsCp = [...this.state.vars];\n                    for (let ty of this.state.vars) {\n                        if (ty.name + \"-input\" === e.target.id || (e.target.id === \"return\" && ty.name === \"return\")) {\n                            this.setState({ vars: this.updateVars(varsCp, ty, \"userIn\", e.target.value) });\n                            return;\n                        }\n                    }\n                }} />\n                {varType.error !== \"\" ?\n                    <div className=\"text-danger small\">\n                        {varType.error}\n                    </div> : \"\"\n                }\n            </div>\n        );\n    }\n\n    render() {\n        const { functionType, onAdd, local } = this.props;\n        \n        return (\n            <form>\n                <div className=\"form-group\">\n                    <label htmlFor=\"add-testcase-name\">Name:</label>\n                    <input className={\"form-control \" + (this.state.nameError !== \"\" ? \"is-invalid\" : \"\")} id=\"add-testcase-name\" required onChange={(e) =>\n                    { this.setState({ name: e.target.value, nameError:\"\" }) }} />\n                    {this.state.nameError !== \"\" ?\n                        <div className=\"text-danger small\">\n                            {this.state.descError}\n                        </div> : null\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"add-testcase-desc\">Description:</label>\n                    <textarea rows=\"4\" className={\"form-control \" + (this.state.descError !== \"\" ? \"is-invalid\" : \"\")} id=\"add-testcase-desc\" required onChange={(e) =>\n                    { this.setState({ desc: e.target.value, descError:\"\" }) }} />\n                    {this.state.descError !== \"\" ?\n                        <div className=\"text-danger small\">\n                            {this.state.descError}\n                        </div> : null\n                    }\n                </div>\n                <div className=\"form-row\">\n                    <h5>Inputs:</h5>\n                </div>\n                {this.state.vars.map((x, ind) => !x.isReturn ? this.mapToGroup(x, ind) : null)}\n                <div className=\"form-row\">\n                    <h5>Output:</h5>\n                </div>\n                {this.state.vars.map((x, ind) => x.isReturn ? this.mapToGroup(x, ind) : null)}\n                <div className=\"form-row float-right mr-1\">\n                    {local ?\n                        <div className=\"form-check mr-4\">\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"testcase-to-server\" onChange={\n                                () => this.setState({ upload: !this.state.upload })\n                            } />\n                            <label className=\"form-check-label\" htmlFor=\"testcase-to-server\">\n                                Upload this test case to server\n                            </label>\n                        </div> : null}\n                    <button className=\"btn btn-primary\" onClick={(e) => { \n                        e.preventDefault();\n                        let result = {name:this.state.name, desc:this.state.desc, inputs:[], output:\"\", isLocal:!this.state.upload };\n                        let allPass = true;\n                        let varsCp = [...this.state.vars];\n                        let nameError = \"\"\n                        let descError = \"\";\n                        const notEmpty = \"this field cannot be empty!\";\n                        if (this.state.name === \"\") {\n                            nameError = notEmpty;\n                            allPass = false;\n                        }  \n                        if (this.state.desc === \"\") { \n                            descError = notEmpty;\n                            allPass = false;\n                        }\n                            \n                        for (let vt of this.state.vars) { \n                            if (vt.userIn === \"\") { \n                                this.updateVars(varsCp, vt, \"error\", notEmpty);\n                                allPass = false;\n                                continue;\n                            }\n                            try {\n                                let formatted = (StringToLetCodeCodeMapper.mapCode(vt.userIn, vt.type));\n                                if (vt.isReturn)\n                                    result.output = formatted;\n                                else\n                                    result.inputs.push(formatted);\n                            }\n                            catch (err) { \n                                this.updateVars(varsCp, vt, \"error\", err.message);\n                                allPass = false;\n                            }\n                        }\n                        if (allPass) { \n                            onAdd(result);\n                            return;\n                        }\n                        this.setState({ nameError: nameError, descError:descError, vars:varsCp })\n                    }}>Add</button>\n                </div>\n            </form>\n        );\n    }\n}\n\n\nclass AddTestCaseModal extends React.Component {\n\n    render() {\n        const { show, functionType, onAdd, onHide, local } = this.props;\n        return (\n            <Modal\n                size={\"lg\"}\n                show={show}\n                onHide={onHide}\n                centered\n            >\n                <Modal.Header closeButton>\n                   <h5>New Test Case</h5>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <AddtestCaseForm functionType={functionType} onAdd={onAdd} local={local} />\n                </Modal.Body>\n\n\n            </Modal>\n        )\n\n    }\n}\n\nexport { AddTestCaseModal, AddtestCaseForm };","import React from \"react\"\nimport { Modal } from \"react-bootstrap\"\n\n\nclass TestCaseViewLarge extends React.Component {\n\n    render() {\n        const { testCase, functionType, isModal } = this.props;\n        let header;\n        if (!isModal) {\n            header =\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h5>{testCase.name} </h5>\n                    </div>\n                </div>\n        }\n        let actualOutputHead;\n        let actualOutputVal;\n        if (testCase.actualOutput) {\n            actualOutputHead =\n                <div className=\"col text-info\">\n                    Actual Output:\n                </div>;\n            actualOutputVal =\n                <div className=\"col\">\n                    {testCase.actualOutput}\n                </div>\n        }\n\n        return <div className=\"container-fluid\">\n            {header}\n            <div className=\"row\">\n                <div className=\"col  bg-light rounded p-2\">\n                    {testCase.desc}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col small text-muted pt-1 border-bottom\">\n                    Submitted on {new Date(testCase.date).toDateString()}, {testCase.numRun} runs\n                </div>\n            </div>\n            <div className=\"row mt-2\">\n                <div className=\"col text-info\">\n                    Inputs:\n                </div>\n                <div className=\"col text-info\">\n                    Expected Output:\n                </div>\n                {actualOutputHead}\n            </div>\n            <div className=\"row mt-2\">\n                <div className=\"col\">\n                    {testCase.inputs.map((x, ind) => <p key={ind}>{functionType.paramsType[ind].name + \": \" + x}</p>)}\n                </div>\n                <div className=\"col\">\n                    {testCase.output}\n                </div>\n                {actualOutputVal}\n            </div>\n        </div>\n\n    }\n}\n\n\nclass TestCaseViewModal extends React.Component {\n\n    mapStatus(status) {\n        if (status === \"pass\") {\n            return <h6 className=\"text-white bg-success ml-3 p-1 rounded\">Passed </h6>;\n        }\n        if (status === \"fail\") {\n            return <h6 className=\"text-white bg- bg-danger ml-3 p-1 rounded\">Failed </h6>\n        }\n        if (status === \"running\") {\n            return <h6 className=\"text-white bg- bg-secondary ml-3 p-1 rounded\">Running </h6>\n        }\n        return null;\n    }\n\n    render() {\n        const { testCase, functionType, onHide } = this.props;\n        if (!testCase) {\n            return null;\n        }\n        return (\n            <Modal\n                size={testCase.actualOutput ? \"lg\" : \"md\"}\n                show={true}\n                onHide={onHide}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <h5>Test Case: {testCase.name} </h5>\n                    {this.mapStatus(testCase.status)}\n                </Modal.Header>\n\n                <Modal.Body>\n                    <TestCaseViewLarge testCase={testCase} functionType={functionType} isModal={true} />\n                </Modal.Body>\n\n            </Modal>\n        )\n\n    }\n}\n\nexport { TestCaseViewLarge, TestCaseViewModal };","import React from \"react\";\nimport { AddtestCaseForm } from \"../test-case/add-test-case\";\nimport { TestCaseViewLarge } from \"../test-case/test-case-view-lg\";\n\nclass TestCasePage extends React.Component {\n  state = {\n    testCases: [],\n  };\n\n  render() {\n    const { functionType, onBack, onSubmit } = this.props;\n    return (\n      <div className=\"container\">\n        <h2 className=\"mt-2\">2. Add Test Case To Your Question</h2>\n        <div className=\"row mb-4\">\n          <div className=\"col-12\">\n            <AddtestCaseForm\n              functionType={functionType}\n              local={false}\n              onAdd={(tc) => {\n                const newTc = [...this.state.testCases];\n                console.log(tc);\n                newTc.push(tc);\n                this.setState({ testCases: newTc });\n              }}\n            />\n          </div>\n        </div>\n\n        {this.state.testCases.length === 0 ? (\n          <div className=\"row bg-light p-4 my-2\">\n            <h5 className=\"center\"> No Test Case Yet</h5>\n          </div>\n        ) : (\n          this.state.testCases.map((x, ind) => (\n            <div className=\"row card p-2 my-2\" key={ind}>\n              <div className=\"col\">\n                <button\n                  type=\"button\"\n                  className=\"close float-right\"\n                  aria-label=\"Close\"\n                  onClick={e =>\n                    this.setState({\n                      testCases: this.state.testCases.filter((x, i) => String(i) !== e.target.id)\n                    })\n                  }\n                >\n                  <span aria-hidden=\"true\" id={ind}>\n                    &times;\n                  </span>\n                </button>\n              </div>\n\n              <TestCaseViewLarge\n                testCase={x}\n                functionType={functionType}\n                isModal={false}\n              />\n            </div>\n          ))\n        )}\n            <button className=\"btn btn-link mb-5 mt-2 \" onClick={onBack}>{\"<<\"} Back</button>\n            <button className=\"btn btn-primary float-right mb-5 mt-2\" onClick={() => onSubmit(this.state.testCases)}>Post Question</button>\n       \n      </div>\n    );\n  }\n}\n\nexport default TestCasePage;\n","import React, { Component } from \"react\";\nimport { TypePopup, getTypeselectionFrom } from \"./type-popup\";\nimport { Type } from \"../../letcode-code-runner/type\";\nimport { LetCodeTypeMapper } from \"../../letcode-code-runner/letcode-mapper\";\nimport { FunctionType, VariableType } from \"../../letcode-code-runner/type\";\nimport TestCasePage from \"./create-question-testcase\";\nimport { postQuestion } from \"../../api-calls/question-api-calls\"\nimport { addTestCase } from \"../../api-calls/test-case-api-calls\";\n\nclass CreateQuestion extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    functionName: \"\",\n    returnDescription: \"\",\n    returnType: null,\n    currentInputName: \"\",\n    currentInputDescription: \"\",\n    currentInputType: null,\n    page: 0,\n    inputs: [],\n    testcases: [],\n    popUps: []\n  };\n\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  pushModal(type, onComplete) {\n    const newPopUps = this.state.popUps;\n    newPopUps.push(() => (\n      <TypePopup\n        type={type}\n        onComplete={onComplete}\n        onCancel={this.popLast.bind(this)}\n        pushModal={this.pushModal.bind(this)}\n      />\n    ));\n    this.setState({ popUps: newPopUps });\n  }\n\n  popLast() {\n    const newPopUps = this.state.popUps;\n    newPopUps.pop();\n    this.setState({ popUps: newPopUps });\n  }\n\n  handleTypeSelection(e) {\n    if (e.target.value === \"dict\" || e.target.value === \"list\") {\n      this.pushModal(e.target.value, (type) => {\n        this.setState({ [e.target.id]: type });\n      });\n    } else {\n      this.setState({\n        [e.target.id]: {\n          int: Type.INT,\n          float: Type.FLOAT,\n          bool: Type.BOOL,\n          string: Type.STRING,\n        }[e.target.value],\n      });\n    }\n  }\n\n  handleAddInput = (e) => {\n    e.preventDefault();\n    console.log(\"add input\");\n    const inputs = [\n      ...this.state.inputs,\n      { inputName: \"\", inputDescription: \"\", inputType: null },\n    ];\n    this.setState({\n      inputs: inputs,\n    });\n  };\n\n  getFunctionType() { \n    return new FunctionType(this.state.functionName, this.state.inputs.map(\n      x => new VariableType(x.inputName, x.inputType)\n    ),\n    new VariableType(\"return\", this.state.returnType));\n  }\n\n  postCurrentQuestion(testCases) { \n    this.checkVaild();\n    postQuestion({\n      functionType: this.getFunctionType(),\n      name: this.state.title,\n      desc: this.state.description\n    }, question => { \n        testCases.forEach(tc => {\n          tc.owner_id = question._id;\n          addTestCase(tc);\n        });\n        this.props.history.push(\"/\");\n    })\n  }\n\n  checkVaild() { \n    if (this.state.title === \"\"\n      || this.state.description === \"\"\n      || this.state.functionName === \"\"\n      || this.state.returnType === null\n      || this.state.returnDescription === \"\"\n    ) { \n      alert(\"Please fill all fields \")\n      return false;\n    }\n    if (this.state.inputs.length === 0) { \n      alert(\"The function needs to have at least one input!\")\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    return this.state.page === 0 ? (\n      <div className=\"container\">\n        <div className=\"row mt-2\">\n          <div className=\"col\">\n            <h2>1. Describe Your Question</h2>\n          </div>\n        </div>\n        <form>\n          <label htmlFor=\"title\" className=\"mt-2\">\n            Title:\n          </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Enter title\"\n            id=\"title\"\n            value={this.state.title}\n            onChange={this.handleChange.bind(this)}\n          />\n          <label htmlFor=\"description\" className=\"mt-2\">\n            Description:\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"description\"\n            placeholder=\"Enter description here\"\n            value={this.state.description}\n            onChange={this.handleChange.bind(this)}\n            rows={10}\n          />\n\n          <label htmlFor=\"create-question-function\" className=\"mt-3\">\n            <h4>Describe Your Function:</h4>\n          </label>\n          <div\n            className=\"create-question-function-div\"\n            id=\"create-question-function\"\n          >\n            <div className=\"create-question-function-name\">\n              <label htmlFor=\"functionName\">Function Name:</label>\n              <input\n                id=\"functionName\"\n                className=\"form-control\"\n                aria-describedby=\"functionNameHint\"\n                value={this.state.functionName}\n                onChange={this.handleChange.bind(this)}\n              />\n              <small id=\"functionNameHint\" className=\"text-muted\">\n                Must be 4-20 characters long. You can use whatever naming\n                convention you like, but no space is allowed.\n              </small>\n            </div>\n\n            <label htmlFor=\"create-question-input\" className=\"mt-2\">\n              Input parameters:\n            </label>\n            <div className=\"form-row\" id=\"create-question-input\">\n              {getTypeselectionFrom(\n                this.handleTypeSelection.bind(this),\n                \"Select Input Type\",\n                this.state.currentInputType\n                  ? LetCodeTypeMapper.mapType(this.state.currentInputType)\n                  : \"selected\",\n                [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"],\n                \"currentInputType\"\n              )}\n\n              <div className=\"col col-md-2\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"currentInputName\"\n                  placeholder=\"name\"\n                  value={this.state.currentInputName}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n              <div className=\"col col-md-5\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"currentInputDescription\"\n                  placeholder=\"description of this input parameter\"\n                  value={this.state.currentInputDescription}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n              <div className=\"col col-md-1\">\n                <button\n                  className=\"btn btn-outline-primary\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    if (\n                      !this.state.currentInputType ||\n                      this.state.inputs.filter(\n                        (x) => x.inputName === this.state.currentInputName\n                      ).length ||\n                      this.state.currentInputName === \"\"\n                    ) {\n                      return;\n                    }\n                    const newInputs = [...this.state.inputs];\n                    newInputs.push({\n                      inputName: this.state.currentInputName,\n                      inputDescription: this.state.currentInputDescription,\n                      inputType: this.state.currentInputType,\n                    });\n                    this.setState({\n                      inputs: newInputs,\n                      currentInputName: \"\",\n                      currentInputType: null,\n                      currentInputDescription: \"\",\n                    });\n                  }}\n                >\n                  +\n                </button>\n              </div>\n            </div>\n            <div className=\"form-row justify-content-center mt-2 p-2 bg-light\">\n              {this.state.inputs.length === 0 ? (\n                <h5 className=\"text-secondary\">No input parameter</h5>\n              ) : (\n                <ul class=\"list-group pt-2 col-12\">\n                  {this.state.inputs.map((x) => (\n                    <li class=\"list-group-item\" key={x.inputName}>\n                      {x.inputName}:{\" \"}\n                      <text className=\"text-info px-2 bg-light mx-1\">\n                        {LetCodeTypeMapper.mapType(x.inputType)}\n                      </text>\n                      | Description:\n                      <text className=\"text-secondary ml-2\">\n                        {x.inputDescription}{\" \"}\n                      </text>\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        aria-label=\"Close\"\n                        onClick={(e) =>\n                          this.setState({\n                            inputs: this.state.inputs.filter(\n                              (x) => x.inputName !== e.target.id\n                            ),\n                          })\n                        }\n                      >\n                        <span aria-hidden=\"true\" id={x.inputName}>\n                          &times;\n                        </span>\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n\n            <label htmlFor=\"create-question-return\" className=\"mt-2\">\n              Return:\n            </label>\n            <div className=\"form-row\" id=\"create-question-return\">\n              {getTypeselectionFrom(\n                this.handleTypeSelection.bind(this),\n                \"Select Return Type\",\n                this.state.returnType\n                  ? LetCodeTypeMapper.mapType(this.state.returnType)\n                  : \"selected\",\n                [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"],\n                \"returnType\"\n              )}\n              <div className=\"col col-md-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"returnDescription\"\n                  placeholder=\"description of the return value\"\n                  value={this.state.returnDescription}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n            </div>\n          </div>\n          <button\n            className=\"btn btn-link mt-3 mb-5 float-right\"\n            onClick={(e) => {\n              e.preventDefault();\n              if (this.checkVaild())\n                this.setState({ page: this.state.page + 1 });\n            }}\n          >\n            Next &gt;&gt;\n          </button>\n        </form>\n        {this.state.popUps.map((x) => x())}\n      </div>\n    ) : (\n      <TestCasePage\n        functionType={this.getFunctionType()}\n        onBack={() => this.setState({ page: 0 })}\n        onSubmit={this.postCurrentQuestion.bind(this)}\n      />\n    );\n  }\n}\n\nexport default CreateQuestion;\n","\nimport React, { Component } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\n\nclass QuestionDesc extends Component {\n\n    render() {\n        const question = this.props.question\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <br></br>\n                        <h4>Question: {question.title}</h4>\n                        <br></br>\n                        <p>{question.desc}</p>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n    \n}\n\nexport default QuestionDesc","import React from 'react';\nimport { Controlled as ControlledEditor } from '../../react-codemirror2/index'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/python/python'\nimport 'codemirror/mode/clike/clike'\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/search/match-highlighter'\n\n\nclass Editor extends React.Component {\n    \n    code = \"\"\n    getMode(selectedLang) { \n        if (selectedLang === \"Python\") {\n            return \"python\";\n        }\n        if (selectedLang === \"C\") { \n            return \"text/x-csrc\";\n        }\n        if (selectedLang  === \"C++\") { \n            return \"text/x-c++src\";\n        }\n        if (selectedLang  === \"Java\") {\n            return \"text/x-java\";\n        }\n        return \"\";\n    }\n\n    onEditorChange(editor, data, value, cancel) { \n        if (!this.props.onCodeChange || (this.props.mustInclude && !value.split(\"\\n\").includes(this.props.mustInclude))) {\n            cancel();\n        }\n        else { \n            this.props.onCodeChange(value);\n        }\n    }\n\n\n    render() { \n        const { code, lang, extraTheme } = this.props\n        return (\n            <div>\n                <ControlledEditor\n                    className=\"border border-gray\"\n                    onBeforeChange={this.onEditorChange.bind(this)}\n                    value={code}\n                    options={{\n                        indentWithTabs: true,\n                        tabSize: 4,\n                        indentUnit: 4,\n                        lineWrapping: true,\n                        mode: this.getMode(lang),\n                        lineNumbers: true,\n                        matchBrackets: true,\n                        matchhighlight: true,\n                        autoCloseBrackets: true,\n                        theme: \"default \" + (extraTheme ? extraTheme : \"\")\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Editor;","const lag = 200\n\n\nconst answers = [[{\n        user: {\n            username: 'user1',\n            profilePic: '../../assets/placeholder.png'\n        },\n        detail: {\n            code: `def sortList(self, array):\n    swapped = True\n    while swapped:\n        swapped = False\n        for i in range(len(array) - 1):\n            if array[i] > array[i + 1]:\n                # Swap the elements\n                array[i], array[i + 1] = array[i + 1], array[i]\n                # Set the flag to True so we'll loop again\n                swapped = True\n    return array`,\n            language: 'Python'\n        },\n        upvotes: 13,\n        downvotes: 1\n    }],\n\n    [{\n        user: {\n            username: 'user2',\n            profilePic: '../../assets/user3.jpg'\n        },\n        detail: {\n            code: `def twoSum(self, nums, target):\n    seen = {}\n    for i, v in enumerate(nums):\n        remaining = target - v\n        if remaining in seen:\n            return [seen[remaining], i]\n        seen[v] = i\n    return []`,\n            language: 'Python'\n        },\n        upvotes: 10,\n        downvotes: 2\n    }],\n\n    [{\n        user: {\n            username: 'user1',\n            profilePic: '../../assets/placeholder.png'\n        },\n        detail: {\n            code: `def fibonacciNumbers(self, N: int) -> int:\n    if N <= 1:\n        return N\n    return fibonacciNumbers(N-1) + fibonacciNumbers(N-2)`,\n            language: 'Python'\n        },\n        upvotes: 132,\n        downvotes: 11\n    }],\n    \n    [{\n        user: {\n            username: 'user2',\n            profilePic: '../../assets/user3.jpg'\n        },\n        detail: {\n            code: ` def monotonicArray(self, A):\n    if A[0] <= A[-1]:\n        A = A[::-1]\n    for i in range(1, len(A)):\n        if A[i-1] < A[i]:\n            return False\n    return True`,\n            language: 'Python'\n        },\n        upvotes: 10,\n        downvotes: 2\n    }],\n\n    [{\n        user: {\n            username: 'user1',\n            profilePic: '../../assets/user3.jpg'\n        },\n        detail: {\n            code: `def countPrimes(self, n):\n    if n <= 2:\n        return 0\n    dp = [True] * n\n    dp[0] = dp[1] = False\n    for i in range(2, n):\n        if dp[i]:\n            for j in range(i*i, n, i):\n                dp[j] = False\n    return sum(dp)`,\n            language: 'Python'\n        },\n        upvotes: 10,\n        downvotes: 2\n    }],\n\n    [{\n        user: {\n            username: 'user3',\n            profilePic: '../../assets/user3.jpg'\n        },\n        detail: {\n            code: `def consecutiveCharacters(self, s: str) -> int:\n    count = 0\n    max_count = 0\n    previous = None\n    for c in s:\n        if c == previous:\n            # if same as previous one, increase the count\n            count += 1\n        else:\n            # else, reset the count\n            previous = c\n            count = 1\n        max_count = max(max_count, count)\n    return max_count`,\n            language: 'Python'\n        },\n        upvotes: 10,\n        downvotes: 2\n    }],\n  \n  \n  \n]\n\nexport function getAnswers(questionId, callback) { \n    setTimeout(() => {\n        if (!answers[questionId]) {\n            callback([]);\n        }\n        else {\n            callback(answers[questionId])\n        }\n    }, lag)\n}\n    \n","import React, { Component } from 'react'\nimport Editor from './Editor'\nimport { UpOne, DownOne } from '@icon-park/react'\nimport \"./answers.css\"\nimport profilePic from '../../img_source/placeholder.png'\nimport FetchWapper from \"../fetchWrapper\"\nimport { getAnswers } from \"../../api-calls/answers-api-calls\"\n\nclass Answers extends Component {\n\n    changeCode = (code) => {\n        return\n    }\n\n    render() {\n        const answers = this.props.data;\n        const answerList = answers.length ? (\n            answers.map((answer, index) => {\n                return (\n                    <div className=\"indanswer\" key={index}>\n                        <div className=\"answerProfile\">\n                            <img className=\"answerProfilePic\" src={answer.user.profilePic} alt=\"profile\"></img>\n                            <h4 className=\"answerHeader\">{answer.user.username}</h4>\n                        </div>\n\n                        <div className=\"answerComment\">\n                            <h5>comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment</h5>\n                        </div>\n\n                        <div>\n                            {/* <p className=\"answerText\">{answer.detail.code}</p> */}\n                            <Editor\n                                lang={answer.detail.language}\n                                changeCode={this.changeCode}\n                                code={answer.detail.code}\n                                readOnly={true}\n                            >\n                            </Editor>\n                        </div>\n                        <div className=\"answerReply\">\n                            <h5>replies</h5>\n                            <div className=\"row\">\n                                <img className='replyImg' src={profilePic} alt=\"reply\"></img>\n                                <h6>username</h6>\n                            </div>\n                            <div className='commentSolution'>\n                                <p>comment on the solution</p>\n                            </div>\n\n                        </div>\n                        <div className=\"answerButtons\">\n                            <button className=\"answerButton\">\n                                {answer.upvotes}\n                                <UpOne theme=\"outline\" size=\"24\" fill=\"#333\" />\n                            </button>\n                            <button className=\"answerButton\" >\n                                {answer.downvotes}\n                                <DownOne theme=\"outline\" size=\"24\" fill=\"#333\" />\n                            </button>\n                        </div>\n                    </div>\n                )\n            })\n        ) : (\n                <div>No answers</div>\n            )\n        return (\n            <div>\n                {answerList}\n            </div>\n        )\n    }\n}\n\nfunction warppedAnswers(props) { \n    return <FetchWapper fetchData={(cb) => getAnswers(props.id, cb)}><Answers/></FetchWapper>\n}\n\nexport default warppedAnswers\n\n\n","import React, { Component } from 'react'\nimport { TestCaseViewLarge, TestCaseViewModal } from \"../test-case/test-case-view-lg\"\nimport { Type, FunctionType, VariableType } from \"../../letcode-code-runner/type\"\nimport { AddTestCaseModal } from \"../test-case/add-test-case\"\nimport FetchWrapper from \"../fetchWrapper\"\nimport { getTestCases } from \"../../api-calls/test-case-api-calls\"\n\nclass TestCases extends Component {\n    state = {\n        showAddTestCase: false,\n    }\n\n    onTestCaseAdd(testCase) {\n        // if (!testCase.isLocal) {\n        //     //upload to server, get server time, update state,return\n        //     return;\n        // }\n        // testCase.numRun = 0;\n        // testCase.date = new Date().toString();\n        // const local = JSON.parse(localStorage.getItem(this.props.userId));\n        // local[[this.props.question._id]].localTestCase.push(testCase);\n        // localStorage.setItem(this.props.userId, JSON.stringify(local));\n        // const newCases = [...this.state.testCases];\n        // newCases.push(testCase);\n        // this.setState({ testCases: newCases, showAddTestCase: false });\n    }\n\n    render() {\n        return (\n            <div>\n                <button type=\"button\" className=\"btn btn-link\" onClick={() => this.setState({ showAddTestCase: true })}>Add</button>\n                {this.props.data.map((x, ind) => {\n                    return (\n                        <TestCaseViewLarge key={ind}\n                            testCase={x}\n                            functionType={this.props.type}\n                            isModal={false} />)\n                    })\n                }\n                <AddTestCaseModal show={this.state.showAddTestCase} functionType={this.props.type}\n                    onAdd={this.onTestCaseAdd.bind(this)}\n                    onHide={() => {\n                        this.setState({ showAddTestCase: false })\n                    }} local={false} />\n        </div>\n    )}\n    \n}\n\nfunction wrappedTestCase(props) {\n    return <FetchWrapper fetchData={(cb) => getTestCases(props.id, cb)}><TestCases type={props.type}/></FetchWrapper>\n    \n}\n\nexport default wrappedTestCase","import React, { useState } from 'react'\nimport { Link, useLocation} from 'react-router-dom'\nimport QuestionDesc from './QuestionDesc'\nimport Answers from './Answers'\nimport TestCases from './TestCases'\nimport { TabContent, TabPane, Nav, NavItem, Row, Col, Button } from 'reactstrap'\nimport {NavLink} from 'react-bootstrap'\nimport classnames from 'classnames'\nimport FetchWrapper from \"../fetchWrapper\"\nimport { getQuestion } from \"../../api-calls/question-api-calls\"\n\nconst QuestionContainer = (props) => {\n    const [activeTab, setActiveTab] = useState('1');\n\n    const toggle = tab => {\n        if (activeTab !== tab) setActiveTab(tab);\n    }\n    \n    const location = useLocation();\n    const path = location.pathname.substring(0, location.pathname.lastIndexOf('/')) + '/answer_question';\n\n    return (\n        <div id=\"postContent\">\n            <Row>\n                <Col sm=\"12\">\n                    <QuestionDesc question={props.data}></QuestionDesc>\n                </Col>\n            </Row>\n            <Nav tabs>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === '1' })}\n                        onClick={() => { toggle('1'); }}\n                    >\n                        Answers\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === '2' })}\n                        onClick={() => { toggle('2'); }}\n                    >\n                        Test cases\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <Row>\n                        <Col sm=\"3\">\n                            <NavLink as={Link} to={path}>Add Answers</NavLink>\n                        </Col>\n                        <Col sm={{ size: 'auto', offset: 5 }}>\n                            <Button color=\"link\">Sort by newest</Button>\n                            <Button color=\"link\">Sort by most upvote</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\">\n                            <Answers id={props.data._id}></Answers>\n                        </Col>\n                    </Row>\n                </TabPane>\n                <TabPane tabId=\"2\">\n                    <Row>\n                        <Col>\n                            {/* <TestCaseViewModal></TestCaseViewModal> */}\n                            <TestCases type={props.data.functionType} id={props.data._id}></TestCases>\n                        </Col>\n                    </Row>\n                </TabPane>\n            </TabContent>\n        </div>\n    )\n}\n\nfunction warppedQuestionContainer(props) { \n    return <FetchWrapper fetchData={(cb) => getQuestion(cb, props.match.params.question_id)}><QuestionContainer/></FetchWrapper>\n}\n\n\nexport default warppedQuestionContainer\n","import { FunctionType } from \"./type\"\n\nexport enum RunnerState { \n    READY = \"ready\",\n    UNINIT = \"uninitialized\",\n    INITING = \"initializing\",\n    COMPILING = \"compiling\",\n    RUNNING = \"runing\",\n    ERROR = \"error\"\n}\n\nexport interface CodeRunner { \n    readonly state: RunnerState;\n\n    init(notifyRunnerState: (state: RunnerState) => void, config?: Map<string, string>): void;\n    setConsole(onStdout?: (out: string) => void, onError?: (err: string) => void): void\n    canSupportFunctionType(functionType: FunctionType): boolean;\n    getStarterCode(functionType: FunctionType): string;\n    runTest(functionType: FunctionType, testCases: TestCase[], userCode: string): Promise<TestTracker>\n}\n\nexport class TestTracker {\n    public testCompletionTime: string = \"\";\n    public testPassed: number = 0;\n\n    constructor(public readonly userCode: string,\n        public readonly testCases: TestCase[],\n        public readonly generatedCode: string,\n        ) { }\n\n}\n\nexport class TestCase { \n    constructor(public readonly inputs: string[],\n        public readonly expectedOutput: string,\n        public readonly onSuceess: (info: string) => void,\n        public readonly onFailure: (err: string) => void) { }\n\n}","import React from 'react';\nimport { Controlled as ControlledEditor } from '../../react-codemirror2/index'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/python/python'\nimport 'codemirror/mode/clike/clike'\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/search/match-highlighter'\n\n\nclass Editor extends React.Component {\n    \n    code = \"\"\n    getMode(selectedLang) { \n        if (selectedLang === \"Python\") {\n            return \"python\";\n        }\n        if (selectedLang === \"C\") { \n            return \"text/x-csrc\";\n        }\n        if (selectedLang  === \"C++\") { \n            return \"text/x-c++src\";\n        }\n        if (selectedLang  === \"Java\") {\n            return \"text/x-java\";\n        }\n        return \"\";\n    }\n\n    onEditorChange(editor, data, value, cancel) { \n        if (!this.props.onCodeChange || (this.props.mustInclude && !value.split(\"\\n\").includes(this.props.mustInclude))) {\n            cancel();\n        }\n        else { \n            this.props.onCodeChange(value);\n        }\n    }\n\n\n    render() { \n        const { code, lang, extraTheme } = this.props\n        return (\n            <div>\n                <ControlledEditor\n                    className=\"border border-gray\"\n                    onBeforeChange={this.onEditorChange.bind(this)}\n                    value={code}\n                    options={{\n                        indentUnit: 4,\n                        lineWrapping: true,\n                        mode: this.getMode(lang),\n                        lineNumbers: true,\n                        matchBrackets: true,\n                        matchhighlight: true,\n                        autoCloseBrackets: true,\n                        theme: \"default \" + (extraTheme ? extraTheme : \"\")\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Editor;","import { CodeMapper, TypeMapper } from \"../mapper\"\n\nconst mapDict = (val: Map<string, string>) => {\n    const pairs: String[] = []\n    val.forEach((v, k) => pairs.push(k + \":\" + v))\n    return \"{\" + pairs.join(\",\") + \"}\"\n}\n\nconst mapList = (val: string[]) => {\n    return \"[\" + val.join(\",\") + \"]\";\n}\n\nconst mapBool = (val: string) => {\n    if (val === \"true\")\n        return \"True\";\n    return \"False\";\n}\n\nconst LetCodeToPythonCodeMapper =\n    new CodeMapper(\n        (val: string) => val,\n        (val: string) => val,\n        (val: string) => val,\n        mapBool,\n        mapDict,\n        mapList\n    );\n\nconst PythonTypeMapper =\n    new TypeMapper(\n        () => \"int\",\n        () => \"float\",\n        () => \"str\",\n        () => \"bool\",\n        (key, val) => \"[\" + key + \",\" + val + \"]\",\n        (val) => \"[\" + val + \"]\"\n    );\n\nconst PythonLetCodeCodeMapperFuncName = \"____letcode_code_mapper____\"\n\nconst PythonToLetCodeCodeMapper =\n`def ${PythonLetCodeCodeMapperFuncName}(python_object: any) -> str:\n    if type(python_object) == dict:\n        return \"{\" + \",\".join([${PythonLetCodeCodeMapperFuncName}(k) + \":\" + ${PythonLetCodeCodeMapperFuncName}(v) for (k, v) in python_object]) + \"}\"\n    if type(python_object) == list:\n        return \"[\" + \",\".join([${PythonLetCodeCodeMapperFuncName}(v) for v in python_object])  + \"]\"\n    if type(python_object) == bool:\n        if python_object:\n            return \"true\"\n        return \"false\"\n    return str(python_object)\n    `;\n\n\nexport { LetCodeToPythonCodeMapper, PythonTypeMapper, PythonToLetCodeCodeMapper, PythonLetCodeCodeMapperFuncName}","import { RunnerState, CodeRunner, TestTracker, TestCase } from \"../code-runner\"\nimport { FunctionType } from \"../type\";\nimport { LetCodeToPythonCodeMapper, PythonTypeMapper, PythonToLetCodeCodeMapper, PythonLetCodeCodeMapperFuncName } from \"./python-mapper\"\n\nconst testWarpingFunctionName: string = \"___LETCODE_PYTHON_TEST_WARPING_FUNC\"\n\nexport default class CoderunnerPythonImpl implements CodeRunner {\n    //We need to warp user's code in a function scope before passing it to the interpretor\n    //so we can clean user defined vars after tests completed.\n    state: RunnerState = RunnerState.UNINIT;\n    private interpreter_webworker?: Worker; \n    private onStdout?: (out: string) => void;\n    private onError?: (err: string) => void;\n    // sould bind to something that the run button and disable the run button when state is not READY\n    private notifyRunnerState?: (state: RunnerState) => void;\n    private currentTestTracker: TestTracker | null = null;\n    private resolveCurrentTracker: ((tt: TestTracker) => void) | null = null;\n\n    init(notifyRunnerState: (state: RunnerState) => void): void {\n        this.notifyRunnerState = notifyRunnerState;\n        if (this.interpreter_webworker) {\n            notifyRunnerState(this.state);\n            return;\n        }\n        if (this.onStdout)\n            this.onStdout(\"Loading Python interpreter..\");\n        this.updateState(RunnerState.INITING);\n        import(\"worker-loader!./webworker/pyodide.worker\").then(worker => {\n            this.interpreter_webworker = new worker.default();\n            this.interpreter_webworker .addEventListener(\"error\", (e) => console.log(), false);\n\n            this.interpreter_webworker!.onmessage = () => {\n                if (this.onStdout)\n                    this.onStdout(\"Python interpreter loadded! Loading modules and output mapping function..\");\n                this.interpreter_webworker!.onmessage = (e) => {\n                    if (e.data.type === \"runCompleted\") { \n                        if (this.onStdout)\n                            this.onStdout(\"Python runner is ready!\")\n                        this.updateState(RunnerState.READY);\n                        this.interpreter_webworker!.onmessage = this.handleMessage.bind(this);\n                        this.interpreter_webworker!.onerror = this.handleError.bind(this);\n                    }\n                }\n                this.interpreter_webworker?.postMessage({\n                    type: \"run\",\n                    code: `import gc\\n${PythonToLetCodeCodeMapper}`\n                });\n            }\n            this.interpreter_webworker!.onerror = (err) => {\n                this.updateState(RunnerState.ERROR);\n            }\n        })\n    }\n\n    setConsole(onStdout?: (out: string) => void, onError?: (err: string) => void): void {\n        this.onStdout = onStdout;\n        this.onError = onError;\n    }\n\n    canSupportFunctionType(functionType: FunctionType): boolean {\n        for (let varType of functionType.paramsType) { \n            if (!PythonTypeMapper.canBeMapped(varType.type))\n                return false;\n        }\n        return PythonTypeMapper.canBeMapped(functionType.returnType.type)\n    }\n    getStarterCode(functionType: FunctionType): string {\n        return `\ndef ${functionType.name}(${functionType.paramsType.map(varType => varType.name + \":\" + PythonTypeMapper.mapType(varType.type))\n                .join(\", \")}) -> ${PythonTypeMapper.mapType(functionType.returnType.type)}:\n    # Input your code here:\n    return      `;\n    }\n\n    runTest(functionType: FunctionType, testCases: TestCase[], userCode: string): Promise<TestTracker>{\n        if (this.state !== RunnerState.READY)  \n            throw new Error(\"Runner is not ready!\");\n        \n        this.updateState(RunnerState.COMPILING);\n        let generatedCode = `def ${testWarpingFunctionName}() -> list:\\n` + userCode.split(\"\\n\").map(s => \"    \" + s).join(\"\\n\");\n        const testCasesInternalName: string[] = []\n        for (let tc of testCases) { \n            let args: string[] = [];\n            for (let i = 0; i < tc.inputs.length; i++) { \n                args.push(LetCodeToPythonCodeMapper.mapCode(tc.inputs[i], functionType.paramsType[i].type));\n            }\n            const tcName = getVariableName(\"testcase\" + testCases.indexOf(tc), generatedCode)\n            testCasesInternalName.push(tcName);\n            generatedCode += \n            `\n    def ${tcName}() -> str:\n        return ${PythonLetCodeCodeMapperFuncName}(${functionType.name}(${args.join(\", \")}))\n            `;\n        }\n        generatedCode +=\n            `\n    return [${testCasesInternalName.join(\", \")}]\n            `\n        console.log(\"generated code:\\n\", generatedCode)\n        this.currentTestTracker = new TestTracker(userCode, testCases, generatedCode);\n        this.interpreter_webworker!.postMessage({\n            type: \"runTest\",\n            code: generatedCode,\n            numTest: testCases.length,\n            testWarperName: testWarpingFunctionName\n        });\n        return new Promise(resolve => { \n            this.resolveCurrentTracker = resolve;\n        });\n    }\n\n    private handleMessage(msg: MessageEvent): void { \n        if (!msg.data) return;\n        if (msg.data.type === \"stdout\") {\n            if (this.onStdout && this.state === RunnerState.RUNNING) this.onStdout(msg.data.value);\n        }\n        else if (msg.data.type === \"compilationError\") {\n            this.currentTestTracker!.testCompletionTime = new Date().toString()\n            this.resolveCurrentTracker!(this.currentTestTracker!);\n            this.currentTestTracker!.testCases.forEach(tc => tc.onFailure(\"Compilation Failed\"))\n            this.currentTestTracker = null;\n            this.updateState(RunnerState.READY);\n            if (this.onError) this.onError(msg.data.value);\n        }\n        else if (msg.data.type === \"compilationSuccess\") { \n            this.updateState(RunnerState.RUNNING);\n        }\n           \n        else if (msg.data.type === \"testCaseResult\") {\n            if (!this.currentTestTracker)\n                return;\n            if (msg.data.error || msg.data.result !== this.currentTestTracker.testCases[msg.data.testCaseNum].expectedOutput)\n                this.currentTestTracker.testCases[parseInt(msg.data.testCaseNum)].onFailure(msg.data.result);\n            else if (this.currentTestTracker){\n                this.currentTestTracker.testCases[parseInt(msg.data.testCaseNum)].onSuceess(msg.data.result);\n                this.currentTestTracker.testPassed += 1;\n            }\n                \n        }\n        else if (msg.data.type === \"testingCompeleted\") {\n            this.updateState(RunnerState.READY);\n            this.currentTestTracker!.testCompletionTime = new Date().toString();\n            this.resolveCurrentTracker!(this.currentTestTracker!);\n            this.currentTestTracker = null;\n        }\n    }\n\n    private handleError(err: ErrorEvent): void { \n        if (this.onError) {\n            this.onError(err.message);\n            this.updateState(RunnerState.ERROR);\n        }\n    }\n\n    private updateState(state: RunnerState): void { \n        this.state = state;\n        if (this.notifyRunnerState) this.notifyRunnerState(state);\n    } \n}\n\n\n// get a varible name thta's close to nameWanted but not refrenced in userCode\n// It's a naive implimentation\nfunction getVariableName(nameWanted: string, userCode: string): string {\n    let outputName = \"____GENERATED_\" + nameWanted;\n    while (userCode.includes(outputName)) {\n        outputName += \"_\";\n    }\n    return outputName;\n}\n","import { CodeRunner } from \"./code-runner\";\nimport CoderunnerPythonImpl from \"./python/code-runner-python-impl\";\nimport { FunctionType } from \"./type\"\n\nconst codeRuners: Map<string, CodeRunner> = new Map();\ncodeRuners.set(\"Python\", new CoderunnerPythonImpl());\n\nexport function getCodeRunner(lang: string): CodeRunner|undefined { \n    return codeRuners.get(lang)\n}\n\nexport function getSupportedLang(func: FunctionType): string[] { \n    const langs:string[] = []\n    codeRuners.forEach((value: CodeRunner, key: string) => {\n        if (value.canSupportFunctionType(func)) { \n            langs.push(key);\n        }\n    });\n    return langs;\n}\n\nexport function getVersion(): string { \n    return \"Ver 1.0.0\";\n}","import React from 'react'\nimport \"./test-case-view-sm.css\"\n\n\nclass TestCaseViewSmall extends React.Component{\n\n\n    getIconByStatus(status) { \n        if (status) { \n            if (status === \"running\") { \n                return (\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                )\n            }\n            if (status === \"pass\") { \n                return (\n                    <svg className=\"testcase-fade-in\" xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                        <path fill=\"#28a745\" d=\"M18 32.34L9.66 24l-2.83 2.83L18 38l24-24-2.83-2.83z\" />\n                    </svg>\n                );\n            }\n            return (\n                <svg className=\"testcase-fade-in\" xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                    <path fill=\"#dc3545\" d=\"M22 30h4v4h-4zm0-16h4v12h-4zm1.99-10C12.94 4 4 12.95 4 24s8.94 20 19.99 20S44 35.05 44 24 35.04 4 23.99 4zM24 40c-8.84 0-16-7.16-16-16S15.16 8 24 8s16 7.16 16 16-7.16 16-16 16z\" />\n                </svg>\n            );\n        }\n        if (this.props.testCase.selected) { \n            return (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                    <path fill=\"#007bff\" d=\"M45.4 37.9L27.1 19.6c1.8-4.6.8-10.1-2.9-13.8-4-4-10-4.8-14.8-2.5l8.7 8.7-6.1 6.1-8.7-8.7C1 14.2 1.8 20.2 5.8 24.2c3.7 3.7 9.2 4.7 13.8 2.9l18.3 18.3c.8.8 2.1.8 2.8 0l4.7-4.7c.8-.7.8-2 0-2.8z\" />\n                </svg>\n            );\n        }\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                <path fill=\"grey\"d=\"M24 14c5.52 0 10 4.48 10 10 0 1.29-.26 2.52-.71 3.65l5.85 5.85c3.02-2.52 5.4-5.78 6.87-9.5-3.47-8.78-12-15-22.01-15-2.8 0-5.48.5-7.97 1.4l4.32 4.31c1.13-.44 2.36-.71 3.65-.71zM4 8.55l4.56 4.56.91.91C6.17 16.6 3.56 20.03 2 24c3.46 8.78 12 15 22 15 3.1 0 6.06-.6 8.77-1.69l.85.85L39.45 44 42 41.46 6.55 6 4 8.55zM15.06 19.6l3.09 3.09c-.09.43-.15.86-.15 1.31 0 3.31 2.69 6 6 6 .45 0 .88-.06 1.3-.15l3.09 3.09C27.06 33.6 25.58 34 24 34c-5.52 0-10-4.48-10-10 0-1.58.4-3.06 1.06-4.4zm8.61-1.57l6.3 6.3L30 24c0-3.31-2.69-6-6-6l-.33.03z\" />\n            </svg>\n        )\n    }\n\n    getHeader(canSelect, _key, title) { \n        if (canSelect) { \n            return (\n                <div className=\"form-check\">\n                    <input type=\"checkbox\" className=\"form-check-input bg-light\" id={\"select-case\" + _key} onChange={\n                        () => {\n                            this.props.onSelect(this.props.testCase);\n                        }} checked={!!this.props.testCase.selected}\n                        autoComplete=\"off\" />\n                    <label className=\"form-check-label\" id=\"select-case-label\" htmlFor={\"select-case\" + _key} ><h5 className=\"card-title\" id=\"select-case-label-text\">{title} </h5></label>\n                </div>\n            );\n        }\n        return <h5 className=\"card-title\">{title} </h5>;\n    }\n\n    render() {\n        const { testCase, onClick, _key } = this.props;\n        return (\n            <div className=\"card testcase-view-sm-body\" onClick={(e) => {\n                if (e.target.id !== \"select-case\" + _key && e.target.id !== \"select-case-label\" && e.target.id !== \"select-case-label-text\") { \n                    onClick(testCase)\n                }\n            }}>\n                <div className={\"row no-gutters testcase-card-hover-\" + (testCase.status ? testCase.status : \"default\")}>\n                    <div className=\"col-md-10\">\n                        <div className=\"card-body\">\n                            {this.getHeader(testCase.status !== \"running\", _key, testCase.name)}\n                            <p className=\"card-text\">{testCase.desc}</p>\n                            <p className=\"card-text small text-muted\">Submitted on {new Date(testCase.date).toDateString()}, {testCase.numRun} runs</p>\n                        </div>\n                    </div>\n                    <div className=\"col-md-2 my-auto\">\n                        {this.getIconByStatus(testCase.status)}\n                    </div>\n                </div>\n            </div>)\n    }\n}\n\n\nexport default TestCaseViewSmall;","import React from \"react\"\nimport Editor from \"./editor\"\nimport { getCodeRunner, getSupportedLang, getVersion } from \"../../letcode-code-runner/code-runner-global\"\nimport { TestCase } from \"../../letcode-code-runner/code-runner\"\nimport TestCaseViewSmall from \"../test-case/test-case-view-sm\"\nimport { TestCaseViewModal } from \"../test-case/test-case-view-lg\"\nimport { AddTestCaseModal } from \"../test-case/add-test-case\"\nimport { Tabs, Tab, Dropdown, DropdownButton } from \"react-bootstrap\"\nimport Fetchwapper from \"../fetchWrapper\"\nimport { getQuestionAllInfo } from \"../../api-calls/question-api-calls\"\nimport \"./answer-question.css\"\n\n\nconst newLine = \">> \"\nconst maxLogs = 100;\n\nclass AnswerQuestion extends React.Component{\n\n    constructor(props) {\n        super(props);\n        const { preferedLang, testCases, userId, question } = props;\n        const supLang = getSupportedLang(question.functionType);\n        const defaultLang = preferedLang && supLang.includes(preferedLang) ? preferedLang : supLang[0];\n        const runner = getCodeRunner(defaultLang);\n        runner.setConsole(this.consoleOnMsg.bind(this), this.consoleOnErr.bind(this));\n        const starter = runner.getStarterCode(question.functionType);\n        let store = JSON.parse(localStorage.getItem(userId));\n        if (!store) {\n            store = { [question._id]: { history: [], localTestCase: [] , code:starter} };\n        }\n        if (!store[question._id]) { \n            store[question._id] = { history: [], localTestCase: [], code: starter };\n        }\n        localStorage.setItem(userId,  JSON.stringify(store));\n\n        this.state = {\n            supportedLang: supLang,\n            selectedLang: defaultLang,\n            tab: \"Question\",\n            testCases: JSON.parse(JSON.stringify(testCases.concat(store[question._id].localTestCase))),\n            codeRunner: runner,\n            code: store[question._id].code,\n            starterList: starter.split(\"\\n\"),\n            log: [{ type: \"info\", value: \"Code Runner \" + getVersion() }],\n            codeRunnerState: runner.state,\n            showAddTestCase: false,\n            testCaseDetail: null,\n            testCaseSortBy: \"newest\",\n            testCasesView: \"all\",\n            runnerState: runner.state === \"uninitialized\" ? \"ready\" : runner.state,\n            history: store[question._id].history\n        };\n    }\n\n\n    onLangSelectChange(e) {\n        this.codeRunner.setConsole(null, null);\n        const runner = getCodeRunner(e.target.value)\n        runner.setConsole(this.consoleOnMsg.bind(this), this.consoleOnErr.bind(this));\n        const starter = runner.getStarterCode(this.props.question.functionType);\n        this.setState({\n            selectedLang: e.target.value,\n            codeRunner: runner,\n            code: starter,\n            starterList: starter.split(\"\\n\"),\n            codeRunnerState: runner.state\n        });\n    }\n\n    getMustIncludeStarter() { \n        //lang specific\n        if (this.state.selectedLang === \"Python\") { \n            return this.state.starterList[1];\n        }\n        return \"\"\n    }\n\n    consoleOnMsg(msg) {\n        const newLog = this.state.log;\n        newLog.push({ type: \"info\", value: msg });\n        this.setState({ log: newLog.slice(Math.max(newLog.length - maxLogs, 0)) });\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    consoleOnErr(err) { \n        const newLog = this.state.log;\n        newLog.push({ type: \"error\", value: err });\n        this.setState({ log: newLog.slice(Math.max(newLog.length - maxLogs, 0)) });\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    onTestCaseAdd(testCase) { \n        if (!testCase.isLocal) { \n            //upload to server, get server time, update state,return\n            return;\n        }\n        testCase.numRun = 0;\n        testCase.date = new Date().toString();\n        const local = JSON.parse(localStorage.getItem(this.props.userId));\n        local[[this.props.question._id]].localTestCase.push(testCase);\n        localStorage.setItem(this.props.userId, JSON.stringify(local));\n        const newCases = [...this.state.testCases];\n        newCases.push(testCase);\n        this.setState({ testCases: newCases, showAddTestCase: false });\n    }\n\n\n    onTestCaseSelect(testCase) { \n        const newCases = [...this.state.testCases];\n        const update = { ...testCase };\n        update.selected = !update.selected;\n        newCases[newCases.indexOf(testCase)] = update;\n        this.setState({ testCases: newCases });\n    }\n\n    getRecentTestInfo() { \n        if (this.state.history.length === 0) { \n            return <span className=\"text-secondary text-left d-inline-block small text-truncate pl-2 pt-2\"\n                style={{ maxWidth: \"calc(42vw - 215px)\" }}>\n                Your code is brand new! Give it a try -{\">\"}\n            </span>\n        }\n        const lastHistory = this.state.history[0]\n        return (\n            <span className=\"text-secondary text-left d-inline-block small text-truncate pl-2 pt-1\"\n                style={{ maxWidth: \"calc(42vw - 215px)\" }}>\n                {\"Most recent test run on \" + new Date(lastHistory.testCompletionTime).toLocaleString()}\n                <br />\n                {String(lastHistory.testPassed) + \" passed, \" + String(lastHistory.testCases.length - lastHistory.testPassed) + \" failed\"}\n            </span>\n        )\n    }\n\n    mapTestCases() { \n        let testCases = this.state.testCases;\n        if (this.state.testCaseSortBy === \"newest\")\n            testCases = testCases.sort((a, b) => new Date(b.date) - new Date(a.date))\n        else if (this.state.testCaseSortBy === \"mostRuns\") { \n            testCases = testCases.sort((a, b) => b.numRun - a.numRun)\n        }\n            \n        if (this.state.testCasesView === \"selectedOnly\")\n            testCases = testCases.filter(tc => tc.selected);\n        return testCases.map((x, ind) =>\n            <TestCaseViewSmall\n                testCase={x} key={ind} _key={ind}\n                onSelect={this.onTestCaseSelect.bind(this)}\n                onClick={(testcase) => this.setState({ testCaseDetail: testcase })}\n            />);\n    }\n\n    mapHistory() { \n        return (\n            <ul className=\"list-group\">\n                {this.state.history.map((h, ind) => \n                    <li key={ind} className=\"list-group-item\">{\n                        new Date(h.testCompletionTime).toLocaleString()\n                        + \" | \" + String(h.testPassed) + \" passed, \"\n                        + String(h.testCases.length - h.testPassed)\n                        + \" failed\"}\n                        <button className=\"btn btn-link float-right p-0\" onClick={() => this.setState({code: h.userCode})}>Restore Code</button>\n                    </li>\n                )}\n            </ul>);\n    }\n\n    runTest() {\n        this.setState({tab:\"Test Cases\"})\n        let runOnce = false;\n        this.state.codeRunner.init((runnerState) => { \n            if (runnerState === \"ready\" && !runOnce) {\n                runOnce = true;\n                const TestToRun = [];\n                const newTestCases = [];\n                for (let tc of this.state.testCases) { \n                    const newTc = { ...tc };\n                    newTc.actualOutput = null;\n                    if (newTc.selected) {\n                        newTc.status = \"running\";\n                        const onTestOut = (pass, output) => {\n                            const nnTc = { ...newTc };\n                            nnTc.numRun += 1;\n                            nnTc.status = pass ? \"pass\" : \"fail\";\n                            nnTc.actualOutput = output;\n                            const newTcs = [...this.state.testCases];\n                            newTcs[newTcs.indexOf(newTc)] = nnTc;\n                            this.setState({ testCases: newTcs });\n                        }\n                        TestToRun.push(new TestCase(newTc.inputs, newTc.output,\n                            (info) => onTestOut(true, info),\n                            (err) => onTestOut(false, err)));\n                    }\n                    else { \n                        newTc.status = null;\n                    }\n                    newTestCases.push(newTc);\n                }\n                this.state.codeRunner\n                    .runTest(this.props.question.functionType, TestToRun, this.state.code)\n                    .then(codeTacker => {\n                        const newHistory = [...this.state.history];\n                        newHistory.unshift(codeTacker);\n                        const store = JSON.parse(localStorage.getItem(this.props.userId));\n                        store[this.props.question._id].history = newHistory;\n                        localStorage.setItem(this.props.userId, JSON.stringify(store));\n                        this.setState({history:newHistory})\n                    });\n                this.setState({ testCases: newTestCases});\n            }\n            else if (runnerState === \"error\") {\n                alert(\"Error occured, try refresh your browser\")\n            }\n            this.setState({ runnerState: runnerState });\n        })\n    }\n    \n    \n    render() {\n        const { question, userId } = this.props;\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-7 p-0\">\n                        <select className=\"custom-select rounded-0 border-gray border-bottom-0 \"\n                            onChange={this.onLangSelectChange.bind(this)}\n                            value={this.state.selectedLang}>\n                            {this.state.supportedLang.map((x, ind) => <option key={ind}>{x}</option>)}\n                        </select>\n                        <Editor code={this.state.code}\n                            onCodeChange={(code) => {\n                                const store = JSON.parse(localStorage.getItem(userId));\n                                store[question._id].code = code;\n                                localStorage.setItem(userId, JSON.stringify(store));\n                                this.setState({ code: code })\n                            }}\n                            lang={this.state.selectedLang}\n                            mustInclude={this.getMustIncludeStarter()}\n                            extraTheme=\"answer-editor\"\n                        />\n                        <div className=\"answer-console\">\n                            <div className=\"answer-console-title\">\n                                Console Output:\n                            </div>\n                            <div className=\"answer-console-body\">\n                                {this.state.log.map((x, ind) => { \n                                    if (x.type === \"info\") \n                                        return <p className=\"answer-console-text m-0 text-secondary\" key={ind}><span className=\"text-info\">{newLine}</span>{x.value}</p>\n                                    if (x.type === \"error\") \n                                        return <p className=\"answer-console-text bg-danger text-white\" key={ind}>{x.value}</p>\n                                    return null\n                                })}\n                                <div style={{ float: \"left\", clear: \"both\" }}\n                                    ref={(el) => { this.messagesEnd = el; }}>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-5 p-0\">\n                        <div className=\"answer-info-tab\">\n                            <Tabs activeKey={this.state.tab} onSelect={(k) => this.setState({tab: k})}>\n                                <Tab eventKey=\"Question\" title=\"Question\">\n                                    <div className=\"p-3 answer-question-body\">\n                                        <br/>\n                                        <h4 className=\"text-center px-4\"> {question.name}</h4>\n                                        <br/>\n                                        <p className=\"lead px-4\">\n                                            {question.desc}\n                                        </p>\n                                        <div className=\"text-secondary text-right small\">Posted by <a href=\"#\">{question.by}</a> on {new Date(question.date).toDateString()}</div>\n                                        <div className=\"text-secondary text-right small\">{question.numUpVote} upvote, {question.numAnswers} answers</div>\n                                    </div>  \n                                </Tab>\n                                <Tab className=\"bg-light\" eventKey=\"Test Cases\" title=\"Test Cases\">\n                                    <div className=\"p-2 btn-group\" role=\"group\">\n                                        <button type=\"button\" className=\"btn btn-link\" onClick={() => this.setState({showAddTestCase:true})}>Add</button>\n                                        <DropdownButton variant=\"link\" title=\"Sort By\">\n                                            <Dropdown.Item active={this.state.testCaseSortBy === \"newest\"}\n                                                onClick={() => this.setState({ testCaseSortBy: \"newest\" })}>Newest</Dropdown.Item>\n                                            <Dropdown.Item active={this.state.testCaseSortBy === \"mostRuns\"}\n                                                onClick={() => this.setState({ testCaseSortBy: \"mostRuns\" })}>Most Runs</Dropdown.Item>\n                                        </DropdownButton>\n                                        <DropdownButton variant=\"link\" title=\"View\">\n                                            <Dropdown.Item active={this.state.testCasesView === \"all\"}\n                                                onClick={() => this.setState({ testCasesView: \"all\" })}>All</Dropdown.Item>\n                                            <Dropdown.Item active={this.state.testCasesView === \"selectedOnly\"}\n                                                onClick={() => this.setState({ testCasesView: \"selectedOnly\" })}>Selected Only</Dropdown.Item>\n                                        </DropdownButton>\n                                    </div>\n                                    \n                                    <div className=\"answer-test-case-body\">\n                                        {this.mapTestCases()}\n                                    </div>\n                                </Tab>\n                                <Tab className=\"bg-light\" eventKey=\"Test History\" title=\"Test History\">\n                                    <div className=\"answer-question-body\">\n                                        {this.mapHistory()}\n                                    </div>\n                                </Tab>\n                                <Tab eventKey=\"Setting\" title=\"Setting\">\n                                    <div className=\"text-center mt-4\">\n                                        LetCode Code Runner: {getVersion()}\n                                    </div>\n                                    <div className=\"text-center mt-2\">\n                                        <button type=\"button\" className=\"btn btn-link\" onClick={() => {\n                                            localStorage.removeItem(userId);\n                                            window.location.reload(false);\n                                        }}>Clear Local Storage</button>\n                                    </div>\n                                </Tab>\n                            </Tabs>\n                        </div>\n                        <div className=\"answer-button-group\">\n                            {this.getRecentTestInfo()}\n                            <div className=\"btn-group float-right py-1\" role=\"group\">\n                                {this.state.runnerState !== \"ready\" ? \n                                    <button type=\"button\" className=\"btn btn-primary rounded-0 mr-2\" disabled={true}>\n                                        <span className=\"mr-2\">{this.state.runnerState[0].toUpperCase() + this.state.runnerState.slice(1)}</span>\n                                        <span className=\"spinner-border spinner-border-sm\"></span>\n                                    </button>\n                                    :\n                                    <button type=\"button\" className=\"btn btn-primary rounded-0 mr-2\" onClick={this.runTest.bind(this)}>\n                                        <span className=\"mr-2\">Run Test</span>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                            <path d=\"M8 5v14l11-7z\" fill=\"white\" />\n                                        </svg>\n                                    </button>\n                                }\n                                \n                                <button type=\"button\" className=\"btn btn-primary rounded-0 mr-1\">Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <TestCaseViewModal functionType={this.props.question.functionType}\n                    testCase={this.state.testCaseDetail}\n                    onHide={() => this.setState({ testCaseDetail: null })} />\n                <AddTestCaseModal show={this.state.showAddTestCase} functionType={this.props.question.functionType}\n                    onAdd={this.onTestCaseAdd.bind(this)}\n                    onHide={() => { \n                    this.setState({showAddTestCase: false})\n                }} local={true}/>\n\n            </div>\n            \n        )\n    }\n}\n\n\nfunction warppedAnswerQuestion(props) { \n    const Flatten = (props) => {\n        return <AnswerQuestion userId={props.data.userId} question={props.data.question} testCases={props.data.testCases} />\n    }\n    return (\n      <Fetchwapper\n        fetchData={(cb) =>\n          getQuestionAllInfo(props.match.params.question_id, cb)\n        }\n        private={true}\n      >\n        <Flatten />\n      </Fetchwapper>\n    );\n}\n\n\n\n\nexport default warppedAnswerQuestion;","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom'\nimport Header from './react-components/layout/Header'\nimport MainLogin from './react-components/auth/MainLogin'\nimport MainPage from './react-components/mainpage/MainPage'\nimport Profile from './react-components/user/Profile'\nimport CreateQuestion from './react-components/post-question/create-question'\nimport QuestionPage from './react-components/question-page/QuestionContainer'\nimport AnswerQuestion from './react-components/answer-question/answer-question'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\n\nfunction App() {\n  // testRunner();\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Switch>\n        <Route exact path=\"/\" component={MainPage}></Route>\n        <Route path='/signin_up' component={MainLogin}></Route>\n        <Route path='/:username/profile' component={Profile}></Route>\n        <Route path='/newquestion' component={CreateQuestion}></Route>\n        <Route path='/:question_id/detail' component={QuestionPage}></Route>\n        <Route path='/:question_id/answer_question' component={AnswerQuestion}></Route>\n        {/* <Route path='/:username/collections' component={Collection}> */}\n        <Route path='/myprofile' component={Profile}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","'use strict';\n\nfunction _extends() {\n  _extends = Object.assign || function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\n\nvar __extends = void 0 && (void 0).__extends || function() {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    }\n    instanceof Array && function(d, b) {\n      d.__proto__ = b;\n    } || function(d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function(d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.UnControlled = exports.Controlled = void 0;\n\nvar React = require('react');\n\nvar SERVER_RENDERED = typeof navigator === 'undefined' || global['PREVENT_CODEMIRROR_RENDER'] === true;\nvar cm;\n\nif (!SERVER_RENDERED) {\n  cm = require('codemirror');\n}\n\nvar Helper = function() {\n  function Helper() {}\n\n  Helper.equals = function(x, y) {\n    var _this = this;\n\n    var ok = Object.keys,\n      tx = _typeof(x),\n      ty = _typeof(y);\n\n    return x && y && tx === 'object' && tx === ty ? ok(x).length === ok(y).length && ok(x).every(function(key) {\n      return _this.equals(x[key], y[key]);\n    }) : x === y;\n  };\n\n  return Helper;\n}();\n\nvar Shared = function() {\n  function Shared(editor, props) {\n    this.editor = editor;\n    this.props = props;\n  }\n\n  Shared.prototype.delegateCursor = function(position, scroll, focus) {\n    var doc = this.editor.getDoc();\n\n    if (focus) {\n      this.editor.focus();\n    }\n\n    scroll ? doc.setCursor(position) : doc.setCursor(position, null, {\n      scroll: false\n    });\n  };\n\n  Shared.prototype.delegateScroll = function(coordinates) {\n    this.editor.scrollTo(coordinates.x, coordinates.y);\n  };\n\n  Shared.prototype.delegateSelection = function(ranges, focus) {\n    var doc = this.editor.getDoc();\n    doc.setSelections(ranges);\n\n    if (focus) {\n      this.editor.focus();\n    }\n  };\n\n  Shared.prototype.apply = function(props) {\n    if (props && props.selection && props.selection.ranges) {\n      this.delegateSelection(props.selection.ranges, props.selection.focus || false);\n    }\n\n    if (props && props.cursor) {\n      this.delegateCursor(props.cursor, props.autoScroll || false, this.editor.getOption('autofocus') || false);\n    }\n\n    if (props && props.scroll) {\n      this.delegateScroll(props.scroll);\n    }\n  };\n\n  Shared.prototype.applyNext = function(props, next, preserved) {\n    if (props && props.selection && props.selection.ranges) {\n      if (next && next.selection && next.selection.ranges && !Helper.equals(props.selection.ranges, next.selection.ranges)) {\n        this.delegateSelection(next.selection.ranges, next.selection.focus || false);\n      }\n    }\n\n    if (props && props.cursor) {\n      if (next && next.cursor && !Helper.equals(props.cursor, next.cursor)) {\n        this.delegateCursor(preserved.cursor || next.cursor, next.autoScroll || false, next.autoCursor || false);\n      }\n    }\n\n    if (props && props.scroll) {\n      if (next && next.scroll && !Helper.equals(props.scroll, next.scroll)) {\n        this.delegateScroll(next.scroll);\n      }\n    }\n  };\n\n  Shared.prototype.applyUserDefined = function(props, preserved) {\n    if (preserved && preserved.cursor) {\n      this.delegateCursor(preserved.cursor, props.autoScroll || false, this.editor.getOption('autofocus') || false);\n    }\n  };\n\n  Shared.prototype.wire = function(props) {\n    var _this = this;\n\n    Object.keys(props || {}).filter(function(p) {\n      return /^on/.test(p);\n    }).forEach(function(prop) {\n      switch (prop) {\n        case 'onBlur': {\n          _this.editor.on('blur', function(cm, event) {\n            _this.props.onBlur(_this.editor, event);\n          });\n        }\n        break;\n\n      case 'onContextMenu': {\n        _this.editor.on('contextmenu', function(cm, event) {\n          _this.props.onContextMenu(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onCopy': {\n        _this.editor.on('copy', function(cm, event) {\n          _this.props.onCopy(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onCursor': {\n        _this.editor.on('cursorActivity', function(cm) {\n          _this.props.onCursor(_this.editor, _this.editor.getDoc().getCursor());\n        });\n      }\n      break;\n\n      case 'onCursorActivity': {\n        _this.editor.on('cursorActivity', function(cm) {\n          _this.props.onCursorActivity(_this.editor);\n        });\n      }\n      break;\n\n      case 'onCut': {\n        _this.editor.on('cut', function(cm, event) {\n          _this.props.onCut(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDblClick': {\n        _this.editor.on('dblclick', function(cm, event) {\n          _this.props.onDblClick(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDragEnter': {\n        _this.editor.on('dragenter', function(cm, event) {\n          _this.props.onDragEnter(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onDragLeave': {\n        _this.editor.on('dragleave', function(cm, event) {\n          _this.props.onDragLeave(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDragOver': {\n        _this.editor.on('dragover', function(cm, event) {\n          _this.props.onDragOver(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onDragStart': {\n        _this.editor.on('dragstart', function(cm, event) {\n          _this.props.onDragStart(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDrop': {\n        _this.editor.on('drop', function(cm, event) {\n          _this.props.onDrop(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onFocus': {\n        _this.editor.on('focus', function(cm, event) {\n          _this.props.onFocus(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onGutterClick': {\n        _this.editor.on('gutterClick', function(cm, lineNumber, gutter, event) {\n          _this.props.onGutterClick(_this.editor, lineNumber, gutter, event);\n        });\n      }\n      break;\n\n      case 'onInputRead': {\n        _this.editor.on('inputRead', function(cm, EditorChangeEvent) {\n          _this.props.onInputRead(_this.editor, EditorChangeEvent);\n        });\n      }\n      break;\n\n      case 'onKeyDown': {\n        _this.editor.on('keydown', function(cm, event) {\n          _this.props.onKeyDown(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onKeyHandled': {\n        _this.editor.on('keyHandled', function(cm, key, event) {\n          _this.props.onKeyHandled(_this.editor, key, event);\n        });\n      }\n      break;\n\n      case 'onKeyPress': {\n        _this.editor.on('keypress', function(cm, event) {\n          _this.props.onKeyPress(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onKeyUp': {\n        _this.editor.on('keyup', function(cm, event) {\n          _this.props.onKeyUp(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onMouseDown': {\n        _this.editor.on('mousedown', function(cm, event) {\n          _this.props.onMouseDown(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onPaste': {\n        _this.editor.on('paste', function(cm, event) {\n          _this.props.onPaste(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onRenderLine': {\n        _this.editor.on('renderLine', function(cm, line, element) {\n          _this.props.onRenderLine(_this.editor, line, element);\n        });\n\n        break;\n      }\n\n      case 'onScroll': {\n        _this.editor.on('scroll', function(cm) {\n          _this.props.onScroll(_this.editor, _this.editor.getScrollInfo());\n        });\n      }\n      break;\n\n      case 'onSelection': {\n        _this.editor.on('beforeSelectionChange', function(cm, data) {\n          _this.props.onSelection(_this.editor, data);\n        });\n      }\n      break;\n\n      case 'onTouchStart': {\n        _this.editor.on('touchstart', function(cm, event) {\n          _this.props.onTouchStart(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onUpdate': {\n        _this.editor.on('update', function(cm) {\n          _this.props.onUpdate(_this.editor);\n        });\n      }\n      break;\n\n      case 'onViewportChange': {\n        _this.editor.on('viewportChange', function(cm, from, to) {\n          _this.props.onViewportChange(_this.editor, from, to);\n        });\n      }\n      break;\n      }\n    });\n  };\n\n  return Shared;\n}();\n\nvar Controlled = function(_super) {\n  __extends(Controlled, _super);\n\n  function Controlled(props) {\n    var _this = _super.call(this, props) || this;\n\n    if (SERVER_RENDERED) return _this;\n    _this.applied = false;\n    _this.appliedNext = false;\n    _this.appliedUserDefined = false;\n    _this.deferred = null;\n    _this.emulating = false;\n    _this.hydrated = false;\n\n    _this.initCb = function() {\n      if (_this.props.editorDidConfigure) {\n        _this.props.editorDidConfigure(_this.editor);\n      }\n    };\n\n    _this.mounted = false;\n    return _this;\n  }\n\n  Controlled.prototype.hydrate = function(props) {\n    var _this = this;\n\n    var _options = props && props.options ? props.options : {};\n\n    var userDefinedOptions = _extends({}, cm.defaults, this.editor.options, _options);\n\n    var optionDelta = Object.keys(userDefinedOptions).some(function(key) {\n      return _this.editor.getOption(key) !== userDefinedOptions[key];\n    });\n\n    if (optionDelta) {\n      Object.keys(userDefinedOptions).forEach(function(key) {\n        if (_options.hasOwnProperty(key)) {\n          if (_this.editor.getOption(key) !== userDefinedOptions[key]) {\n            _this.editor.setOption(key, userDefinedOptions[key]);\n\n            _this.mirror.setOption(key, userDefinedOptions[key]);\n          }\n        }\n      });\n    }\n\n    if (!this.hydrated) {\n      this.deferred ? this.resolveChange(props.value) : this.initChange(props.value || '');\n    }\n\n    this.hydrated = true;\n  };\n\n  Controlled.prototype.initChange = function(value) {\n    this.emulating = true;\n    var doc = this.editor.getDoc();\n    var lastLine = doc.lastLine();\n    var lastChar = doc.getLine(doc.lastLine()).length;\n    doc.replaceRange(value || '', {\n      line: 0,\n      ch: 0\n    }, {\n      line: lastLine,\n      ch: lastChar\n    });\n    this.mirror.setValue(value);\n    doc.clearHistory();\n    this.mirror.clearHistory();\n    this.emulating = false;\n  };\n\n  Controlled.prototype.resolveChange = function (value) {\n    this.emulating = true;\n    var doc = this.editor.getDoc();\n\n    if (this.deferred.origin === 'undo') {\n      doc.undo();\n    } else if (this.deferred.origin === 'redo') {\n      doc.redo();\n    } else {\n      doc.replaceRange(this.deferred.text, this.deferred.from, this.deferred.to, this.deferred.origin);\n    }\n    if (value && value !== doc.getValue()) {\n      var cursor = doc.getCursor();\n      doc.setValue(value);\n      doc.setCursor(cursor);\n    }\n\n    this.emulating = false;\n    this.deferred = null;\n  };\n\n  Controlled.prototype.mirrorChange = function(deferred) {\n    var doc = this.editor.getDoc();\n\n    if (deferred.origin === 'undo') {\n      doc.setHistory(this.mirror.getHistory());\n      this.mirror.undo();\n    } else if (deferred.origin === 'redo') {\n      doc.setHistory(this.mirror.getHistory());\n      this.mirror.redo();\n    } else {\n      this.mirror.replaceRange(deferred.text, deferred.from, deferred.to, deferred.origin);\n    }\n\n    return this.mirror.getValue();\n  };\n\n  Controlled.prototype.componentDidMount = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return;\n\n    if (this.props.defineMode) {\n      if (this.props.defineMode.name && this.props.defineMode.fn) {\n        cm.defineMode(this.props.defineMode.name, this.props.defineMode.fn);\n      }\n    }\n\n    this.editor = cm(this.ref, this.props.options);\n    this.shared = new Shared(this.editor, this.props);\n    this.mirror = cm(function() {}, this.props.options);\n    this.editor.on('electricInput', function() {\n      _this.mirror.setHistory(_this.editor.getDoc().getHistory());\n    });\n    this.editor.on('cursorActivity', function() {\n      _this.mirror.setCursor(_this.editor.getDoc().getCursor());\n    });\n    this.editor.on('beforeChange', function(cm, data) {\n      if (_this.emulating) {\n        return;\n      }\n\n      data.cancel();\n      _this.deferred = data;\n      var originalData = _this.mirror.getValue();\n      var phantomChange = _this.mirrorChange(_this.deferred);\n      if (_this.props.onBeforeChange) _this.props.onBeforeChange(cm, _this.deferred, phantomChange, () => { \n        _this.mirror.setValue(originalData);\n      });\n    });\n    this.editor.on('change', function(cm, data) {\n      if (!_this.mounted) {\n        return;\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(_this.editor, data, _this.editor.getValue());\n      }\n    });\n    this.hydrate(this.props);\n    this.shared.apply(this.props);\n    this.applied = true;\n    this.mounted = true;\n    this.shared.wire(this.props);\n\n    if (this.editor.getOption('autofocus')) {\n      this.editor.focus();\n    }\n\n    if (this.props.editorDidMount) {\n      this.props.editorDidMount(this.editor, this.editor.getValue(), this.initCb);\n    }\n  };\n\n  Controlled.prototype.componentDidUpdate = function(prevProps) {\n    if (SERVER_RENDERED) return;\n    var preserved = {\n      cursor: null\n    };\n\n    if (this.props.value !== prevProps.value) {\n      this.hydrated = false;\n    }\n\n    if (!this.props.autoCursor && this.props.autoCursor !== undefined) {\n      preserved.cursor = this.editor.getDoc().getCursor();\n    }\n\n    this.hydrate(this.props);\n\n    if (!this.appliedNext) {\n      this.shared.applyNext(prevProps, this.props, preserved);\n      this.appliedNext = true;\n    }\n\n    this.shared.applyUserDefined(prevProps, preserved);\n    this.appliedUserDefined = true;\n  };\n\n  Controlled.prototype.componentWillUnmount = function() {\n    if (SERVER_RENDERED) return;\n\n    if (this.props.editorWillUnmount) {\n      this.props.editorWillUnmount(cm);\n    }\n  };\n\n  Controlled.prototype.shouldComponentUpdate = function(nextProps, nextState) {\n    return !SERVER_RENDERED;\n  };\n\n  Controlled.prototype.render = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return null;\n    var className = this.props.className ? 'react-codemirror2 ' + this.props.className : 'react-codemirror2';\n    return React.createElement('div', {\n      className: className,\n      ref: function ref(self) {\n        return _this.ref = self;\n      }\n    });\n  };\n\n  return Controlled;\n}(React.Component);\n\nexports.Controlled = Controlled;\n\nvar UnControlled = function(_super) {\n  __extends(UnControlled, _super);\n\n  function UnControlled(props) {\n    var _this = _super.call(this, props) || this;\n\n    if (SERVER_RENDERED) return _this;\n    _this.applied = false;\n    _this.appliedUserDefined = false;\n    _this.continueChange = false;\n    _this.detached = false;\n    _this.hydrated = false;\n\n    _this.initCb = function() {\n      if (_this.props.editorDidConfigure) {\n        _this.props.editorDidConfigure(_this.editor);\n      }\n    };\n\n    _this.mounted = false;\n\n    _this.onBeforeChangeCb = function() {\n      _this.continueChange = true;\n    };\n\n    return _this;\n  }\n\n  UnControlled.prototype.hydrate = function(props) {\n    var _this = this;\n\n    var _options = props && props.options ? props.options : {};\n\n    var userDefinedOptions = _extends({}, cm.defaults, this.editor.options, _options);\n\n    var optionDelta = Object.keys(userDefinedOptions).some(function(key) {\n      return _this.editor.getOption(key) !== userDefinedOptions[key];\n    });\n\n    if (optionDelta) {\n      Object.keys(userDefinedOptions).forEach(function(key) {\n        if (_options.hasOwnProperty(key)) {\n          if (_this.editor.getOption(key) !== userDefinedOptions[key]) {\n            _this.editor.setOption(key, userDefinedOptions[key]);\n          }\n        }\n      });\n    }\n\n    if (!this.hydrated) {\n      var doc = this.editor.getDoc();\n      var lastLine = doc.lastLine();\n      var lastChar = doc.getLine(doc.lastLine()).length;\n      doc.replaceRange(props.value || '', {\n        line: 0,\n        ch: 0\n      }, {\n        line: lastLine,\n        ch: lastChar\n      });\n    }\n\n    this.hydrated = true;\n  };\n\n  UnControlled.prototype.componentDidMount = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return;\n    this.detached = this.props.detach === true;\n\n    if (this.props.defineMode) {\n      if (this.props.defineMode.name && this.props.defineMode.fn) {\n        cm.defineMode(this.props.defineMode.name, this.props.defineMode.fn);\n      }\n    }\n\n    this.editor = cm(this.ref, this.props.options);\n    this.shared = new Shared(this.editor, this.props);\n    this.editor.on('beforeChange', function(cm, data) {\n      if (_this.props.onBeforeChange) {\n        _this.props.onBeforeChange(_this.editor, data, _this.editor.getValue(), _this.onBeforeChangeCb);\n      }\n    });\n    this.editor.on('change', function(cm, data) {\n      if (!_this.mounted || !_this.props.onChange) {\n        return;\n      }\n\n      if (_this.props.onBeforeChange) {\n        if (_this.continueChange) {\n          _this.props.onChange(_this.editor, data, _this.editor.getValue());\n        }\n      } else {\n        _this.props.onChange(_this.editor, data, _this.editor.getValue());\n      }\n    });\n    this.hydrate(this.props);\n    this.shared.apply(this.props);\n    this.applied = true;\n    this.mounted = true;\n    this.shared.wire(this.props);\n    this.editor.getDoc().clearHistory();\n\n    if (this.props.editorDidMount) {\n      this.props.editorDidMount(this.editor, this.editor.getValue(), this.initCb);\n    }\n  };\n\n  UnControlled.prototype.componentDidUpdate = function(prevProps) {\n    if (this.detached && this.props.detach === false) {\n      this.detached = false;\n\n      if (prevProps.editorDidAttach) {\n        prevProps.editorDidAttach(this.editor);\n      }\n    }\n\n    if (!this.detached && this.props.detach === true) {\n      this.detached = true;\n\n      if (prevProps.editorDidDetach) {\n        prevProps.editorDidDetach(this.editor);\n      }\n    }\n\n    if (SERVER_RENDERED || this.detached) return;\n    var preserved = {\n      cursor: null\n    };\n\n    if (this.props.value !== prevProps.value) {\n      this.hydrated = false;\n      this.applied = false;\n      this.appliedUserDefined = false;\n    }\n\n    if (!prevProps.autoCursor && prevProps.autoCursor !== undefined) {\n      preserved.cursor = this.editor.getDoc().getCursor();\n    }\n\n    this.hydrate(this.props);\n\n    if (!this.applied) {\n      this.shared.apply(prevProps);\n      this.applied = true;\n    }\n\n    if (!this.appliedUserDefined) {\n      this.shared.applyUserDefined(prevProps, preserved);\n      this.appliedUserDefined = true;\n    }\n  };\n\n  UnControlled.prototype.componentWillUnmount = function() {\n    if (SERVER_RENDERED) return;\n\n    if (this.props.editorWillUnmount) {\n      this.props.editorWillUnmount(cm);\n    }\n  };\n\n  UnControlled.prototype.shouldComponentUpdate = function(nextProps, nextState) {\n    var update = true;\n    if (SERVER_RENDERED) update = false;\n    if (this.detached && nextProps.detach) update = false;\n    return update;\n  };\n\n  UnControlled.prototype.render = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return null;\n    var className = this.props.className ? 'react-codemirror2 ' + this.props.className : 'react-codemirror2';\n    return React.createElement('div', {\n      className: className,\n      ref: function ref(self) {\n        return _this.ref = self;\n      }\n    });\n  };\n\n  return UnControlled;\n}(React.Component);\n\nexports.UnControlled = UnControlled;"],"sourceRoot":""}