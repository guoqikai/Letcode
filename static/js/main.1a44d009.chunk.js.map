{"version":3,"sources":["api_code/GetFromBackend.js","react-components/layout/SignedInLinks.js","react-components/layout/SignedOutLinks.js","react-components/layout/Header.js","react-components/auth/SignIn.js","react-components/auth/SignUp.js","react-components/auth/MainLogin.js","react-components/mainpage/SearchBar.js","react-components/mainpage/AllFilter.js","react-components/mainpage/Sortby.js","react-components/mainpage/TitleCards.js","react-components/mainpage/DailyQuestionCard.js","react-components/mainpage/index.js","img_source/placeholder.png","react-components/user/Message.js","react-components/user/Profile.js","letcode-code-runner/type.ts","letcode-code-runner/mapper.ts","letcode-code-runner/letcode-mapper.ts","react-components/post-question/TypePopup.js","letcode-code-runner/code-runner.ts","react-components/post-question/CreateQuestion.js","react-components/question-page/QuestionDesc.js","react-components/question-page/Editor.js","react-components/question-page/Answers.js","react-components/test-case/test-case-view-lg.js","react-components/test-case/add-test-case.js","react-components/question-page/TestCases.js","react-components/question-page/QuestionContainer.js","react-components/question-page/QuestionPage.js","react-components/answer-question/editor.js","letcode-code-runner/python/python-mapper.ts","letcode-code-runner/python/code-runner-python-impl.ts","letcode-code-runner/code-runner-global.ts","react-components/test-case/test-case-view-sm.js","react-components/answer-question/answer-question.js","react-components/post-question/AddTestcase.js","App.js","reportWebVitals.js","index.js","api_code/PostToBackend.js","react-codemirror2/index.js"],"names":["getUser","user","username","intro","profilePic","Promise","resolve","setTimeout","SignedInLinks","state","then","value","setState","this","props","history","push","className","NavLink","as","Link","to","NavDropdown","title","id","Item","onClick","console","log","Component","SignedOutLinks","Header","SignIn","password","handleChange","e","target","onSubmit","preventDefault","userSignIn","res","status","alert","Container","Row","Col","Form","Group","Label","Control","type","placeholder","onChange","Text","withRouter","SignUp","confirmPwd","handleSubmit","length","postUser","MainLogin","SearchBar","Card","class","InputBase","theme","size","fill","AllFilter","titles","name","top","mid","bot","Sortby","makeStyles","root","padding","display","alignItems","width","margin","classes","TitleCard","useState","collection","setcollection","items","description","DailyQuestionCard","CardContent","MainPage","map","obj","Message","messages","time","sender","message","index","href","content","Profile","questions","answers","fileUploadState","displayID","postHistory","myCollection","toggle","tab","ListGroup","action","src","personalInfo","postHistroy","replies","mycollection","style","marginLeft","Type","selfType","keyType","valueType","INT","FLOAT","STRING","BOOL","includes","Error","undefined","VariableType","FunctionType","paramsType","returnType","CodeMapperAccumulator","vars","code","CodeMapper","int_","float_","string_","bool_","dict_","list_","input","acc","toString","codeMap","Map","splitOutterMost","slice","kv","key_value","set","mapCode","codeList","x","TypeMapper","mapType","canBeMapped","isPair","str1","str2","l","str","by","strList","brackets","last","i","trim","pop","StringToLetCodeCodeMapper","val","test","f","String","parseInt","parseFloat","pairs","forEach","v","k","join","LetCodeTypeMapper","key","TypePopup","pushModal","keyTypeStr","valueTypeStr","getTypeselectionFrom","setKey","bind","setValue","onComplete","onCancel","Modal","show","onHide","aria-labelledby","centered","closeButton","Title","Body","getBody","Footer","LIST","DICT","React","onSelected","defaultValue","selectedValue","options","selected","o","RunnerState","CreateQuestion","functionName","returnDescription","currentInputName","currentInputDescription","currentInputType","inputs","inputName","inputDescription","inputType","testcases","outputs","popUps","handleAddInput","handleDelete","handleChangeInput","handleNext","pathname","newPopUps","popLast","for","rows","aria-describedby","handleTypeSelection","QuestionDesc","desc","question","getQuestion","Editor","selectedLang","editor","data","cancel","onCodeChange","mustInclude","split","lang","extraTheme","onBeforeChange","onEditorChange","indentWithTabs","tabSize","indentUnit","lineWrapping","mode","getMode","lineNumbers","matchBrackets","matchhighlight","autoCloseBrackets","Answers","changeCode","answer1","detail","language","upvotes","downvotes","answer2","getAnswers","answerList","answer","alt","readOnly","TestCaseViewLarge","header","actualOutputHead","actualOutputVal","testCase","functionType","isModal","actualOutput","Date","date","toDateString","numRun","ind","output","TestCaseViewModal","mapStatus","AddtestCaseForm","userIn","error","isReturn","upload","nameError","descError","varsCp","field","update","newT","indexOf","varType","htmlFor","required","ty","updateVars","onAdd","local","mapToGroup","result","isLocal","allPass","notEmpty","vt","formatted","err","AddTestCaseModal","TestCases","showAddTestCase","testCaseDetail","testCaseSortBy","testCasesView","runnerState","_id","testCases","onTestCaseAdd","QuestionContainer","activeTab","setActiveTab","sm","Nav","tabs","NavItem","classnames","active","TabContent","TabPane","tabId","Button","color","offset","QuestionPage","TestTracker","userCode","generatedCode","testCompletionTime","testPassed","TestCase","expectedOutput","onSuceess","onFailure","LetCodeToPythonCodeMapper","PythonTypeMapper","PythonLetCodeCodeMapperFuncName","PythonToLetCodeCodeMapper","testWarpingFunctionName","CoderunnerPythonImpl","UNINIT","interpreter_webworker","onStdout","onError","notifyRunnerState","currentTestTracker","resolveCurrentTracker","updateState","INITING","worker","default","addEventListener","onmessage","READY","handleMessage","onerror","handleError","postMessage","ERROR","COMPILING","s","testCasesInternalName","tc","args","tcName","getVariableName","numTest","testWarperName","msg","RUNNING","testCaseNum","nameWanted","outputName","codeRuners","getCodeRunner","get","TestCaseViewSmall","role","xmlns","height","viewBox","d","canSelect","_key","onSelect","checked","autoComplete","getHeader","getIconByStatus","AnswerQuestion","preferedLang","userId","supLang","func","langs","canSupportFunctionType","getSupportedLang","defaultLang","runner","setConsole","consoleOnMsg","consoleOnErr","starter","getStarterCode","localStorage","setItem","JSON","stringify","localTestCase","store","parse","getItem","supportedLang","concat","codeRunner","starterList","codeRunnerState","newLog","Math","max","messagesEnd","scrollIntoView","behavior","newCases","maxWidth","lastHistory","toLocaleString","sort","a","b","filter","onTestCaseSelect","testcase","h","runOnce","init","TestToRun","newTestCases","newTc","onTestOut","pass","nnTc","newTcs","info","runTest","codeTacker","newHistory","unshift","onLangSelectChange","getMustIncludeStarter","float","clear","ref","el","Tabs","activeKey","Tab","eventKey","DropdownButton","variant","Dropdown","mapTestCases","mapHistory","removeItem","window","location","reload","getRecentTestInfo","disabled","toUpperCase","AddTestcase","handleAddTestcase","handleInputOnchange","inputIndex","testcaseIndex","handleOnchange","handlePost","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports","fetch","method","headers","body","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","_typeof","Symbol","iterator","constructor","__extends","_extendStatics","setPrototypeOf","__proto__","Array","p","__","create","defineProperty","UnControlled","Controlled","cm","require","SERVER_RENDERED","navigator","global","Helper","equals","y","_this","ok","keys","tx","every","Shared","delegateCursor","position","scroll","focus","doc","getDoc","setCursor","delegateScroll","coordinates","scrollTo","delegateSelection","ranges","setSelections","selection","cursor","autoScroll","getOption","applyNext","next","preserved","autoCursor","applyUserDefined","wire","prop","on","event","onBlur","onContextMenu","onCopy","onCursor","getCursor","onCursorActivity","onCut","onDblClick","onDragEnter","onDragLeave","onDragOver","onDragStart","onDrop","onFocus","lineNumber","gutter","onGutterClick","EditorChangeEvent","onInputRead","onKeyDown","onKeyHandled","onKeyPress","onKeyUp","onMouseDown","onPaste","line","element","onRenderLine","onScroll","getScrollInfo","onSelection","onTouchStart","onUpdate","from","onViewportChange","_super","applied","appliedNext","appliedUserDefined","deferred","emulating","hydrated","initCb","editorDidConfigure","mounted","hydrate","_options","userDefinedOptions","defaults","some","setOption","mirror","resolveChange","initChange","lastLine","lastChar","getLine","replaceRange","ch","clearHistory","origin","undo","redo","text","getValue","mirrorChange","setHistory","getHistory","componentDidMount","defineMode","fn","shared","originalData","phantomChange","editorDidMount","componentDidUpdate","prevProps","componentWillUnmount","editorWillUnmount","shouldComponentUpdate","nextProps","nextState","createElement","self","continueChange","detached","onBeforeChangeCb","detach","editorDidAttach","editorDidDetach"],"mappings":"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","file":"static/js/main.1a44d009.chunk.js","sourcesContent":["\nexport const getUser = () => {\n    let user = {\n        username: 'username',\n        intro: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.',\n        profilePic: '../../assets/placeholder.png'\n    }\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(user);\n        }, 1000)\n    })\n}\n\nexport const getAnswers = () => {\n    let answer1 = {\n        user: {\n            username: 'username',\n            profilePic: '../../assets/placeholder.png'\n        },\n        detail: {\n            code: `class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        Map<Integer, Integer> map = new HashMap<>();\n        for(int i = 0; i < nums.length; i++){\n            int com = target - nums[i];\n            if(map.containsKey(com)){\n                return new int[] {map.get(com), i};\n            }\n            map.put(nums[i], i);\n        }\n    }\n}`,\n            language: 'Java'\n        },\n        upvotes: 13,\n        downvotes: 1\n    }\n\n    let answer2 = {\n        user: {\n            username: 'anotheruser',\n            profilePic: '../../assets/user3.jpg'\n        },\n        detail: {\n            code:`class Solution(object):\n    def twoSum(self, nums, target):\n        dict = {}\n        for i, num in enumerate(nums):\n            com = target - num\n            if com in dict:\n                return [dict[com], i]\n            else:\n                dict[num] = i`,\n            language: 'Python'\n        },\n        upvotes: 24,\n        downvotes: 2\n    }\n\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve([answer1, answer2]);\n        }, 1000)\n    })\n}\n\n\n// export const getUser = (username) => {\n//     return fetch(\"/user/\" + username + \"/get\").then(res => {\n//         console.log(\"res\", res)\n//         if (res.ok) {\n//             console.log(\"return \", res)\n//             return res\n//         }\n//     })\n// }\n\nexport const getQuestion = () => {\n    let question = {\n        id: 3,\n        title: 'ipsum dolor sit amet',\n        desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n    }\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(question);\n        }, 1000)\n    })\n}\n\n","import { NavLink, NavDropdown } from 'react-bootstrap'\n// import { getUser } from '../../api_code/GetFromBackend'\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { getUser } from '../../api_code/GetFromBackend'\n\nclass SignedInLinks extends Component {\n    state = {\n        username: ''\n    }\n\n    componentDidMount() {\n        getUser().then(value => {\n            this.setState({\n                username: value.username,\n                intro: value.intro,\n                profilePic: value.profilePic\n            })\n        })\n        // let user = getUser()\n        // user.then((value) => {\n        //     this.setState({\n        //         username: value.username\n        //     })\n        // })\n    }\n\n    handleClickCollection(){\n        this.props.history.push('/collection')\n    }\n\n    render() {\n        return (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                    <NavLink as={Link} to=\"/newquestion\">New Question</NavLink>\n                </li>\n                <NavDropdown title={'Hi! ' + this.state.username} id=\"basic-nav-dropdown\" className=\"active\">\n                    <NavDropdown.Item as={Link} to=\"/myprofile\">My profile</NavDropdown.Item>\n                    {/* <NavDropdown.Item onClick={()=>handleLogout(this.props.user.username)}>Log out</NavDropdown.Item> */}\n                    <NavDropdown.Item onClick={console.log(\"log out\")}>Log out</NavDropdown.Item>\n                </NavDropdown>\n            </ul>\n        )\n    }\n}\nexport default SignedInLinks","import React, { Component } from 'react'\nimport {NavLink} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst SignedOutLinks = (props) => {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n                <NavLink as={Link} to=\"/signin_up\">Sign in/Sign up</NavLink>\n        </li>\n        </ul>\n    )\n}\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav, Navbar, NavDropdown, Form, Button, FormControl} from 'react-bootstrap'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { NavLink } from 'react-bootstrap'\r\n\r\nconst Header = (props) => {\r\n    return ( \r\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light py-1\">\r\n        \r\n        <div className=\"navbar navbar-expand-md navbar-light bg-light\">\r\n            <NavLink className=\"navbar-brand mx-auto\" as={Link} to=\"/\">LetCode</NavLink>\r\n        </div>\r\n        <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <SignedOutLinks></SignedOutLinks>\r\n              <SignedInLinks></SignedInLinks>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\nimport { Form, Container, Row, Col } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport { userSignIn } from '../../api_code/PostToBackend'\nimport './MainLogin.css'\n\nclass SignIn extends Component {\n    state = {\n        username: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        userSignIn(this.state).then(\n            res => {\n                if (res.status == 200){\n                    alert('success')\n                }else{\n                    alert('fail')\n                }\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"MainLogin-center\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h3>Sign In</h3>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Username\" id=\"username\" onChange={this.handleChange} />\n                                <Form.Text className=\"text-muted\">\n                                    We'll never share your email with anyone else.\n                        </Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" id=\"password\" onChange={this.handleChange} />\n                            </Form.Group>\n\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <button className=\"blue\" type=\"submit\" onClick={this.onSubmit}>\n                            Sign In\n                    </button>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(SignIn)","import React, { Component } from 'react'\nimport { Form, Container, Row, Col } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport './MainLogin.css'\nimport { postUser } from '../../api_code/PostToBackend'\n\nclass SignUp extends Component {\n    state = {\n        username: '',\n        password: '',\n        confirmPwd: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        if (!this.state.username  || !this.state.password || !this.state.confirmPwd) {\n            alert(\"Missing required information.\")\n        } \n        else if (this.state.password !== this.state.confirmPwd) {\n            alert(\"Confirmed password differ from the password.\")\n        } \n        else if (this.state.password.length <= 8){\n            alert(\"Password need to be no less than 8 characters!\")\n        }\n        else {\n            let user = {\n                username: this.state.username,\n                password: this.state.password,\n                intro: \"hi\",\n                profilePic: '../../assets/placeholder.png'\n            }\n            postUser(user).then((res) => {\n                if (res.status == 200){\n                    alert('Your account is successfully created!')\n                }\n                else{\n                    alert('Your username is already taken!')\n                }\n            }\n            )\n            \n            // console.log(\"i want to see this res status\", res)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"MainLogin-center\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h3>Sign Up</h3>\n                        </Col>\n\n                    </Row>\n                    <Row>\n\n                        <Col>\n                            <p>Please fill in this form to create an account!</p>\n                        </Col>\n                    </Row>\n\n                    <Form>\n                        <Form.Row>\n                            <Col>\n                                <Form.Control placeholder=\"Username\" id=\"username\" onChange={this.handleChange} />\n                            </Col>\n                        </Form.Row>\n                    </Form>\n                    <br />\n                    {/* <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control type=\"email\" id=\"email\" placeholder=\"Enter email\" onChange={this.handleChange} />\n                            </Form.Group>\n                        </Col>\n                    </Row> */}\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" id=\"password\" onChange={this.handleChange} />\n                                <br></br>\n                                <Form.Control type=\"password\" placeholder=\"Confirm Password\" id=\"confirmPwd\" onChange={this.handleChange} />\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <button className=\"blue\" type=\"submit\" onClick={this.handleSubmit} >\n                            Sign Up\n                        </button>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default SignUp","import React from 'react'\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst MainLogin = () => {\n    return (\n        <Container>\n            <Row>\n                <Col><SignIn></SignIn></Col>\n                <Col><SignUp></SignUp></Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default MainLogin","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {Search, search} from '@icon-park/react'\nimport './cards.css'\n\n\nclass SearchBar extends Component {\n    render() {\n        return (\n            <Card class=\"shadow p-2 bg-white\" className=\"search-bar-background\"> \n            <InputBase className=\"search-input\"\n                placeholder=\"Search Question\"/>\n            <Search className=\"search-icon\" theme=\"outline\" size=\"30\" fill=\"#333\" onClick={()=>{console.log(\"search\")}}></Search>\n\n            </Card>        \n        )\n    }\n}\nexport default SearchBar;","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { NavLink, NavDropdown } from 'react-bootstrap'\n\nclass AllFilter extends Component {\n    constructor(props){\n        super(props)\n        this.titles = this.props.titles\n    }\n    render() {\n        return (\n            <div>\n                <NavDropdown title={this.titles.name} id=\"basic-nav-dropdown\" className=\"active\">\n                    <NavDropdown.Item >{this.titles.top}</NavDropdown.Item>\n                    {/* <NavDropdown.Item onClick={()=>handleLogout(this.props.user.username)}>Log out</NavDropdown.Item> */}\n                    <NavDropdown.Item>{this.titles.mid}</NavDropdown.Item>\n                    <NavDropdown.Item>{this.titles.bot}</NavDropdown.Item>\n                </NavDropdown>\n            </div>       \n        )\n    }\n}\nexport default AllFilter;","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { NavLink, NavDropdown } from 'react-bootstrap'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '10%',\n        margin: 9\n    },\n  }));\n\nclass Sortby extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <NavDropdown title=\"Sort by\" id=\"basic-nav-dropdown\" className=\"active\">\n                    <NavDropdown.Item >Most Popular</NavDropdown.Item>\n                    {/* <NavDropdown.Item onClick={()=>handleLogout(this.props.user.username)}>Log out</NavDropdown.Item> */}\n                    <NavDropdown.Item>Resently answered</NavDropdown.Item>\n                    {/* <NavDropdown.Item></NavDropdown.Item> */}\n                </NavDropdown>\n            </div>       \n        )\n    }\n}\nexport default Sortby;","import React, {useState} from 'react'\nimport { Star} from '@icon-park/react'\n\n\nfunction TitleCard(props){\n\n\n  const [collection, setcollection] = useState(true)\n\n  var changeCollection = (e) => {\n    e.preventDefault()\n    if (collection === false){\n      setcollection(true)\n\n    }\n    else{\n      setcollection(false)\n    }\n    console.log(\"question status:\", collection)\n  }\n    return (\n        <div class=\"card\"> \n        <div class=\"block\" className=\"star-icon mystar\">\n          <Star onClick={changeCollection} theme={collection ? \"outline\" : \"filled\"} size=\"30\" fill={collection ? \"#333\" : \"orange\" }/></div>  \n        <div class=\"card-body\" onClick={()=>console.log(\"question\")}>\n            <div class = \"col\">\n            <div class=\"row\">\n              <div class=\"block\" className=\"question-title\">{props.items.title}</div>         \n            </div>   \n            <br></br>\n            <div className=\"question-description\"> {props.items.description} </div>\n            <br></br>\n            <div class=\"row\">\n              <div class=\"block\" className=\"upvote-number\">upvotes: </div>\n              <div class=\"block\" className=\"reply-number\">replies: </div>\n            </div>\n            </div>  \n          </div>       \n      </div>\n)\n}\n\nexport default TitleCard;\n","import React, {useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from 'react-bootstrap/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport \"./cards.css\"\nimport { Star} from '@icon-park/react'\nimport { grey } from '@material-ui/core/colors';\n\n\nfunction DailyQuestionCard(props){\n    \n    \n    const [collection, setcollection] = useState(true)\n    var changeCollection = (e) => {\n        e.preventDefault()\n        if (collection == false){\n          setcollection(true)\n        }\n        else{\n          setcollection(false)\n        }\n        console.log(\"question of the day status:\", collection)\n      }\n    \n    return (\n        <Card>        \n        <CardContent>\n            <div class=\"row\">\n                <div class=\"col\" >\n                <div class=\"block\" className=\"star-icon mystar\">\n                        <Star theme={collection ? \"outline\" : \"filled\"} size=\"30\" fill={collection ? \"#333\" : \"orange\" } onClick={changeCollection}/></div>\n                    <div class=\"row\">\n                    <div class=\"block\" className=\"question-of-the-day-topic\"  onClick={()=>{console.log(\"this is question of the day\")}}>{props.items.title}</div>\n                    </div>   \n                    <br></br>\n                    <div className=\"question-description\"> {props.items.description} </div>\n                    <br></br>\n                    <div class=\"row\">\n              <div class=\"block\" className=\"upvote-number\">upvotes: </div>\n              <div class=\"block\" className=\"reply-number\">replies: </div>\n            </div>\n                </div>\n                <div class=\"col\">\n                    <div className=\"question-of-the-day-reply\">\n                        replies heree\n                        <br></br>\n                        and here\n                        <br></br>\n                        and here\n                        question reply\n                    </div>\n                </div>\n            </div>\n          </CardContent> \n        </Card>     \n    )\n}\n\nexport default DailyQuestionCard;\n","import React, { Component } from 'react'\nimport SearchBar from './SearchBar';\nimport AllFilter from './AllFilter';\nimport Sortby from './Sortby.js';\nimport TitleCard from './TitleCards';\nimport DailyQuestionCard from './DailyQuestionCard';\nimport \"./index.css\";\n\nclass MainPage extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n        items:\n         [{\"id\": 1, \"title\": \" Find First and Last Position of Element in Sorted Array\", \"description\": \"Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.If target is not found in the array, return [-1, -1].\"},\n          {\"id\": 2, \"title\": \"Permutations\", \"description\": \"Given a collection of numbers, nums, that might contain duplicates, return all possible unique permutations in any order.\"}, \n          {\"id\": 3, \"title\": \"Swap Nodes in Pairs\", \"description\": \"Given a linked list, swap every two adjacent nodes and return its head. You may not modify the values in the list's nodes. Only nodes itself may be changed.\"},\n          {\"id\": 4, \"title\": \"Swap Nodes in Pairs\", \"description\": \"Given a linked list, swap every two adjacent nodes and return its head. You may not modify the values in the list's nodes. Only nodes itself may be changed.\"},\n          {\"id\": 5, \"title\": \"Swap Nodes in Pairs\", \"description\": \"Given a linked list, swap every two adjacent nodes and return its head. You may not modify the values in the list's nodes. Only nodes itself may be changed.\"},\n          {\"id\": 6, \"title\": \"Swap Nodes in Pairs\", \"description\": \"Given a linked list, swap every two adjacent nodes and return its head. You may not modify the values in the list's nodes. Only nodes itself may be changed.\"}]\n        };\n        this.titles = {\n            titles:\n            [{name:\"Difficulty\", top:\"hard\", mid:\"medium\", bot:\"easy\"},\n             {name:\"Status\", top:\"Todo\", mid:\"Solved\", bot:\"Attempted\"}]\n        }\n    }\n    \n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <h1 className=\"question-of-the-day-title\">Question of the DAYYY</h1>\n                <div className=\"question-of-the-day-card\">\n                    <DailyQuestionCard items={{\"id\": 2, \"title\": \"Longest Substring Without Repeating Characters\", \"description\": \"Given a string s, find the length of the longest substring without repeating characters.\"}} class=\"card\"/>\n                </div>\n                <div className=\"search-bar\"><SearchBar></SearchBar></div>\n                <div class=\"row\" className=\"filter-rows\">\n                <div class=\"block\" className=\"difficulty-filter\"><AllFilter titles={this.titles.titles[0]}></AllFilter></div>\n                <div class=\"block\" className=\"status-filter\"><AllFilter titles={this.titles.titles[1]}></AllFilter></div>\n                <div class=\"block\" className=\"sortby-filter\"><Sortby></Sortby></div>\n                </div>\n                {/* {this.titles.titles.map(obj => <div style={{marginLeft: \"10.5%\"}}><AllFilter titles={obj} class=\"card\"/></div>)} */}\n                {this.state.items.map(obj => <div className=\"question-card\"><TitleCard items={obj} class=\"card\"/></div>)}\n            </div>\n        \n        )\n    }\n}\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/placeholder.a1c30e1f.png\";","import React, { Component } from 'react'\nimport { Card, ListGroup } from 'react-bootstrap'\nimport \"./profile.css\"\n\n\nclass Message extends Component {\n    state = {\n        messages:\n            [{ \"id\": 1, \"title\": \"message1\", \"content\": \"Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forw a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forwardard.\", time: '3 days ago', sender: 'sender1'},\n            { \"id\": 2, \"title\": \"message2\", \"content\": \"Given a string s, find the length of the longest substring without repeating characters.\", time: '3 days ago', sender: 'sender2' },\n            { \"id\": 3, \"title\": \"message3\", \"content\": \"Given a linked list, reverse the nodes of a linked list k at a time and return its modified list.\", time: '3 days ago', sender: 'sender3' }]\n    }\n\n    render() {\n        return (\n            <div class=\"list-group\">\n                {this.state.messages.map((message, index) => (\n                    <a href=\"#\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n                        <div class=\"d-flex w-100 justify-content-between\">\n                            <h5 class=\"mb-1\">{message.title}</h5>\n                            <small>{message.time}</small>\n                        </div>\n                        <p class=\"mb-1\">{message.content}</p>\n                        <small>{message.sender}</small>\n                    </a>\n                )\n                )\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default Message \n","import React, { Component, useState } from 'react'\nimport {ListGroup} from 'react-bootstrap'\nimport { getUser } from '../../api_code/GetFromBackend'\nimport profilePic from '../../img_source/placeholder.png'\nimport TitleCard from '../mainpage/TitleCards';\nimport Message from './Message'\nimport \"./profile.css\"\n\n\nclass Profile extends Component {\n    state = {\n        username: 'user1',\n        profilePic: '',\n        intro: '',\n        questions: [],\n        answers: [],\n        fileUploadState: \"\",\n        displayID: '1',\n        postHistory: \n         [{\"id\": 1, \"title\": \"Palindrome Number\", \"description\": \"Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forw a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forwardard.\"},\n          {\"id\": 2, \"title\": \"Longest Substring Without Repeating Characters\", \"description\": \"Given a string s, find the length of the longest substring without repeating characters.\"}, \n          {\"id\": 3, \"title\": \"Reverse Nodes in k-group\", \"description\": \"Given a linked list, reverse the nodes of a linked list k at a time and return its modified list.\"}],\n        myCollection: \n          [{\"id\": 1, \"title\": \"Palindrome Number\", \"description\": \"Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forw a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forward a palindrome when it reads the same backward as forwardard.\"},\n           {\"id\": 2, \"title\": \"Longest Substring Without Repeating Characters\", \"description\": \"Given a string s, find the length of the longest substring without repeating characters.\"}, \n           {\"id\": 3, \"title\": \"Reverse Nodes in k-group\", \"description\": \"Given a linked list, reverse the nodes of a linked list k at a time and return its modified list.\"}]\n    }\n\n    // get user information from backend and set state when component mount\n\n    componentDidMount() {\n        getUser().then(value => {\n            this.setState({\n                username: value.username,\n                intro: value.intro,\n                profilePic: value.profilePic\n            })\n        })\n    }\n\n    \n\n    // changeIntro = (intro) => {\n    //     this.setState({\n    //         intro\n    //     })\n    // }\n\n    // handleChange = () => {\n    //     getUser(this.props.match.params.username).then((value) => {\n    //         this.setState({\n    //             intro: value.intro\n    //         })\n    //     })\n    // }\n\n    // fileUploadButton = () => {\n    //     document.getElementById('fileButton').click();\n    //     document.getElementById('fileButton').onchange = () => {\n    //         this.setState({\n    //             fileUploadState: document.getElementById('fileButton').value\n    //         });\n    //     }\n    // }\n\n\n    render() {\n        const toggle = tab => {\n            if (this.state.displayID !== tab){\n                this.setState({\n                    displayID: tab\n                })\n            };\n        }\n        return (\n            <div className=\"profile-container\">\n                <div className=\"row-full-screen\">\n                    <div className=\"col-2\">\n                        <ListGroup>\n                            <ListGroup.Item></ListGroup.Item>\n                            <ListGroup.Item action onClick={() =>  toggle('1')}>\n                                home\n                            </ListGroup.Item>\n                            <ListGroup.Item action onClick={() =>  toggle('2')}>\n                                personal info\n                            </ListGroup.Item>\n                            <ListGroup.Item action onClick={() => toggle('3')}>\n                                post history\n                            </ListGroup.Item>\n                            <ListGroup.Item action onClick={() => toggle('4')}>\n                                replies\n                            </ListGroup.Item>\n                            <ListGroup.Item action onClick={() => toggle('5')}>\n                                collections\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </div>\n                    {this.state.displayID === '1' && home(this.props)}\n                    {this.state.displayID === '2' && personalInfo(this.props)}\n                    {this.state.displayID === '3' && postHistroy(this.state)}\n                    {this.state.displayID === '4' && replies(this.props)}\n                    {this.state.displayID === '5' && mycollection(this.state)}\n                   \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile\n\nfunction home(props) {\n    return (\n        <div className='col-10'>\n            <div className='row-3'>\n                <img className='profileImg' src={profilePic}></img>\n                <h3 className='text-center'>Welcome back, user1</h3>\n            </div>\n            <div className='row-1'>\n            </div>\n            <div className='row-6'>\n                <div className='text-center'>\n                    <h3> message goes here....</h3>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction personalInfo(props) {\n    return (\n        <div className='col-10'>\n             <div className='row-3'>\n                <img className='profileImg' src={profilePic}></img>\n                <h3 className='text-center'>Welcome back, user1</h3>\n            </div>\n            <div className='row-1'>\n            </div>\n            <div className='row-6'>\n                <div className='text-center'>\n                    <h3> username: this is username</h3>\n                    <h3> password: this is password</h3>\n                    <h3> email: this is email</h3>\n                    <h3> introduction: this is introduction</h3>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction postHistroy(state) {\n    console.log(state)\n    return (\n        <div className='col-10'>\n            \n            <h3>this is post history</h3>\n            {state.postHistory.map(obj => <div style={{marginLeft: '10%', width: '80%', padding :\"0.5%\"}}><TitleCard items={obj} class=\"card\"/></div>)}\n        </div>\n    )\n}\n\nfunction replies(props) {\n    return (\n        <div className='col-10'>\n            <h3>this is replies</h3>\n            <Message></Message>\n        </div>\n    )\n}\n\nfunction mycollection(state) {\n    console.log(state)\n    return (\n        <div className='col-10'>\n            \n            <h3>this is colelctions</h3>\n            {state.myCollection.map(obj => <div style={{marginLeft: '10%', width: '80%', padding :\"0.5%\"}}><TitleCard items={obj} class=\"card\"/></div>)}\n        </div>\n    )\n}\n","\nexport class Type { \n    static readonly INT: Type = new Type(\"int\");\n    static readonly FLOAT: Type = new Type(\"float\");\n    static readonly STRING: Type = new Type(\"string\");\n    static readonly BOOL: Type = new Type(\"bool\");\n    static DICT(keyType: Type, valueType: Type): Type { \n        if (![Type.INT, Type.FLOAT, Type.STRING, Type.BOOL].includes(keyType)) { \n            throw new Error(\"key must be immutable type\");\n        }\n        if (!keyType || !valueType) { \n            throw new Error(\"key and value type must be specified!\");\n        }\n        return new Type(\"dict\", keyType, valueType);\n    }\n    static LIST(valueType: Type): Type { \n        if (!valueType) {\n            throw new Error(\"value type must be specified!\");\n        }\n        return new Type(\"list\", undefined, valueType);\n    }\n\n    private constructor(public readonly selfType: string, public readonly keyType?: Type , public readonly valueType?: Type) { } \n}\n\n\nexport class VariableType {\n    constructor(public readonly name: string, public readonly type: Type) { }\n}\n\nexport class FunctionType {\n    constructor(public readonly name: string, public readonly paramsType: VariableType[], public readonly returnType: VariableType) { }\n}\n","import { Type } from \"./type\"\n\nexport class CodeMapperAccumulator {\n    vars: string[] = [];\n    code: string = \"\"\n}\n\n// The accumlator(acc) can be useful if one line initialization of val is not supported by the target language\n// i.e let's say user's input is {\"a\": 1, \"b\": 2} and the target language don't support one line init of dict\n// we can only init a empty dict first, then insert all entries. Therefore we need append \"user_dict = new dict()\",\n// \"user_dict.insert(\"a\", 1)\" \"user_dict.insert(\"b\", \"2\")\" to acc.code; Append \"user_dict\" to acc.vars and return \n// \"user_dict\". However, if one line init is supported we can just return \"new dict {\"a\": 1, \"b\": 2}\" and don't use \n// the accmulator at all.\nexport class CodeMapper {\n    [key: string]: any;\n    constructor(public int_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public float_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public string_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public bool_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public dict_?: (val: Map<string, string>, acc: CodeMapperAccumulator) => string,\n        public list_?: (val: string[], acc: CodeMapperAccumulator) => string,\n    ) { }\n\n    mapCode(input: string, type: Type, acc?: CodeMapperAccumulator): string {\n        if (!acc)\n            acc = new CodeMapperAccumulator();\n        if (input.length === 0)\n            throw new Error(\"input is empty\");\n\n        if (!this[type.selfType + \"_\"])\n            throw new Error(type.toString() + \" is not supported\");\n\n        if (type.selfType === \"dict\") {\n            if (input[0] !== \"{\" || input[input.length - 1] !== \"}\")\n                throw new Error(\"expect dict, got \" + input);\n            const codeMap = new Map<string, string>();\n            if (input.length === 2) \n                return this.dict_!(codeMap, acc);\n            for (let kv of splitOutterMost(input.slice(1, -1), \",\")) {\n                const key_value = splitOutterMost(kv, \":\");\n                if (key_value.length !== 2)\n                    throw new Error(\"expect key value pair but got \" + kv);\n                codeMap.set(this.mapCode(key_value[0], type.keyType!, acc),\n                    this.mapCode(key_value[1], type.valueType!, acc));\n            }\n            return this.dict_!(codeMap, acc);\n        }\n        if (type.selfType === \"list\") {\n            if (input[0] !== \"[\" || input[input.length - 1] !== \"]\")\n                throw new Error(\"expect list, got \" + input);\n            if (input.length === 2) \n                return this.list_!([], acc);\n            const codeList = splitOutterMost(input.slice(1, -1), \",\")\n                .map<string>(x => this.mapCode(x, type.valueType!, acc));\n            return this.list_!(codeList, acc);\n        }\n        return this[type.selfType + \"_\"](input, acc);\n    }\n}\n\nexport class TypeMapper {\n    [key: string]: any;\n    constructor(public int_?: () => string,\n        public float_?: () => string,\n        public string_?: () => string,\n        public bool_?: () => string,\n        public dict_?: (key: string, value: string) => string,\n        public list_?: (value: string) => string,\n    ) { }\n\n    mapType(type: Type): string {\n        if (!this[type.selfType + \"_\"])\n            throw new Error(type.selfType + \" is not supported\");\n\n        if (type.selfType === \"dict\") {\n            return this.dict_!(this.mapType(type.keyType!), this.mapType(type.valueType!));\n        }\n        if (type.selfType === \"list\") {\n            return this.list_!(this.mapType(type.valueType!));\n        }\n        return this[type.selfType + \"_\"]();\n    }\n\n    canBeMapped(type: Type): boolean {\n        if (type.selfType === \"dict\") {\n            return this.dict_ !== undefined && this.canBeMapped(type.keyType!) && this.canBeMapped(type.valueType!);\n        }\n        if (this.selfType === \"list\") {\n            return this.list_ !== undefined && this.canBeMapped(type.valueType!);\n        }\n        return this[type.selfType + \"_\"] !== undefined;\n    }\n}\n\nfunction isPair(str1: string, str2: string) { \n    let l = [str1, str2];\n    if (l.includes(\"{\") && l.includes(\"}\"))\n        return true;\n    if (l.includes(\"[\") && l.includes(\"]\"))\n        return true;\n    if (l.includes(\"(\") && l.includes(\")\"))\n        return true;\n    return false;\n}\n\nfunction splitOutterMost(str: string, by: string): string[] {\n    const strList: string[] = [];\n    const brackets: string[] = [];\n    let last = 0;\n    for (let i = 0; i < str.length; i++) { \n        if (str[i] === by && brackets.length === 0) { \n            strList.push(str.slice(last, i).trim());\n            last = i + 1;\n        }\n        else if ([\"[\", \"]\", \"{\", \"}\", \"(\", \")\"].includes(str[i])) {\n            if (isPair(str[i], brackets[brackets.length - 1]))\n                brackets.pop()\n            else brackets.push(str[i]);\n        }\n    }\n    strList.push(str.slice(last).trim());\n    return strList\n}\n","import { CodeMapper, TypeMapper } from \"./mapper\"\n\n// this is an example of how code mapping work, we are mapping user's input to LetCode standard form(it's syntex is similar to python)\n// It checkes if user's input can be mapped to this type during the mapping.\nconst mapDict = (val: Map<string, string>) => {\n    const pairs: String[] = []\n    val.forEach((v, k) => pairs.push(k + \":\" + v))\n    return \"{\" + pairs.join(\",\") + \"}\"\n}\n\nconst mapList = (val: string[]) => {\n    return \"[\" + val.join(\",\") + \"]\";\n}\n\nconst mapInt = (val: string) => {\n    if (!(/^\\-?(0|[1-9]\\d*)$/).test(val))\n        throw new Error(\"expect int, got \" + val);\n    return val\n}\n\nconst mapFloat = (val: string) => {\n    if (!(/^\\-?[\\d]*(\\.[\\d]+)?$/g).test(val))\n        throw new Error(\"expect float, got \" + val);\n    const f = String(parseInt(val));\n    if (f === val)\n        return f + \".0\";\n    return String(parseFloat(val));\n}\n\nconst mapString = (val: string) => {\n    if (val.length < 2 || (val[0] !== val[val.length - 1])|| (val[0] !== \"\\'\" && val[0] !== \"\\\"\"))\n        throw new Error(\"expect string, got \" + val);\n    return \"'\" + val.slice(1, -1) + \"'\";\n}\n\nconst mapBool = (val: string) => {\n    if (![\"True\", \"False\", \"true\", \"false\"].includes(val))\n        throw new Error(\"expect boolean, got \" + val);\n    if ([\"True\", \"true\"].includes(val))\n        return \"true\";\n    return \"false\";\n}\n\nconst StringToLetCodeCodeMapper = new CodeMapper(mapInt, mapFloat, mapString, mapBool, mapDict, mapList)\n \n// This is the type annotations mapping of LetCode standard form\nconst LetCodeTypeMapper =\n    new TypeMapper(\n        () => \"int\",\n        () => \"float\",\n        () => \"string\",\n        () => \"bool\",\n        (key, val) => \"dict<\" + key + \",\" + val + \">\",\n        (val) => \"list<\" + val + \">\"\n    )\n\nexport { StringToLetCodeCodeMapper, LetCodeTypeMapper }\n \n","import React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Type } from '../../letcode-code-runner/type'\nimport { LetCodeTypeMapper } from \"../../letcode-code-runner/letcode-mapper\"\n\n\nclass TypePopup extends React.Component {\n\n    state = {\n        keyType: null,\n        valueType: null,\n    }\n\n    setKey(e) {\n        this.setState({\n            keyType: {\n                \"int\": Type.INT,\n                \"float\": Type.FLOAT,\n                \"bool\": Type.BOOL,\n                \"string\": Type.STRING\n            }[e.target.value]\n        });\n    }\n\n    setValue(e, pushModal) {\n        if (e.target.value === \"dict\" || e.target.value === \"list\") {\n            pushModal(e.target.value, value => {\n                this.setState({ valueType: value });\n            });\n        }\n        else { \n            this.setState({\n                valueType: {\n                    \"int\": Type.INT,\n                    \"float\": Type.FLOAT,\n                    \"bool\": Type.BOOL,\n                    \"string\": Type.STRING\n                }[e.target.value]\n            });\n        }\n        \n    }\n\n    getBody(type, pushModal) {\n        const keyTypeStr = this.state.keyType ? LetCodeTypeMapper.mapType(this.state.keyType) : \"selected\" \n        const valueTypeStr = this.state.valueType ? LetCodeTypeMapper.mapType(this.state.valueType) : \"selected\"\n        if (type === \"dict\") {\n            return (\n                <div>\n                    {getTypeselectionFrom(this.setKey.bind(this), \"Select Key Type\", keyTypeStr, [\"int\", \"float\", \"string\", \"bool\"])}\n                    {getTypeselectionFrom(e => this.setValue(e, pushModal), \"Select Value Type\", valueTypeStr, [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"])}\n                </div>\n            )\n        }\n        return getTypeselectionFrom(e => this.setValue(e, pushModal), \"Select Key Type\", valueTypeStr, [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"] )\n    }\n   \n    render() {\n\n        const {\n            type,\n            onComplete,\n            onCancel,\n            pushModal\n        } = this.props;\n\n\n        return (\n            <Modal\n                show={true}\n                size=\"md\"\n                onHide={onCancel}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        {type === \"dict\" ? \"Specify key and value type of dict\" : \"Specify value type of list\"}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.getBody(type, pushModal)}\n                </Modal.Body>\n                <Modal.Footer>\n                    <button class=\"bg-secondary\" onClick={onCancel}>\n                        Close\n                    </button>\n                    <button class=\"btn btn-primary\" onClick={() => { \n                        if (type === \"list\") {\n                            onComplete(Type.LIST(this.state.valueType));\n                        }\n                        else if (type === \"dict\") { \n                            onComplete(Type.DICT(this.state.keyType, this.state.valueType));\n\n                        }\n                        onCancel();\n                    }}>\n                        Done\n                    </button>\n                </Modal.Footer>\n            </Modal>)\n    }\n}\n\nfunction getTypeselectionFrom(onSelected, defaultValue, selectedValue, options, id) {\n    if (selectedValue !== \"selected\" && !options.includes(selectedValue)) { \n        options.push(selectedValue);\n    }\n    return (\n        <div class=\"col col-md-4\">\n            <select class=\"custom-select\" id={id} onChange={onSelected} value={selectedValue}>\n                <option selected>{defaultValue}</option>\n                {options.map(o => <option value={o}>{o}</option> )}\n            </select>\n        </div>\n    )\n}\n\n\nexport { TypePopup, getTypeselectionFrom };\n","import { FunctionType } from \"./type\"\n\nexport enum RunnerState { \n    READY = \"ready\",\n    UNINIT = \"uninitialized\",\n    INITING = \"initializing\",\n    COMPILING = \"compiling\",\n    RUNNING = \"runing\",\n    ERROR = \"error\"\n}\n\nexport interface CodeRunner { \n    readonly state: RunnerState;\n\n    init(notifyRunnerState: (state: RunnerState) => void, config?: Map<string, string>): void;\n    setConsole(onStdout?: (out: string) => void, onError?: (err: string) => void): void\n    canSupportFunctionType(functionType: FunctionType): boolean;\n    getStarterCode(functionType: FunctionType): string;\n    runTest(functionType: FunctionType, testCases: TestCase[], userCode: string): Promise<TestTracker>\n}\n\nexport class TestTracker {\n    public testCompletionTime: string = \"\";\n    public testPassed: number = 0;\n\n    constructor(public readonly userCode: string,\n        public readonly testCases: TestCase[],\n        public readonly generatedCode: string,\n        ) { }\n\n}\n\nexport class TestCase { \n    constructor(public readonly inputs: string[],\n        public readonly expectedOutput: string,\n        public readonly onSuceess: (info: string) => void,\n        public readonly onFailure: (err: string) => void) { }\n\n}","import React, { Component } from 'react'\nimport { TypePopup, getTypeselectionFrom } from \"./TypePopup\"\nimport { Type } from '../../letcode-code-runner/type'\nimport { LetCodeTypeMapper } from \"../../letcode-code-runner/letcode-mapper\"\n\nclass CreateQuestion extends Component {\n    state = {\n        title: '',\n        description: '',\n        functionName: \"\",\n        returnDescription: \"\",\n        returnType: null,\n        currentInputName: \"\",\n        currentInputDescription: \"\",\n        currentInputType: null,\n        inputs: [{inputName: \"\", inputDescription: \"\", inputType: null}],\n        testcases: [{inputs: [], outputs: null, description: \"\"}],\n        popUps: []\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    pushModal(type, onComplete) { \n        const newPopUps = this.state.popUps\n        newPopUps.push(() => <TypePopup type={type}\n            onComplete={onComplete}\n            onCancel={this.popLast.bind(this)}\n            pushModal={this.pushModal.bind(this)} />)\n        this.setState({ popUps: newPopUps });\n    }\n\n    popLast() { \n        const newPopUps = this.state.popUps\n        newPopUps.pop()\n        this.setState({ popUps: newPopUps });\n    }\n\n    handleTypeSelection(e) { \n        if (e.target.value === \"dict\" || e.target.value === \"list\") {\n            this.pushModal(e.target.value, type => {\n                this.setState({ [e.target.id]: type })\n            });\n\n        }\n        else { \n            this.setState({\n                [e.target.id]: {\n                    \"int\": Type.INT,\n                    \"float\": Type.FLOAT,\n                    \"bool\": Type.BOOL,\n                    \"string\": Type.STRING\n                }[e.target.value]\n            });\n        }\n    }\n\n    handleAddInput = (e) =>{\n        e.preventDefault()\n        console.log(\"add input\")\n        const inputs = [\n            ...this.state.inputs,\n            {inputName: \"\", inputDescription: \"\", inputType: null}\n        ]\n        this.setState({\n            inputs: inputs\n        })\n    }\n\n    handleDelete = (e, index) => {\n        e.preventDefault()\n        const inputs = [\n            ...this.state.inputs.slice(0, index),\n            ...this.state.inputs.slice(index + 1)\n        ]\n        this.setState({\n            inputs: inputs\n        })\n    }\n\n    handleChangeInput = (e, index, type) =>{\n        e.preventDefault()\n        let input;\n        switch(type){\n            case 'inputName':\n                input = {...this.state.inputs[index], inputName: e.target.value}\n                break\n            case 'inputDescription':\n                input = {...this.state.inputs[index], inputDescription: e.target.value}\n                break\n            // case 'inputType':\n            //     input = {...this.state.inputs[index], inputType: e.target.value}\n            default:\n                input = {}\n        }\n        const inputs = [\n            ...this.state.inputs.slice(0, index),\n            input,\n            ...this.state.inputs.slice(index + 1)\n        ]\n        this.setState({\n            inputs: inputs\n        })\n    }\n\n\n    handleNext = (e) => {\n        e.preventDefault();\n        console.log(\"create question\", this.state)\n        this.props.history.push({\n            pathname: '/addtestcase',\n            state: this.state\n        })\n        // check all box are fullfilled and type are satisfied requirement\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                       <h2>New Question</h2>\n                    </div>\n               </div>\n                <form>\n                    <label for=\"title\">Title:</label>\n                    <input className=\"form-control\" type=\"text\" placeholder=\"Enter title\" id=\"title\" onChange={this.handleChange.bind(this)}/>\n                    <label for=\"description\">Description:</label>\n                    <textarea className=\"form-control\" id='description' placeholder=\"Enter description here\" onChange={this.handleChange.bind(this)} rows={10} />\n                    \n                    <label for=\"create-question-function\"><h4>Describe Your Function:</h4></label>\n                    <div class=\"create-question-function-div\" id=\"create-question-function\">\n                        <div class=\"create-question-function-name\">\n                            <label for=\"functionName\">Function Name:</label>\n                            <input id=\"functionName\" className=\"form-control\" aria-describedby=\"functionNameHint\" onChange={this.handleChange.bind(this)} />\n                            <small id=\"functionNameHint\" className=\"text-muted\">\n                                Must be 4-20 characters long. You can use whatever naming convention you like, but no space is allowed.\n                            </small>\n                        </div>\n\n                        <label for=\"create-question-input\">Input parameters:</label>\n                        {\n                            this.state.inputs.map((input, index) => (\n                                <div>\n                                    <div>\n                                        <p>input parameter {index}:</p>\n                                    </div>\n                                    <div class=\"form-row\" id=\"create-question-input\">\n\n                                        {getTypeselectionFrom(this.handleTypeSelection.bind(this), \"Select Input Type\",\n                                        this.state.currentInputType ? LetCodeTypeMapper.mapType(this.state.currentInputType) : \"selected\",\n                                        [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"], \"currentInputType\")}\n                                        \n                                        <div class=\"col col-md-4\">\n                                            <input type=\"text\" class=\"form-control\" id=\"inputName\"\n                                                placeholder=\"name\" value={this.state.inputs[index].inputName} onChange={(e) => this.handleChangeInput(e, index, \"inputName\")} />\n                                        </div>\n                                        <div class=\"col\">\n                                            <input type=\"text\" class=\"form-control\" id=\"inputDescription\"\n                                                placeholder=\"description of this input parameter\" value={this.state.inputs[index].inputDescription} onChange={(e) => this.handleChangeInput(e, index, \"inputDescription\")} />\n                                        </div>\n                                    </div>\n                                    <button className=\"blue\" onClick={(e) => this.handleDelete(e, index)}>delete</button>\n                                </div>\n                            ))\n                        }\n                        <div className=\"row\">\n                            <button className=\"center blue\" onClick={(e) => this.handleAddInput(e)}>add new input</button>\n                        </div>\n\n                        {/* <div class=\"form-row\" id=\"create-question-input\">\n                            {getTypeselectionFrom(this.handleTypeSelection.bind(this), \"Select Input Type\",\n                                this.state.currentInputType ? LetCodeTypeMapper.mapType(this.state.currentInputType) : \"selected\",\n                                [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"], \"currentInputType\")}\n                            <div class=\"col col-md-3\">\n                                <input type=\"text\" class=\"form-control\" id=\"inputName\"\n                                    placeholder=\"name\" onChange={this.handleChange.bind(this)} />\n                            </div>\n                            <div class=\"col col-md-5\">\n                                <input type=\"text\" class=\"form-control\" id=\"inputDescription\"\n                                    placeholder=\"description of this input parameter\" onChange={this.handleChange.bind(this)} />\n                            </div>\n                            <button className=\"center\" onClick={(e) => this.handleAddInput(e)}>add new input</button>\n                        </div> */}\n\n                        <label for=\"create-question-return\">Return:</label>\n                        <div class=\"form-row\" id=\"create-question-return\"> \n                            {getTypeselectionFrom(this.handleTypeSelection.bind(this), \"Select Return Type\",\n                                this.state.returnType ? LetCodeTypeMapper.mapType(this.state.returnType) : \"selected\",\n                                [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"], \"returnType\")}\n                            <div class=\"col col-md-8\">\n                                <input type=\"text\" class=\"form-control\" id=\"returnDescription\"\n                                    placeholder=\"description of the return value\" onChange={this.handleChange.bind(this)}/>\n                            </div>\n                        </div>\n                    </div>\n                        <button className=\"blue center\" onClick={(e) => this.handleNext(e)}>Next</button>\n                </form>\n                {this.state.popUps.map((x) => x())}\n            </div>)\n    }\n}\n\nexport default CreateQuestion\n","\nimport React, { Component } from 'react'\nimport { getQuestion } from '../../api_code/GetFromBackend'\nimport { Container, Row, Col } from 'react-bootstrap'\n\n\nclass QuestionDesc extends Component {\n    state = {\n        id: null,\n        title: '',\n        desc: ''\n    }\n\n    componentDidMount() {\n        let question = getQuestion()\n        question.then((value) => {\n            this.setState({\n                id: value.id,\n                title: value.title,\n                desc: value.desc\n            })\n        })\n    }\n    \n    render() {\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <br></br>\n                        <h4>Question #{this.state.id}: {this.state.title}</h4>\n                        <br></br>\n                        <p>{this.state.desc}</p>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n    \n}\n\nexport default QuestionDesc","import React from 'react';\nimport { Controlled as ControlledEditor } from '../../react-codemirror2/index'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/python/python'\nimport 'codemirror/mode/clike/clike'\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/search/match-highlighter'\n\n\nclass Editor extends React.Component {\n    \n    code = \"\"\n    getMode(selectedLang) { \n        if (selectedLang === \"Python\") {\n            return \"python\";\n        }\n        if (selectedLang === \"C\") { \n            return \"text/x-csrc\";\n        }\n        if (selectedLang  === \"C++\") { \n            return \"text/x-c++src\";\n        }\n        if (selectedLang  === \"Java\") {\n            return \"text/x-java\";\n        }\n        return \"\";\n    }\n\n    onEditorChange(editor, data, value, cancel) { \n        if (!this.props.onCodeChange || (this.props.mustInclude && !value.split(\"\\n\").includes(this.props.mustInclude))) {\n            cancel();\n        }\n        else { \n            this.props.onCodeChange(value);\n        }\n    }\n\n\n    render() { \n        const { code, lang, extraTheme } = this.props\n        return (\n            <div>\n                <ControlledEditor\n                    className=\"border border-gray\"\n                    onBeforeChange={this.onEditorChange.bind(this)}\n                    value={code}\n                    options={{\n                        indentWithTabs: true,\n                        tabSize: 4,\n                        indentUnit: 4,\n                        lineWrapping: true,\n                        mode: this.getMode(lang),\n                        lineNumbers: true,\n                        matchBrackets: true,\n                        matchhighlight: true,\n                        autoCloseBrackets: true,\n                        theme: \"default \" + (extraTheme ? extraTheme : \"\")\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Editor;","import React, { Component } from 'react'\nimport Editor from './Editor'\nimport { getAnswers } from '../../api_code/GetFromBackend'\nimport { UpOne, DownOne } from '@icon-park/react'\nimport \"./answers.css\"\nimport profilePic from '../../img_source/placeholder.png'\n\nclass Answers extends Component {\n    state = {\n        answers: []\n    }\n\n    componentDidMount() {\n        getAnswers().then(value => {\n            this.setState({\n                answers: value\n            })\n        })\n    }\n\n    changeCode = (code) => {\n        return\n    }\n\n    render() {\n        const answerList = this.state.answers.length ? (\n            this.state.answers.map((answer, index) => {\n                \n                return (\n                    <div className=\"indanswer\" key={index}>\n                        <div className=\"answerProfile\">\n                            <img className=\"answerProfilePic\" src={answer.user.profilePic} alt=\"profile\"></img>\n                            <h4 className=\"answerHeader\">{answer.user.username}</h4>\n                        </div>\n\n                        <div className=\"answerComment\">\n                            <h5>comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment</h5>\n                        </div>\n\n                        <div>\n                            {/* <p className=\"answerText\">{answer.detail.code}</p> */}\n                            <Editor\n                                lang={answer.detail.language}\n                                changeCode={this.changeCode}\n                                code={answer.detail.code}\n                                readOnly={true}\n                            >\n                            </Editor>\n                        </div>\n                        <div className=\"answerReply\">\n                            <h5>replies</h5>\n                            <div className=\"row\">\n                                <img className='replyImg' src={profilePic} alt=\"reply\"></img>\n                                <h6>username</h6>\n                            </div>\n                            <div className='commentSolution'>\n                                <p>comment on the solution</p>\n                            </div>\n\n                        </div>\n                        <div className=\"answerButtons\">\n                            <button className=\"answerButton\">\n                                {answer.upvotes}\n                                <UpOne theme=\"outline\" size=\"24\" fill=\"#333\" />\n                            </button>\n                            <button className=\"answerButton\" >\n                                {answer.downvotes}\n                                <DownOne theme=\"outline\" size=\"24\" fill=\"#333\" />\n                            </button>\n                        </div>\n                    </div>\n                )\n            })\n        ) : (\n                <div>No answers</div>\n            )\n        return (\n            <div>\n                {answerList}\n            </div>\n        )\n    }\n}\n\nexport default Answers\n\n\n","import React from \"react\"\nimport { Modal } from \"react-bootstrap\"\n\n\nclass TestCaseViewLarge extends React.Component {\n\n    render() {\n        const { testCase, functionType, isModal } = this.props;\n        console.log(testCase)\n        let header;\n        if (!isModal) {\n            header =\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h5>{testCase.name} </h5>\n                    </div>\n                </div>\n        }\n        let actualOutputHead;\n        let actualOutputVal;\n        if (testCase.actualOutput) {\n            actualOutputHead =\n                <div className=\"col text-info\">\n                    Actual Output:\n                </div>;\n            actualOutputVal =\n                <div className=\"col\">\n                    {testCase.actualOutput}\n                </div>\n        }\n\n        return <div className=\"container-fluid\">\n            {header}\n            <div className=\"row\">\n                <div className=\"col  bg-light rounded p-2\">\n                    {testCase.desc}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col small text-muted pt-1 border-bottom\">\n                    Submitted on {new Date(testCase.date).toDateString()}, {testCase.numRun} runs\n                </div>\n            </div>\n            <div className=\"row mt-2\">\n                <div className=\"col text-info\">\n                    Inputs:\n                </div>\n                <div className=\"col text-info\">\n                    Expected Output:\n                </div>\n                {actualOutputHead}\n            </div>\n            <div className=\"row mt-2\">\n                <div className=\"col\">\n                    {testCase.inputs.map((x, ind) => <p key={ind}>{functionType.paramsType[ind].name + \": \" + x}</p>)}\n                </div>\n                <div className=\"col\">\n                    {testCase.output}\n                </div>\n                {actualOutputVal}\n            </div>\n        </div>\n\n    }\n}\n\n\nclass TestCaseViewModal extends React.Component {\n\n    mapStatus(status) {\n        if (status === \"pass\") {\n            return <h6 className=\"text-white bg-success ml-3 p-1 rounded\">Passed </h6>;\n        }\n        if (status === \"fail\") {\n            return <h6 className=\"text-white bg- bg-danger ml-3 p-1 rounded\">Failed </h6>\n        }\n        if (status === \"running\") {\n            return <h6 className=\"text-white bg- bg-secondary ml-3 p-1 rounded\">Running </h6>\n        }\n        return null;\n    }\n\n    render() {\n        const { testCase, functionType, onHide } = this.props;\n        if (!testCase) {\n            return null;\n        }\n        return (\n            <Modal\n                size={testCase.actualOutput ? \"lg\" : \"md\"}\n                show={true}\n                onHide={onHide}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <h5>Test Case: {testCase.name} </h5>\n                    {this.mapStatus(testCase.status)}\n                </Modal.Header>\n\n                <Modal.Body>\n                    <TestCaseViewLarge testCase={testCase} functionType={functionType} isModal={true} />\n                </Modal.Body>\n\n\n            </Modal>\n        )\n\n    }\n}\n\nexport { TestCaseViewLarge, TestCaseViewModal };","import React from \"react\"\nimport { Modal } from \"react-bootstrap\"\nimport { StringToLetCodeCodeMapper, LetCodeTypeMapper} from \"../../letcode-code-runner/letcode-mapper\"\n\n\n\nclass AddtestCaseForm extends React.Component { \n    constructor(props) { \n        super(props)\n        const vars = props.functionType.paramsType.map(x => {\n            return {\n                name: x.name,\n                type: x.type,\n                userIn: \"\",\n                error: \"\"\n            }\n        });\n        vars.push({\n            name: \"return\",\n            type: props.functionType.returnType.type,\n            userIn: \"\",\n            error: \"\",\n            isReturn: true\n        });\n        this.state = {\n            upload: false,\n            vars: vars,\n            name: \"\",\n            nameError: \"\",\n            desc: \"\",\n            descError: \"\",\n            upload: false\n        }\n    }\n\n    updateVars(varsCp, target, field, update) { \n        let newT = { ...target };\n        newT[field] = update;\n        if (field !== \"error\")  \n            newT.error = \"\";\n        varsCp[this.state.vars.indexOf(target)] = newT\n        return varsCp;\n    }\n\n\n    mapToGroup(varType, ind) { \n        return (\n            <div className=\"form-group\" key={ind}>\n                <label htmlFor={varType.name}>{varType.name + \": \" + LetCodeTypeMapper.mapType(varType.type)}</label>\n                <input type=\"text\" className={\"form-control \" + (varType.error !== \"\" ? \"is-invalid\" : \"\")} id={varType.name + (!varType.isReturn ? \"-input\" : \"\")} required onChange={(e) => {\n                    const varsCp = [...this.state.vars];\n                    for (let ty of this.state.vars) {\n                        if (ty.name + \"-input\" === e.target.id || (e.target.id === \"return\" && ty.name === \"return\")) {\n                            this.setState({ vars: this.updateVars(varsCp, ty, \"userIn\", e.target.value) });\n                            return;\n                        }\n                    }\n                }} />\n                {varType.error !== \"\" ?\n                    <div className=\"text-danger small\">\n                        {varType.error}\n                    </div> : \"\"\n                }\n            </div>\n        );\n    }\n\n    render() {\n        const { functionType, onAdd, local } = this.props;\n        \n        return (\n            <form>\n                <div className=\"form-group\">\n                    <label htmlFor=\"add-testcase-name\">Name:</label>\n                    <input className={\"form-control \" + (this.state.nameError !== \"\" ? \"is-invalid\" : \"\")} id=\"add-testcase-name\" required onChange={(e) =>\n                    { this.setState({ name: e.target.value, nameError:\"\" }) }} />\n                    {this.state.nameError !== \"\" ?\n                        <div className=\"text-danger small\">\n                            {this.state.descError}\n                        </div> : null\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"add-testcase-desc\">Description:</label>\n                    <textarea rows=\"4\" className={\"form-control \" + (this.state.descError !== \"\" ? \"is-invalid\" : \"\")} id=\"add-testcase-desc\" required onChange={(e) =>\n                    { this.setState({ desc: e.target.value, descError:\"\" }) }} />\n                    {this.state.descError !== \"\" ?\n                        <div className=\"text-danger small\">\n                            {this.state.descError}\n                        </div> : null\n                    }\n                </div>\n                <div className=\"form-row\">\n                    <h5>Inputs:</h5>\n                </div>\n                {this.state.vars.map((x, ind) => !x.isReturn ? this.mapToGroup(x, ind) : null)}\n                <div className=\"form-row\">\n                    <h5>Output:</h5>\n                </div>\n                {this.state.vars.map((x, ind) => x.isReturn ? this.mapToGroup(x, ind) : null)}\n                <div className=\"form-row float-right mr-1\">\n                    {local ?\n                        <div className=\"form-check mr-4\">\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"testcase-to-server\" onChange={\n                                () => this.setState({ upload: !this.state.upload })\n                            } />\n                            <label className=\"form-check-label\" htmlFor=\"testcase-to-server\">\n                                Upload this test case to server\n                            </label>\n                        </div> : null}\n                    <button className=\"btn btn-primary\" onClick={(e) => { \n                        e.preventDefault();\n                        let result = {name:this.state.name, desc:this.state.desc, inputs:[], output:\"\", isLocal:!this.state.upload };\n                        let allPass = true;\n                        let varsCp = [...this.state.vars];\n                        let nameError = \"\"\n                        let descError = \"\";\n                        const notEmpty = \"this field cannot be empty!\";\n                        if (this.state.name === \"\") {\n                            nameError = notEmpty;\n                            allPass = false;\n                        }  \n                        if (this.state.desc === \"\") { \n                            descError = notEmpty;\n                            allPass = false;\n                        }\n                            \n                        for (let vt of this.state.vars) { \n                            if (vt.userIn === \"\") { \n                                this.updateVars(varsCp, vt, \"error\", notEmpty);\n                                allPass = false;\n                                continue;\n                            }\n                            try {\n                                let formatted = (StringToLetCodeCodeMapper.mapCode(vt.userIn, vt.type));\n                                if (vt.isReturn)\n                                    result.output = formatted;\n                                else\n                                    result.inputs.push(formatted);\n                            }\n                            catch (err) { \n                                this.updateVars(varsCp, vt, \"error\", err.message);\n                                allPass = false;\n                            }\n                        }\n                        if (allPass) { \n                            onAdd(result);\n                            return;\n                        }\n                        this.setState({ nameError: nameError, descError:descError, vars:varsCp })\n                    }}>Add</button>\n                </div>\n            </form>\n        );\n    }\n}\n\n\nclass AddTestCaseModal extends React.Component {\n\n    render() {\n        const { show, functionType, onAdd, onHide, local } = this.props;\n        return (\n            <Modal\n                size={\"lg\"}\n                show={show}\n                onHide={onHide}\n                centered\n            >\n                <Modal.Header closeButton>\n                   <h5>New Test Case</h5>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <AddtestCaseForm functionType={functionType} onAdd={onAdd} local={local} />\n                </Modal.Body>\n\n\n            </Modal>\n        )\n\n    }\n}\n\nexport { AddTestCaseModal, AddtestCaseForm };","import React, { Component } from 'react'\nimport { TestCaseViewLarge, TestCaseViewModal } from \"../test-case/test-case-view-lg\"\nimport { Type, FunctionType, VariableType } from \"../../letcode-code-runner/type\"\nimport { AddTestCaseModal } from \"../test-case/add-test-case\"\n\nimport { Row, Col, Button } from 'reactstrap'\n\n\nclass TestCases extends Component {\n    state = {\n        tab: \"Question\",\n        showAddTestCase: false,\n        testCaseDetail: null,\n        testCaseSortBy: \"newest\",\n        testCasesView: \"all\",\n        runnerState: \"ready\",\n    }\n\n    onTestCaseAdd(testCase) {\n        // if (!testCase.isLocal) {\n        //     //upload to server, get server time, update state,return\n        //     return;\n        // }\n        // testCase.numRun = 0;\n        // testCase.date = new Date().toString();\n        // const local = JSON.parse(localStorage.getItem(this.props.userId));\n        // local[[this.props.question._id]].localTestCase.push(testCase);\n        // localStorage.setItem(this.props.userId, JSON.stringify(local));\n        // const newCases = [...this.state.testCases];\n        // newCases.push(testCase);\n        // this.setState({ testCases: newCases, showAddTestCase: false });\n    }\n\n    render() {\n        const inputType = Type.LIST(Type.INT);\n        const myFunc = new FunctionType(\"sortList\", [new VariableType(\"l\", inputType)], new VariableType(\"return\", inputType));\n        const question = { functionType: myFunc, name: \"Sort list\", desc: \"computer science, arranging in an ordered sequence is called 'sorting'. Sorting is a common operation in many applications, and efficient algorithms to perform it have been developed.\", date: new Date().toString(), by: \"user32\", _id: \"123\" }\n        const testCases = [\n            { name: \"first case\", desc: \"test it can compile\", inputs: [\"[]\"], output: \"[]\", numRun: 11, date: new Date().toString() },\n            { name: \"base case\", desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\", inputs: [\"[1]\"], output: \"[1]\", numRun: 12, date: new Date().toString() }\n        ]\n        return (\n            <div>\n                <button type=\"button\" className=\"btn btn-link\" onClick={() => this.setState({ showAddTestCase: true })}>Add</button>\n                {testCases.map((x, ind) => {\n                    return (\n                        <TestCaseViewLarge\n                            testCase={x}\n                            functionType={question.functionType}\n                            isModal={false} />)\n                    })\n                }\n                <AddTestCaseModal show={this.state.showAddTestCase} functionType={question.functionType}\n                    onAdd={this.onTestCaseAdd.bind(this)}\n                    onHide={() => {\n                        this.setState({ showAddTestCase: false })\n                    }} local={false} />\n        </div>\n    )}\n    \n}\n\nexport default TestCases","import React, { useState } from 'react'\nimport QuestionDesc from './QuestionDesc'\nimport Answers from './Answers'\nimport TestCases from './TestCases'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col, Button } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst QuestionContainer = (props) => {\n    const [activeTab, setActiveTab] = useState('1');\n\n    const toggle = tab => {\n        if (activeTab !== tab) setActiveTab(tab);\n    }\n\n    return (\n        <div id=\"postContent\">\n            <Row>\n                <Col sm=\"12\">\n                    <QuestionDesc></QuestionDesc>\n                </Col>\n            </Row>\n            <Nav tabs>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === '1' })}\n                        onClick={() => { toggle('1'); }}\n                    >\n                        Answers\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === '2' })}\n                        onClick={() => { toggle('2'); }}\n                    >\n                        Test cases\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <Row>\n                        <Col sm=\"3\">\n                            <Button color=\"link\">Add answer</Button>\n                        </Col>\n                        <Col sm={{ size: 'auto', offset: 5 }}>\n                            <Button color=\"link\">Sort by newest</Button>\n                            <Button color=\"link\">Sort by most upvote</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\">\n                            <Answers></Answers>\n                        </Col>\n                    </Row>\n                </TabPane>\n                <TabPane tabId=\"2\">\n                    <Row>\n                        <Col>\n                            {/* <TestCaseViewModal></TestCaseViewModal> */}\n                            <TestCases></TestCases>\n                        </Col>\n                    </Row>\n                </TabPane>\n            </TabContent>\n        </div>\n    )\n}\n\n\nexport default QuestionContainer\n","import React from 'react'\nimport QuestionContainer from './QuestionContainer'\nimport { Container, Row, Col } from 'react-bootstrap'\n\n\n\nconst QuestionPage = () =>{\n    \n    return (\n            <Container>\n                <QuestionContainer></QuestionContainer>\n            </Container>\n        )\n    \n}\n\nexport default QuestionPage;","import React from 'react';\nimport { Controlled as ControlledEditor } from '../../react-codemirror2/index'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/python/python'\nimport 'codemirror/mode/clike/clike'\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/search/match-highlighter'\n\n\nclass Editor extends React.Component {\n    \n    code = \"\"\n    getMode(selectedLang) { \n        if (selectedLang === \"Python\") {\n            return \"python\";\n        }\n        if (selectedLang === \"C\") { \n            return \"text/x-csrc\";\n        }\n        if (selectedLang  === \"C++\") { \n            return \"text/x-c++src\";\n        }\n        if (selectedLang  === \"Java\") {\n            return \"text/x-java\";\n        }\n        return \"\";\n    }\n\n    onEditorChange(editor, data, value, cancel) { \n        if (!this.props.onCodeChange || (this.props.mustInclude && !value.split(\"\\n\").includes(this.props.mustInclude))) {\n            cancel();\n        }\n        else { \n            this.props.onCodeChange(value);\n        }\n    }\n\n\n    render() { \n        const { code, lang, extraTheme } = this.props\n        return (\n            <div>\n                <ControlledEditor\n                    className=\"border border-gray\"\n                    onBeforeChange={this.onEditorChange.bind(this)}\n                    value={code}\n                    options={{\n                        indentUnit: 4,\n                        lineWrapping: true,\n                        mode: this.getMode(lang),\n                        lineNumbers: true,\n                        matchBrackets: true,\n                        matchhighlight: true,\n                        autoCloseBrackets: true,\n                        theme: \"default \" + (extraTheme ? extraTheme : \"\")\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Editor;","import { CodeMapper, TypeMapper } from \"../mapper\"\n\nconst mapDict = (val: Map<string, string>) => {\n    const pairs: String[] = []\n    val.forEach((v, k) => pairs.push(k + \":\" + v))\n    return \"{\" + pairs.join(\",\") + \"}\"\n}\n\nconst mapList = (val: string[]) => {\n    return \"[\" + val.join(\",\") + \"]\";\n}\n\nconst mapBool = (val: string) => {\n    if (val === \"true\")\n        return \"True\";\n    return \"False\";\n}\n\nconst LetCodeToPythonCodeMapper =\n    new CodeMapper(\n        (val: string) => val,\n        (val: string) => val,\n        (val: string) => val,\n        mapBool,\n        mapDict,\n        mapList\n    );\n\nconst PythonTypeMapper =\n    new TypeMapper(\n        () => \"int\",\n        () => \"float\",\n        () => \"str\",\n        () => \"bool\",\n        (key, val) => \"[\" + key + \",\" + val + \"]\",\n        (val) => \"[\" + val + \"]\"\n    );\n\nconst PythonLetCodeCodeMapperFuncName = \"____letcode_code_mapper____\"\n\nconst PythonToLetCodeCodeMapper =\n`def ${PythonLetCodeCodeMapperFuncName}(python_object: any) -> str:\n    if type(python_object) == dict:\n        return \"{\" + \",\".join([${PythonLetCodeCodeMapperFuncName}(k) + \":\" + ${PythonLetCodeCodeMapperFuncName}(v) for (k, v) in python_object]) + \"}\"\n    if type(python_object) == list:\n        return \"[\" + \",\".join([${PythonLetCodeCodeMapperFuncName}(v) for v in python_object])  + \"]\"\n    if type(python_object) == bool:\n        if python_object:\n            return \"true\"\n        return \"false\"\n    return str(python_object)\n    `;\n\n\nexport { LetCodeToPythonCodeMapper, PythonTypeMapper, PythonToLetCodeCodeMapper, PythonLetCodeCodeMapperFuncName}","import { RunnerState, CodeRunner, TestTracker, TestCase } from \"../code-runner\"\nimport { FunctionType } from \"../type\";\nimport { LetCodeToPythonCodeMapper, PythonTypeMapper, PythonToLetCodeCodeMapper, PythonLetCodeCodeMapperFuncName } from \"./python-mapper\"\n\nconst testWarpingFunctionName: string = \"___LETCODE_PYTHON_TEST_WARPING_FUNC\"\n\nexport default class CoderunnerPythonImpl implements CodeRunner {\n    //We need to warp user's code in a function scope before passing it to the interpretor\n    //so we can clean user defined vars after tests completed.\n    state: RunnerState = RunnerState.UNINIT;\n    private interpreter_webworker?: Worker; \n    private onStdout?: (out: string) => void;\n    private onError?: (err: string) => void;\n    // sould bind to something that the run button and disable the run button when state is not READY\n    private notifyRunnerState?: (state: RunnerState) => void;\n    private currentTestTracker: TestTracker | null = null;\n    private resolveCurrentTracker: ((tt: TestTracker) => void) | null = null;\n\n    init(notifyRunnerState: (state: RunnerState) => void): void {\n        this.notifyRunnerState = notifyRunnerState;\n        if (this.interpreter_webworker) {\n            notifyRunnerState(this.state);\n            return;\n        }\n        if (this.onStdout)\n            this.onStdout(\"Loading Python interpreter..\");\n        this.updateState(RunnerState.INITING);\n        import(\"worker-loader!./webworker/pyodide.worker\").then(worker => {\n            this.interpreter_webworker = new worker.default();\n            this.interpreter_webworker .addEventListener(\"error\", (e) => console.log(), false);\n\n            this.interpreter_webworker!.onmessage = () => {\n                if (this.onStdout)\n                    this.onStdout(\"Python interpreter loadded! Loading modules and output mapping function..\");\n                this.interpreter_webworker!.onmessage = (e) => {\n                    if (e.data.type === \"runCompleted\") { \n                        if (this.onStdout)\n                            this.onStdout(\"Python runner is ready!\")\n                        this.updateState(RunnerState.READY);\n                        this.interpreter_webworker!.onmessage = this.handleMessage.bind(this);\n                        this.interpreter_webworker!.onerror = this.handleError.bind(this);\n                    }\n                }\n                this.interpreter_webworker?.postMessage({\n                    type: \"run\",\n                    code: `import gc\\n${PythonToLetCodeCodeMapper}`\n                });\n            }\n            this.interpreter_webworker!.onerror = (err) => {\n                this.updateState(RunnerState.ERROR);\n            }\n        })\n    }\n\n    setConsole(onStdout?: (out: string) => void, onError?: (err: string) => void): void {\n        this.onStdout = onStdout;\n        this.onError = onError;\n    }\n\n    canSupportFunctionType(functionType: FunctionType): boolean {\n        for (let varType of functionType.paramsType) { \n            if (!PythonTypeMapper.canBeMapped(varType.type))\n                return false;\n        }\n        return PythonTypeMapper.canBeMapped(functionType.returnType.type)\n    }\n    getStarterCode(functionType: FunctionType): string {\n        return `\ndef ${functionType.name}(${functionType.paramsType.map(varType => varType.name + \":\" + PythonTypeMapper.mapType(varType.type))\n                .join(\", \")}) -> ${PythonTypeMapper.mapType(functionType.returnType.type)}:\n    # Input your code here:\n    return      `;\n    }\n\n    runTest(functionType: FunctionType, testCases: TestCase[], userCode: string): Promise<TestTracker>{\n        if (this.state !== RunnerState.READY)  \n            throw new Error(\"Runner is not ready!\");\n        \n        this.updateState(RunnerState.COMPILING);\n        let generatedCode = `def ${testWarpingFunctionName}() -> list:\\n` + userCode.split(\"\\n\").map(s => \"    \" + s).join(\"\\n\");\n        const testCasesInternalName: string[] = []\n        for (let tc of testCases) { \n            let args: string[] = [];\n            for (let i = 0; i < tc.inputs.length; i++) { \n                args.push(LetCodeToPythonCodeMapper.mapCode(tc.inputs[i], functionType.paramsType[i].type));\n            }\n            const tcName = getVariableName(\"testcase\" + testCases.indexOf(tc), generatedCode)\n            testCasesInternalName.push(tcName);\n            generatedCode += \n            `\n    def ${tcName}() -> str:\n        return ${PythonLetCodeCodeMapperFuncName}(${functionType.name}(${args.join(\", \")}))\n            `;\n        }\n        generatedCode +=\n            `\n    return [${testCasesInternalName.join(\", \")}]\n            `\n        console.log(\"generated code:\\n\", generatedCode)\n        this.currentTestTracker = new TestTracker(userCode, testCases, generatedCode);\n        this.interpreter_webworker!.postMessage({\n            type: \"runTest\",\n            code: generatedCode,\n            numTest: testCases.length,\n            testWarperName: testWarpingFunctionName\n        });\n        return new Promise(resolve => { \n            this.resolveCurrentTracker = resolve;\n        });\n    }\n\n    private handleMessage(msg: MessageEvent): void { \n        if (!msg.data) return;\n        if (msg.data.type === \"stdout\") {\n            if (this.onStdout && this.state === RunnerState.RUNNING) this.onStdout(msg.data.value);\n        }\n        else if (msg.data.type === \"compilationError\") {\n            this.currentTestTracker!.testCompletionTime = new Date().toString()\n            this.resolveCurrentTracker!(this.currentTestTracker!);\n            this.currentTestTracker!.testCases.forEach(tc => tc.onFailure(\"Compilation Failed\"))\n            this.currentTestTracker = null;\n            this.updateState(RunnerState.READY);\n            if (this.onError) this.onError(msg.data.value);\n        }\n        else if (msg.data.type === \"compilationSuccess\") { \n            this.updateState(RunnerState.RUNNING);\n            this.currentTestTracker!.testCompletionTime = new Date().toString();\n            this.resolveCurrentTracker!(this.currentTestTracker!);\n        }\n           \n        else if (msg.data.type === \"testCaseResult\") {\n            if (!this.currentTestTracker)\n                return;\n            if (msg.data.error || msg.data.result !== this.currentTestTracker.testCases[msg.data.testCaseNum].expectedOutput)\n                this.currentTestTracker.testCases[parseInt(msg.data.testCaseNum)].onFailure(msg.data.result);\n            else if (this.currentTestTracker){\n                this.currentTestTracker.testCases[parseInt(msg.data.testCaseNum)].onSuceess(msg.data.result);\n                this.currentTestTracker.testPassed += 1;\n            }\n                \n        }\n        else if (msg.data.type === \"testingCompeleted\") {\n            this.updateState(RunnerState.READY);\n            this.currentTestTracker = null;\n        }\n    }\n\n    private handleError(err: ErrorEvent): void { \n        if (this.onError) {\n            this.onError(err.message);\n            this.updateState(RunnerState.ERROR);\n        }\n    }\n\n    private updateState(state: RunnerState): void { \n        this.state = state;\n        if (this.notifyRunnerState) this.notifyRunnerState(state);\n    } \n}\n\n\n// get a varible name thta's close to nameWanted but not refrenced in userCode\n// It's a naive implimentation\nfunction getVariableName(nameWanted: string, userCode: string): string {\n    let outputName = \"____GENERATED_\" + nameWanted;\n    while (userCode.includes(outputName)) {\n        outputName += \"_\";\n    }\n    return outputName;\n}\n","import { CodeRunner } from \"./code-runner\";\nimport CoderunnerPythonImpl from \"./python/code-runner-python-impl\";\nimport { FunctionType } from \"./type\"\n\nconst codeRuners: Map<string, CodeRunner> = new Map();\ncodeRuners.set(\"Python\", new CoderunnerPythonImpl());\n\nexport function getCodeRunner(lang: string): CodeRunner|undefined { \n    return codeRuners.get(lang)\n}\n\nexport function getSupportedLang(func: FunctionType): string[] { \n    const langs:string[] = []\n    codeRuners.forEach((value: CodeRunner, key: string) => {\n        if (value.canSupportFunctionType(func)) { \n            langs.push(key);\n        }\n    });\n    return langs;\n}\n\nexport function getVersion(): string { \n    return \"Ver 1.0.0\";\n}","import React from 'react'\nimport \"./test-case-view-sm.css\"\n\n\nclass TestCaseViewSmall extends React.Component{\n\n\n    getIconByStatus(status) { \n        if (status) { \n            if (status === \"running\") { \n                return (\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                )\n            }\n            if (status === \"pass\") { \n                return (\n                    <svg className=\"testcase-fade-in\" xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                        <path fill=\"#28a745\" d=\"M18 32.34L9.66 24l-2.83 2.83L18 38l24-24-2.83-2.83z\" />\n                    </svg>\n                );\n            }\n            return (\n                <svg className=\"testcase-fade-in\" xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                    <path fill=\"#dc3545\" d=\"M22 30h4v4h-4zm0-16h4v12h-4zm1.99-10C12.94 4 4 12.95 4 24s8.94 20 19.99 20S44 35.05 44 24 35.04 4 23.99 4zM24 40c-8.84 0-16-7.16-16-16S15.16 8 24 8s16 7.16 16 16-7.16 16-16 16z\" />\n                </svg>\n            );\n        }\n        if (this.props.testCase.selected) { \n            return (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                    <path fill=\"#007bff\" d=\"M45.4 37.9L27.1 19.6c1.8-4.6.8-10.1-2.9-13.8-4-4-10-4.8-14.8-2.5l8.7 8.7-6.1 6.1-8.7-8.7C1 14.2 1.8 20.2 5.8 24.2c3.7 3.7 9.2 4.7 13.8 2.9l18.3 18.3c.8.8 2.1.8 2.8 0l4.7-4.7c.8-.7.8-2 0-2.8z\" />\n                </svg>\n            );\n        }\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                <path fill=\"grey\"d=\"M24 14c5.52 0 10 4.48 10 10 0 1.29-.26 2.52-.71 3.65l5.85 5.85c3.02-2.52 5.4-5.78 6.87-9.5-3.47-8.78-12-15-22.01-15-2.8 0-5.48.5-7.97 1.4l4.32 4.31c1.13-.44 2.36-.71 3.65-.71zM4 8.55l4.56 4.56.91.91C6.17 16.6 3.56 20.03 2 24c3.46 8.78 12 15 22 15 3.1 0 6.06-.6 8.77-1.69l.85.85L39.45 44 42 41.46 6.55 6 4 8.55zM15.06 19.6l3.09 3.09c-.09.43-.15.86-.15 1.31 0 3.31 2.69 6 6 6 .45 0 .88-.06 1.3-.15l3.09 3.09C27.06 33.6 25.58 34 24 34c-5.52 0-10-4.48-10-10 0-1.58.4-3.06 1.06-4.4zm8.61-1.57l6.3 6.3L30 24c0-3.31-2.69-6-6-6l-.33.03z\" />\n            </svg>\n        )\n    }\n\n    getHeader(canSelect, _key, title) { \n        if (canSelect) { \n            return (\n                <div className=\"form-check\">\n                    <input type=\"checkbox\" className=\"form-check-input bg-light\" id={\"select-case\" + _key} onChange={\n                        () => {\n                            this.props.onSelect(this.props.testCase);\n                        }} checked={!!this.props.testCase.selected}\n                        autoComplete=\"off\" />\n                    <label className=\"form-check-label\" id=\"select-case-label\" htmlFor={\"select-case\" + _key} ><h5 className=\"card-title\" id=\"select-case-label-text\">{title} </h5></label>\n                </div>\n            );\n        }\n        return <h5 className=\"card-title\">{title} </h5>;\n    }\n\n    render() {\n        const { testCase, onClick, _key } = this.props;\n        return (\n            <div className=\"card testcase-view-sm-body\" onClick={(e) => {\n                if (e.target.id !== \"select-case\" + _key && e.target.id !== \"select-case-label\" && e.target.id !== \"select-case-label-text\") { \n                    onClick(testCase)\n                }\n            }}>\n                <div className={\"row no-gutters testcase-card-hover-\" + (testCase.status ? testCase.status : \"default\")}>\n                    <div className=\"col-md-10\">\n                        <div className=\"card-body\">\n                            {this.getHeader(testCase.status !== \"running\", _key, testCase.name)}\n                            <p className=\"card-text\">l{testCase.desc}</p>\n                            <p className=\"card-text small text-muted\">Submitted on {new Date(testCase.date).toDateString()}, {testCase.numRun} runs</p>\n                        </div>\n                    </div>\n                    <div className=\"col-md-2 my-auto\">\n                        {this.getIconByStatus(testCase.status)}\n                    </div>\n                </div>\n            </div>)\n    }\n}\n\n\nexport default TestCaseViewSmall;","import React from \"react\"\nimport Editor from \"./editor\"\nimport { getCodeRunner, getSupportedLang, getVersion } from \"../../letcode-code-runner/code-runner-global\"\nimport { TestCase } from \"../../letcode-code-runner/code-runner\"\nimport { Type, FunctionType, VariableType } from \"../../letcode-code-runner/type\"\nimport \"./answer-question.css\"\nimport TestCaseViewSmall from \"../test-case/test-case-view-sm\"\nimport { TestCaseViewModal } from \"../test-case/test-case-view-lg\"\nimport { AddTestCaseModal } from \"../test-case/add-test-case\"\nimport { Tabs, Tab, Dropdown, DropdownButton } from \"react-bootstrap\"\n\n\nconst newLine = \">> \"\nconst maxLogs = 100;\n\nclass AnswerQuestion extends React.Component{\n\n    constructor(props) {\n        super(props);\n        const { preferedLang, testCases, userId, question } = props;\n        const supLang = getSupportedLang(question.functionType);\n        const defaultLang = preferedLang && supLang.includes(preferedLang) ? preferedLang : supLang[0];\n        const runner = getCodeRunner(defaultLang);\n        runner.setConsole(this.consoleOnMsg.bind(this), this.consoleOnErr.bind(this));\n        const starter = runner.getStarterCode(question.functionType);\n        if (!(userId in localStorage)) {\n            localStorage.setItem(userId, JSON.stringify({ [question._id]: { history: [], localTestCase: [] , code:starter} }));\n        }\n        const store = JSON.parse(localStorage.getItem(userId))[question._id];\n        this.state = {\n            supportedLang: supLang,\n            selectedLang: defaultLang,\n            tab: \"Question\",\n            testCases: JSON.parse(JSON.stringify(testCases.concat(store.localTestCase))),\n            codeRunner: runner,\n            code: store.code,\n            starterList: starter.split(\"\\n\"),\n            log: [{ type: \"info\", value: \"Code Runner \" + getVersion() }],\n            codeRunnerState: runner.state,\n            showAddTestCase: false,\n            testCaseDetail: null,\n            testCaseSortBy: \"newest\",\n            testCasesView: \"all\",\n            runnerState: \"ready\",\n            history: store.history\n        };\n    }\n\n\n    onLangSelectChange(e) {\n        this.codeRunner.setConsole(null, null);\n        const runner = getCodeRunner(e.target.value)\n        runner.setConsole(this.consoleOnMsg.bind(this), this.consoleOnErr.bind(this));\n        const starter = runner.getStarterCode(this.props.question.functionType);\n        this.setState({\n            selectedLang: e.target.value,\n            codeRunner: runner,\n            code: starter,\n            starterList: starter.split(\"\\n\"),\n            codeRunnerState: runner.state\n        });\n    }\n\n    getMustIncludeStarter() { \n        //lang specific\n        if (this.state.selectedLang === \"Python\") { \n            return this.state.starterList[1];\n        }\n        return \"\"\n    }\n\n    consoleOnMsg(msg) {\n        const newLog = this.state.log;\n        newLog.push({ type: \"info\", value: msg });\n        this.setState({ log: newLog.slice(Math.max(newLog.length - maxLogs, 0)) });\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    consoleOnErr(err) { \n        const newLog = this.state.log;\n        newLog.push({ type: \"error\", value: err });\n        this.setState({ log: newLog.slice(Math.max(newLog.length - maxLogs, 0)) });\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    onTestCaseAdd(testCase) { \n        if (!testCase.isLocal) { \n            //upload to server, get server time, update state,return\n            return;\n        }\n        testCase.numRun = 0;\n        testCase.date = new Date().toString();\n        const local = JSON.parse(localStorage.getItem(this.props.userId));\n        local[[this.props.question._id]].localTestCase.push(testCase);\n        localStorage.setItem(this.props.userId, JSON.stringify(local));\n        const newCases = [...this.state.testCases];\n        newCases.push(testCase);\n        this.setState({ testCases: newCases, showAddTestCase: false });\n    }\n\n\n    onTestCaseSelect(testCase) { \n        const newCases = [...this.state.testCases];\n        const update = { ...testCase };\n        update.selected = !update.selected;\n        newCases[newCases.indexOf(testCase)] = update;\n        this.setState({ testCases: newCases });\n    }\n\n    getRecentTestInfo() { \n        if (this.state.history.length === 0) { \n            return <span className=\"text-secondary text-left d-inline-block small text-truncate pl-2 pt-2\"\n                style={{ maxWidth: \"calc(42vw - 215px)\" }}>\n                Your code is brand new! Give it a try -{\">\"}\n            </span>\n        }\n        const lastHistory = this.state.history[0]\n        return (\n            <span className=\"text-secondary text-left d-inline-block small text-truncate pl-2 pt-1\"\n                style={{ maxWidth: \"calc(42vw - 215px)\" }}>\n                {\"Most recent test run on \" + new Date(lastHistory.testCompletionTime).toLocaleString()}\n                <br />\n                {String(lastHistory.testPassed) + \" passed, \" + String(lastHistory.testCases.length - lastHistory.testPassed) + \" failed\"}\n            </span>\n        )\n    }\n\n    mapTestCases() { \n        let testCases = this.state.testCases;\n        if (this.state.testCaseSortBy === \"newest\")\n            testCases = testCases.sort((a, b) => new Date(b.date) - new Date(a.date))\n        else if (this.state.testCaseSortBy === \"mostRuns\") { \n            testCases = testCases.sort((a, b) => b.numRun - a.numRun)\n        }\n            \n        if (this.state.testCasesView === \"selectedOnly\")\n            testCases = testCases.filter(tc => tc.selected);\n        return testCases.map((x, ind) =>\n            <TestCaseViewSmall\n                testCase={x} key={ind} _key={ind}\n                onSelect={this.onTestCaseSelect.bind(this)}\n                onClick={(testcase) => this.setState({ testCaseDetail: testcase })}\n            />);\n    }\n\n    mapHistory() { \n        return (\n            <ul className=\"list-group\">\n                {this.state.history.map((h, ind) => \n                    <li key={ind} className=\"list-group-item\">{\n                        new Date(h.testCompletionTime).toLocaleString()\n                        + \" | \" + String(h.testPassed) + \" passed, \"\n                        + String(h.testCases.length - h.testPassed)\n                        + \" failed\"}\n                        <button className=\"btn btn-link float-right p-0\" onClick={() => this.setState({code: h.userCode})}>Restore Code</button>\n                    </li>\n                )}\n            </ul>);\n    }\n\n    runTest() {\n        this.setState({tab:\"Test Cases\"})\n        let runOnce = false;\n        this.state.codeRunner.init((runnerState) => { \n            if (runnerState === \"ready\" && !runOnce) {\n                runOnce = true;\n                const TestToRun = [];\n                const newTestCases = [];\n                for (let tc of this.state.testCases) { \n                    const newTc = { ...tc };\n                    newTc.actualOutput = null;\n                    if (newTc.selected) {\n                        newTc.status = \"running\";\n                        const onTestOut = (pass, output) => {\n                            const nnTc = { ...newTc };\n                            nnTc.numRun += 1;\n                            nnTc.status = pass ? \"pass\" : \"fail\";\n                            nnTc.actualOutput = output;\n                            const newTcs = [...this.state.testCases];\n                            newTcs[newTcs.indexOf(newTc)] = nnTc;\n                            this.setState({ testCases: newTcs });\n                        }\n                        TestToRun.push(new TestCase(newTc.inputs, newTc.output,\n                            (info) => onTestOut(true, info),\n                            (err) => onTestOut(false, err)));\n                    }\n                    else { \n                        newTc.status = null;\n                    }\n                    newTestCases.push(newTc);\n                }\n                this.state.codeRunner\n                    .runTest(this.props.question.functionType, TestToRun, this.state.code)\n                    .then(codeTacker => {\n                        const newHistory = [...this.state.history];\n                        newHistory.unshift(codeTacker);\n                        const store = JSON.parse(localStorage.getItem(this.props.userId));\n                        store[this.props.question._id].history = newHistory;\n                        localStorage.setItem(this.props.userId, JSON.stringify(store));\n                        this.setState({history:newHistory})\n                    });\n                this.setState({ testCases: newTestCases});\n            }\n            else if (runnerState === \"error\") {\n                alert(\"Error occured, try refresh your browser\")\n            }\n            this.setState({ runnerState: runnerState });\n        })\n    }\n    \n    \n    render() {\n        const { question, userId } = this.props;\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-7 p-0\">\n                        <select className=\"custom-select rounded-0 border-gray border-bottom-0 \"\n                            onChange={this.onLangSelectChange.bind(this)}\n                            value={this.state.selectedLang}>\n                            {this.state.supportedLang.map((x, ind) => <option key={ind}>{x}</option>)}\n                        </select>\n                        <Editor code={this.state.code}\n                            onCodeChange={(code) => {\n                                const store = JSON.parse(localStorage.getItem(userId));\n                                store[question._id].code = code;\n                                localStorage.setItem(userId, JSON.stringify(store));\n                                this.setState({ code: code })\n                            }}\n                            lang={this.state.selectedLang}\n                            mustInclude={this.getMustIncludeStarter()}\n                            extraTheme=\"answer-editor\"\n                        />\n                        <div className=\"answer-console\">\n                            <div className=\"answer-console-title\">\n                                Console Output:\n                            </div>\n                            <div className=\"answer-console-body\">\n                                {this.state.log.map((x, ind) => { \n                                    if (x.type === \"info\") \n                                        return <p className=\"answer-console-text m-0 text-secondary\" key={ind}><span className=\"text-info\">{newLine}</span>{x.value}</p>\n                                    if (x.type === \"error\") \n                                        return <p className=\"answer-console-text bg-danger text-white\" key={ind}>{x.value}</p>\n                                    return null\n                                })}\n                                <div style={{ float: \"left\", clear: \"both\" }}\n                                    ref={(el) => { this.messagesEnd = el; }}>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-5 p-0\">\n                        <div className=\"answer-info-tab\">\n                            <Tabs activeKey={this.state.tab} onSelect={(k) => this.setState({tab: k})}>\n                                <Tab eventKey=\"Question\" title=\"Question\">\n                                    <div className=\"p-3 answer-question-body\">\n                                        <br/>\n                                        <h4 className=\"text-center px-4\"> {question.name}</h4>\n                                        <br/>\n                                        <p className=\"lead px-4\">\n                                            {question.desc}\n                                        </p>\n                                        <div className=\"text-secondary text-right small\">Posted by <a href=\"#\">{question.by}</a> on {new Date(question.date).toDateString()}</div>\n                                        <div className=\"text-secondary text-right small\">119 upvote, 21 answers</div>\n                                    </div>  \n                                </Tab>\n                                <Tab className=\"bg-light\" eventKey=\"Test Cases\" title=\"Test Cases\">\n                                    <div className=\"p-2 btn-group\" role=\"group\">\n                                        <button type=\"button\" className=\"btn btn-link\" onClick={() => this.setState({showAddTestCase:true})}>Add</button>\n                                        <DropdownButton variant=\"link\" title=\"Sort By\">\n                                            <Dropdown.Item active={this.state.testCaseSortBy === \"newest\"}\n                                                onClick={() => this.setState({ testCaseSortBy: \"newest\" })}>Newest</Dropdown.Item>\n                                            <Dropdown.Item active={this.state.testCaseSortBy === \"mostRuns\"}\n                                                onClick={() => this.setState({ testCaseSortBy: \"mostRuns\" })}>Most Runs</Dropdown.Item>\n                                        </DropdownButton>\n                                        <DropdownButton variant=\"link\" title=\"View\">\n                                            <Dropdown.Item active={this.state.testCasesView === \"all\"}\n                                                onClick={() => this.setState({ testCasesView: \"all\" })}>All</Dropdown.Item>\n                                            <Dropdown.Item active={this.state.testCasesView === \"selectedOnly\"}\n                                                onClick={() => this.setState({ testCasesView: \"selectedOnly\" })}>Selected Only</Dropdown.Item>\n                                        </DropdownButton>\n                                    </div>\n                                    \n                                    <div className=\"answer-test-case-body\">\n                                        {this.mapTestCases()}\n                                    </div>\n                                </Tab>\n                                <Tab className=\"bg-light\" eventKey=\"Test History\" title=\"Test History\">\n                                    <div className=\"answer-question-body\">\n                                        {this.mapHistory()}\n                                    </div>\n                                </Tab>\n                                <Tab eventKey=\"Setting\" title=\"Setting\">\n                                    <div className=\"text-center mt-4\">\n                                        LetCode Code Runner: {getVersion()}\n                                    </div>\n                                    <div className=\"text-center mt-2\">\n                                        <button type=\"button\" className=\"btn btn-link\" onClick={() => {\n                                            localStorage.removeItem(userId);\n                                            window.location.reload(false);\n                                        }}>Clear Local Storage</button>\n                                    </div>\n                                </Tab>\n                            </Tabs>\n                        </div>\n                        <div className=\"answer-button-group\">\n                            {this.getRecentTestInfo()}\n                            <div className=\"btn-group float-right py-1\" role=\"group\">\n                                {this.state.runnerState !== \"ready\" ? \n                                    <button type=\"button\" className=\"btn btn-primary rounded-0 mr-2\" disabled={true}>\n                                        <span className=\"mr-2\">{this.state.runnerState[0].toUpperCase() + this.state.runnerState.slice(1)}</span>\n                                        <span className=\"spinner-border spinner-border-sm\"></span>\n                                    </button>\n                                    :\n                                    <button type=\"button\" className=\"btn btn-primary rounded-0 mr-2\" onClick={this.runTest.bind(this)}>\n                                        <span className=\"mr-2\">Run Test</span>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                            <path d=\"M8 5v14l11-7z\" fill=\"white\" />\n                                        </svg>\n                                    </button>\n                                }\n                                \n                                <button type=\"button\" className=\"btn btn-primary rounded-0 mr-1\">Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <TestCaseViewModal functionType={this.props.question.functionType}\n                    testCase={this.state.testCaseDetail}\n                    onHide={() => this.setState({ testCaseDetail: null })} />\n                <AddTestCaseModal show={this.state.showAddTestCase} functionType={this.props.question.functionType}\n                    onAdd={this.onTestCaseAdd.bind(this)}\n                    onHide={() => { \n                    this.setState({showAddTestCase: false})\n                }} local={true}/>\n\n            </div>\n            \n        )\n    }\n}\n\nconst inputType = Type.LIST(Type.INT);\n\n// you can define nested type like this:\nconst myType = Type.DICT(Type.STRING, Type.DICT(Type.FLOAT, Type.LIST(Type.INT)));\n\n// the LetCodeCodeMapper can map users input value to LetCode standard form, and do the type check\n\n// OK  back to the function we want to define\nconst myFunc = new FunctionType(\"sortList\", [new VariableType(\"l\", inputType)], new VariableType(\"return\", inputType));\n\nconst question = { functionType: myFunc, name: \"Sort list\", desc: \"computer science, arranging in an ordered sequence is called 'sorting'. Sorting is a common operation in many applications, and efficient algorithms to perform it have been developed.\", date:new Date().toString(), by:\"user32\", _id:\"123\"}\n\nconst testCases = [\n    { name: \"first case\", desc: \"test it can compile\", inputs: [\"[]\"], output: \"[]\", numRun: 11, date: new Date().toString() },\n    { name: \"base case\", desc: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\", inputs: [\"[1]\"], output: \"[1]\", numRun: 12, date: new Date().toString() }\n]\n\nexport default () => <AnswerQuestion userId=\"123\" question={question} testCases={testCases}/>;","import React, { Component } from 'react'\n\nclass AddTestcase extends Component {\n\n    // use this state to submit a problem\n    state = {...this.props.location.state }\n\n    handleAddTestcase = (e) => {\n        e.preventDefault()\n        const testcase = [\n            ...this.state.testcases,\n            {inputs: [], outputs: null, description: \"\"}\n        ]\n        this.setState({\n            testcases: testcase\n        })\n    }\n\n    handleInputOnchange = (e, inputIndex, testcaseIndex) => {\n        e.preventDefault()\n        const input = [...(this.state.testcases[testcaseIndex].inputs.slice(0, inputIndex)),\n        e.target.value,\n        ...this.state.testcases[testcaseIndex].inputs.slice(inputIndex + 1)\n        ]\n        const testcase = {...this.state.testcases[testcaseIndex], inputs: input}\n        const testcases = [\n            ...this.state.testcases.slice(0, testcaseIndex),\n            testcase,\n            ...this.state.testcases.slice(testcaseIndex + 1)\n        ]\n        console.log(\"testcase:\", testcases)\n        this.setState({\n            testcases: testcases\n        })\n        }\n\n    handleOnchange = (e, index, type) => {\n        e.preventDefault()\n        let testcase\n        if (type === \"output\"){\n            testcase = {...this.state.testcases[index], outputs: e.target.value}\n        }\n        if (type === \"description\"){\n            testcase = {...this.state.testcases[index], description: e.target.value}\n        }\n        const testcases = [\n            ...this.state.testcases.slice(0, index),\n            testcase,\n            ...this.state.testcases.slice(index + 1)\n        ]\n        this.setState({\n            testcases: testcases\n        })\n    }\n\n    handlePost = (e) => {\n        e.preventDefault()\n        console.log(\"Post question triggered\")\n        // handle check\n    }\n\n    render() {\n        console.log(this.props.location.state)\n        return (\n            <div className=\"container\">\n                {  this.state.testcases.map((testcase, ind) => {\n                    return (\n                        <div>\n                            <br></br>\n                            <div className=\"row\">\n                                <h5>Test case {ind}:</h5>\n                            </div>\n                            <div className=\"row\">\n                                <h5>Input:</h5>\n                            </div>\n                            {\n                                this.state.inputs.map((input, index) => {\n                                return(\n                                    <div className=\"form-group row\">\n                                        <label className=\"col-sm-2 col-form-label\">{input.inputName}:</label>\n                                        <div className=\"col-sm-10\">\n                                            <input type=\"text\" className=\"form-control\" onChange={(e) => this.handleInputOnchange(e, index, ind)}></input>\n                                        </div>\n                                    </div>\n                                )\n                                }\n                                )\n                            }\n\n                            <div className=\"row\">\n                                <h5> Expect output:</h5>\n                            </div>\n                            <div className=\"form-group\">\n\n                                <div className=\"row\">\n                                    <input type=\"text\" className=\"form-control\" onChange={(e) => this.handleOnchange(e, ind, \"output\")}></input>\n                                </div>\n                                \n                            </div>\n                            \n                            <div className=\"row\">\n                                <textarea class=\"form-control\" placeholder=\"Add description / message\" rows=\"3\" onChange={(e) => this.handleOnchange(e, ind, \"description\")}></textarea>\n                            </div>\n                        </div>\n                    )\n                }\n                )\n                }\n                <button className=\"blue center\" onClick={(e) => this.handleAddTestcase(e)}>Add testcase</button>\n                <br></br>\n                <button className=\"blue center\" onClick={(e) => this.handlePost(e)}>Post Question</button>\n            </div>\n        )\n    }\n}\n\n\nexport default AddTestcase\n","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom'\nimport Header from './react-components/layout/Header'\nimport MainLogin from './react-components/auth/MainLogin'\nimport MainPage from './react-components/mainpage/index'\nimport Profile from './react-components/user/Profile'\nimport CreateQuestion from './react-components/post-question/CreateQuestion'\nimport QuestionPage from './react-components/question-page/QuestionPage'\nimport AnswerQuestion from './react-components/answer-question/answer-question'\nimport AddTestcase from './react-components/post-question/AddTestcase'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\n// for testing \nimport pythonRunner from './letcode-code-runner/python/code-runner-python-impl'\nimport { Type, VariableType, FunctionType } from './letcode-code-runner/type'\nimport { TestCase } from './letcode-code-runner/code-runner'\nimport { StringToLetCodeCodeMapper, LetCodeTypeMapper } from './letcode-code-runner/letcode-mapper'\nimport { LetCodeToPythonCodeMapper , PythonTypeMapper } from './letcode-code-runner/python/python-mapper'\n\nfunction testRunner() { \n  // let say we want to test a function that return max value of a list;\n  // function name: maxList,  input l: list of int, return int\n  // we first define these types using Type:\n\n  const inputType = Type.LIST(Type.INT);\n  const outType = Type.INT;\n\n  // you can define nested type like this:\n  const myType = Type.DICT(Type.STRING, Type.DICT(Type.FLOAT, Type.LIST(Type.INT)));\n\n  // the LetCodeCodeMapper can map users input value to LetCode standard form, and do the type check\n  console.log(\"letcode type:\", LetCodeTypeMapper.mapType(myType))\n  console.log(\"python type:\", PythonTypeMapper.mapType(myType))\n  console.log(StringToLetCodeCodeMapper.mapCode(\"{\\\"a\\\":{5: [1, 2]}, 'b':{.4: [2, 2]} }\", myType))\n  // in case this type check failed, it will raise error:\n  try { console.log(StringToLetCodeCodeMapper.mapCode(\"{\\\"a\\\":\\\"s\\\", 'b':{.4: [2, 2]} }\", myType)) } catch (err) { console.error(err) }\n\n  // OK  back to the function we want to define\n  const myFunc = new FunctionType(\"maxList\", [new VariableType(\"l\", inputType)], new VariableType(\"return\", outType))\n\n  // test cases:\n  const onTestCase1Succ = (err) => console.log(\"testcase 1 pass: test output \" + err);\n  const onTestCase2Succ = (err) => console.log(\"testcase 2 pass: test output \" + err);\n  const onTestCase3Succ = (err) => console.log(\"testcase 3 pass: test output \" + err);\n  const onTestCase1Failed = (err) => console.log(\"testcase 1 failed: test output \" + err);\n  const onTestCase2Failed = (err) => console.log(\"testcase 2 failed: test output \" + err);\n  const onTestCase3Failed = (err) => console.log(\"testcase 3 failed: test output \" + err);\n  const tc1 = new TestCase([LetCodeToPythonCodeMapper.mapCode(\"[1, 2, 3]\", outType)], LetCodeToPythonCodeMapper.mapCode(\"3\", outType), onTestCase1Succ, onTestCase1Failed)\n  const tc2 = new TestCase([LetCodeToPythonCodeMapper.mapCode(\"[1, 2, 3, 4]\", outType)], LetCodeToPythonCodeMapper.mapCode(\"4å\", outType), onTestCase2Succ, onTestCase2Failed)\n  const tc3 = new TestCase([LetCodeToPythonCodeMapper.mapCode(\"[1]\", outType)], LetCodeToPythonCodeMapper.mapCode(\"1\", outType), onTestCase3Succ, onTestCase3Failed)\n  // choice a runner\n  const runner = new pythonRunner();\n  console.log(\"can python runner suppport this?\", runner.canSupportFunctionType(myFunc));\n  // set console\n  runner.setConsole(x => console.log(\"python console: \" + x), x => console.warn(\"python console: error: \" + x));\n  // init, we pass a function that will be called on state change\n  let run = true\n  runner.init(x => {\n    console.log(\"python runner state: \" + x)\n    // run our test if runner is ready\n    if (x === \"ready\" && run) { \n      runner.runTest(myFunc, [],\n        `\ndef maxList(l):\n    print(\"i'm in python!\")\n    if len(l) == 4:\n        raise Exception(\"my exception\")\n    return l[-1]\n    `\n      );\n      run = false;\n    }\n  });\n  // get starter code:\n  console.log(runner.getStarterCode(myFunc));\n  // run tests\n  \n}\n\nfunction App() {\n  // testRunner();\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Switch>\n        <Route exact path=\"/\" component={MainPage}></Route>\n        <Route path='/signin_up' component={MainLogin}></Route>\n        <Route path='/:username/profile' component={Profile}></Route>\n        <Route path='/newquestion' component={CreateQuestion}></Route>\n        <Route path='/:question_id/detail' component={QuestionPage}></Route>\n        <Route path='/:question_id/answer_question' component={AnswerQuestion}></Route>\n        {/* <Route path='/:username/collections' component={Collection}> */}\n        <Route path='/addtestcase' component={AddTestcase}></Route>\n        <Route path='/myprofile' component={Profile}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const postUser = (user) => {\n    console.log(\"fetch called\")\n    return fetch('/user/add_user', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(user)\n    });\n}\n\nconst userSignIn = (user) => {\n    console.log('userSignIn called')\n    return fetch('/user/userSignIn', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify(user)\n    });\n}\n\nmodule.exports = {\n    postUser,\n    userSignIn\n}","'use strict';\n\nfunction _extends() {\n  _extends = Object.assign || function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\n\nvar __extends = void 0 && (void 0).__extends || function() {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    }\n    instanceof Array && function(d, b) {\n      d.__proto__ = b;\n    } || function(d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function(d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.UnControlled = exports.Controlled = void 0;\n\nvar React = require('react');\n\nvar SERVER_RENDERED = typeof navigator === 'undefined' || global['PREVENT_CODEMIRROR_RENDER'] === true;\nvar cm;\n\nif (!SERVER_RENDERED) {\n  cm = require('codemirror');\n}\n\nvar Helper = function() {\n  function Helper() {}\n\n  Helper.equals = function(x, y) {\n    var _this = this;\n\n    var ok = Object.keys,\n      tx = _typeof(x),\n      ty = _typeof(y);\n\n    return x && y && tx === 'object' && tx === ty ? ok(x).length === ok(y).length && ok(x).every(function(key) {\n      return _this.equals(x[key], y[key]);\n    }) : x === y;\n  };\n\n  return Helper;\n}();\n\nvar Shared = function() {\n  function Shared(editor, props) {\n    this.editor = editor;\n    this.props = props;\n  }\n\n  Shared.prototype.delegateCursor = function(position, scroll, focus) {\n    var doc = this.editor.getDoc();\n\n    if (focus) {\n      this.editor.focus();\n    }\n\n    scroll ? doc.setCursor(position) : doc.setCursor(position, null, {\n      scroll: false\n    });\n  };\n\n  Shared.prototype.delegateScroll = function(coordinates) {\n    this.editor.scrollTo(coordinates.x, coordinates.y);\n  };\n\n  Shared.prototype.delegateSelection = function(ranges, focus) {\n    var doc = this.editor.getDoc();\n    doc.setSelections(ranges);\n\n    if (focus) {\n      this.editor.focus();\n    }\n  };\n\n  Shared.prototype.apply = function(props) {\n    if (props && props.selection && props.selection.ranges) {\n      this.delegateSelection(props.selection.ranges, props.selection.focus || false);\n    }\n\n    if (props && props.cursor) {\n      this.delegateCursor(props.cursor, props.autoScroll || false, this.editor.getOption('autofocus') || false);\n    }\n\n    if (props && props.scroll) {\n      this.delegateScroll(props.scroll);\n    }\n  };\n\n  Shared.prototype.applyNext = function(props, next, preserved) {\n    if (props && props.selection && props.selection.ranges) {\n      if (next && next.selection && next.selection.ranges && !Helper.equals(props.selection.ranges, next.selection.ranges)) {\n        this.delegateSelection(next.selection.ranges, next.selection.focus || false);\n      }\n    }\n\n    if (props && props.cursor) {\n      if (next && next.cursor && !Helper.equals(props.cursor, next.cursor)) {\n        this.delegateCursor(preserved.cursor || next.cursor, next.autoScroll || false, next.autoCursor || false);\n      }\n    }\n\n    if (props && props.scroll) {\n      if (next && next.scroll && !Helper.equals(props.scroll, next.scroll)) {\n        this.delegateScroll(next.scroll);\n      }\n    }\n  };\n\n  Shared.prototype.applyUserDefined = function(props, preserved) {\n    if (preserved && preserved.cursor) {\n      this.delegateCursor(preserved.cursor, props.autoScroll || false, this.editor.getOption('autofocus') || false);\n    }\n  };\n\n  Shared.prototype.wire = function(props) {\n    var _this = this;\n\n    Object.keys(props || {}).filter(function(p) {\n      return /^on/.test(p);\n    }).forEach(function(prop) {\n      switch (prop) {\n        case 'onBlur': {\n          _this.editor.on('blur', function(cm, event) {\n            _this.props.onBlur(_this.editor, event);\n          });\n        }\n        break;\n\n      case 'onContextMenu': {\n        _this.editor.on('contextmenu', function(cm, event) {\n          _this.props.onContextMenu(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onCopy': {\n        _this.editor.on('copy', function(cm, event) {\n          _this.props.onCopy(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onCursor': {\n        _this.editor.on('cursorActivity', function(cm) {\n          _this.props.onCursor(_this.editor, _this.editor.getDoc().getCursor());\n        });\n      }\n      break;\n\n      case 'onCursorActivity': {\n        _this.editor.on('cursorActivity', function(cm) {\n          _this.props.onCursorActivity(_this.editor);\n        });\n      }\n      break;\n\n      case 'onCut': {\n        _this.editor.on('cut', function(cm, event) {\n          _this.props.onCut(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDblClick': {\n        _this.editor.on('dblclick', function(cm, event) {\n          _this.props.onDblClick(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDragEnter': {\n        _this.editor.on('dragenter', function(cm, event) {\n          _this.props.onDragEnter(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onDragLeave': {\n        _this.editor.on('dragleave', function(cm, event) {\n          _this.props.onDragLeave(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDragOver': {\n        _this.editor.on('dragover', function(cm, event) {\n          _this.props.onDragOver(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onDragStart': {\n        _this.editor.on('dragstart', function(cm, event) {\n          _this.props.onDragStart(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDrop': {\n        _this.editor.on('drop', function(cm, event) {\n          _this.props.onDrop(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onFocus': {\n        _this.editor.on('focus', function(cm, event) {\n          _this.props.onFocus(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onGutterClick': {\n        _this.editor.on('gutterClick', function(cm, lineNumber, gutter, event) {\n          _this.props.onGutterClick(_this.editor, lineNumber, gutter, event);\n        });\n      }\n      break;\n\n      case 'onInputRead': {\n        _this.editor.on('inputRead', function(cm, EditorChangeEvent) {\n          _this.props.onInputRead(_this.editor, EditorChangeEvent);\n        });\n      }\n      break;\n\n      case 'onKeyDown': {\n        _this.editor.on('keydown', function(cm, event) {\n          _this.props.onKeyDown(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onKeyHandled': {\n        _this.editor.on('keyHandled', function(cm, key, event) {\n          _this.props.onKeyHandled(_this.editor, key, event);\n        });\n      }\n      break;\n\n      case 'onKeyPress': {\n        _this.editor.on('keypress', function(cm, event) {\n          _this.props.onKeyPress(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onKeyUp': {\n        _this.editor.on('keyup', function(cm, event) {\n          _this.props.onKeyUp(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onMouseDown': {\n        _this.editor.on('mousedown', function(cm, event) {\n          _this.props.onMouseDown(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onPaste': {\n        _this.editor.on('paste', function(cm, event) {\n          _this.props.onPaste(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onRenderLine': {\n        _this.editor.on('renderLine', function(cm, line, element) {\n          _this.props.onRenderLine(_this.editor, line, element);\n        });\n\n        break;\n      }\n\n      case 'onScroll': {\n        _this.editor.on('scroll', function(cm) {\n          _this.props.onScroll(_this.editor, _this.editor.getScrollInfo());\n        });\n      }\n      break;\n\n      case 'onSelection': {\n        _this.editor.on('beforeSelectionChange', function(cm, data) {\n          _this.props.onSelection(_this.editor, data);\n        });\n      }\n      break;\n\n      case 'onTouchStart': {\n        _this.editor.on('touchstart', function(cm, event) {\n          _this.props.onTouchStart(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onUpdate': {\n        _this.editor.on('update', function(cm) {\n          _this.props.onUpdate(_this.editor);\n        });\n      }\n      break;\n\n      case 'onViewportChange': {\n        _this.editor.on('viewportChange', function(cm, from, to) {\n          _this.props.onViewportChange(_this.editor, from, to);\n        });\n      }\n      break;\n      }\n    });\n  };\n\n  return Shared;\n}();\n\nvar Controlled = function(_super) {\n  __extends(Controlled, _super);\n\n  function Controlled(props) {\n    var _this = _super.call(this, props) || this;\n\n    if (SERVER_RENDERED) return _this;\n    _this.applied = false;\n    _this.appliedNext = false;\n    _this.appliedUserDefined = false;\n    _this.deferred = null;\n    _this.emulating = false;\n    _this.hydrated = false;\n\n    _this.initCb = function() {\n      if (_this.props.editorDidConfigure) {\n        _this.props.editorDidConfigure(_this.editor);\n      }\n    };\n\n    _this.mounted = false;\n    return _this;\n  }\n\n  Controlled.prototype.hydrate = function(props) {\n    var _this = this;\n\n    var _options = props && props.options ? props.options : {};\n\n    var userDefinedOptions = _extends({}, cm.defaults, this.editor.options, _options);\n\n    var optionDelta = Object.keys(userDefinedOptions).some(function(key) {\n      return _this.editor.getOption(key) !== userDefinedOptions[key];\n    });\n\n    if (optionDelta) {\n      Object.keys(userDefinedOptions).forEach(function(key) {\n        if (_options.hasOwnProperty(key)) {\n          if (_this.editor.getOption(key) !== userDefinedOptions[key]) {\n            _this.editor.setOption(key, userDefinedOptions[key]);\n\n            _this.mirror.setOption(key, userDefinedOptions[key]);\n          }\n        }\n      });\n    }\n\n    if (!this.hydrated) {\n      this.deferred ? this.resolveChange(props.value) : this.initChange(props.value || '');\n    }\n\n    this.hydrated = true;\n  };\n\n  Controlled.prototype.initChange = function(value) {\n    this.emulating = true;\n    var doc = this.editor.getDoc();\n    var lastLine = doc.lastLine();\n    var lastChar = doc.getLine(doc.lastLine()).length;\n    doc.replaceRange(value || '', {\n      line: 0,\n      ch: 0\n    }, {\n      line: lastLine,\n      ch: lastChar\n    });\n    this.mirror.setValue(value);\n    doc.clearHistory();\n    this.mirror.clearHistory();\n    this.emulating = false;\n  };\n\n  Controlled.prototype.resolveChange = function (value) {\n    this.emulating = true;\n    var doc = this.editor.getDoc();\n\n    if (this.deferred.origin === 'undo') {\n      doc.undo();\n    } else if (this.deferred.origin === 'redo') {\n      doc.redo();\n    } else {\n      doc.replaceRange(this.deferred.text, this.deferred.from, this.deferred.to, this.deferred.origin);\n    }\n    if (value && value !== doc.getValue()) {\n      var cursor = doc.getCursor();\n      doc.setValue(value);\n      doc.setCursor(cursor);\n    }\n\n    this.emulating = false;\n    this.deferred = null;\n  };\n\n  Controlled.prototype.mirrorChange = function(deferred) {\n    var doc = this.editor.getDoc();\n\n    if (deferred.origin === 'undo') {\n      doc.setHistory(this.mirror.getHistory());\n      this.mirror.undo();\n    } else if (deferred.origin === 'redo') {\n      doc.setHistory(this.mirror.getHistory());\n      this.mirror.redo();\n    } else {\n      this.mirror.replaceRange(deferred.text, deferred.from, deferred.to, deferred.origin);\n    }\n\n    return this.mirror.getValue();\n  };\n\n  Controlled.prototype.componentDidMount = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return;\n\n    if (this.props.defineMode) {\n      if (this.props.defineMode.name && this.props.defineMode.fn) {\n        cm.defineMode(this.props.defineMode.name, this.props.defineMode.fn);\n      }\n    }\n\n    this.editor = cm(this.ref, this.props.options);\n    this.shared = new Shared(this.editor, this.props);\n    this.mirror = cm(function() {}, this.props.options);\n    this.editor.on('electricInput', function() {\n      _this.mirror.setHistory(_this.editor.getDoc().getHistory());\n    });\n    this.editor.on('cursorActivity', function() {\n      _this.mirror.setCursor(_this.editor.getDoc().getCursor());\n    });\n    this.editor.on('beforeChange', function(cm, data) {\n      if (_this.emulating) {\n        return;\n      }\n\n      data.cancel();\n      _this.deferred = data;\n      var originalData = _this.mirror.getValue();\n      var phantomChange = _this.mirrorChange(_this.deferred);\n      if (_this.props.onBeforeChange) _this.props.onBeforeChange(cm, _this.deferred, phantomChange, () => { \n        _this.mirror.setValue(originalData);\n      });\n    });\n    this.editor.on('change', function(cm, data) {\n      if (!_this.mounted) {\n        return;\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(_this.editor, data, _this.editor.getValue());\n      }\n    });\n    this.hydrate(this.props);\n    this.shared.apply(this.props);\n    this.applied = true;\n    this.mounted = true;\n    this.shared.wire(this.props);\n\n    if (this.editor.getOption('autofocus')) {\n      this.editor.focus();\n    }\n\n    if (this.props.editorDidMount) {\n      this.props.editorDidMount(this.editor, this.editor.getValue(), this.initCb);\n    }\n  };\n\n  Controlled.prototype.componentDidUpdate = function(prevProps) {\n    if (SERVER_RENDERED) return;\n    var preserved = {\n      cursor: null\n    };\n\n    if (this.props.value !== prevProps.value) {\n      this.hydrated = false;\n    }\n\n    if (!this.props.autoCursor && this.props.autoCursor !== undefined) {\n      preserved.cursor = this.editor.getDoc().getCursor();\n    }\n\n    this.hydrate(this.props);\n\n    if (!this.appliedNext) {\n      this.shared.applyNext(prevProps, this.props, preserved);\n      this.appliedNext = true;\n    }\n\n    this.shared.applyUserDefined(prevProps, preserved);\n    this.appliedUserDefined = true;\n  };\n\n  Controlled.prototype.componentWillUnmount = function() {\n    if (SERVER_RENDERED) return;\n\n    if (this.props.editorWillUnmount) {\n      this.props.editorWillUnmount(cm);\n    }\n  };\n\n  Controlled.prototype.shouldComponentUpdate = function(nextProps, nextState) {\n    return !SERVER_RENDERED;\n  };\n\n  Controlled.prototype.render = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return null;\n    var className = this.props.className ? 'react-codemirror2 ' + this.props.className : 'react-codemirror2';\n    return React.createElement('div', {\n      className: className,\n      ref: function ref(self) {\n        return _this.ref = self;\n      }\n    });\n  };\n\n  return Controlled;\n}(React.Component);\n\nexports.Controlled = Controlled;\n\nvar UnControlled = function(_super) {\n  __extends(UnControlled, _super);\n\n  function UnControlled(props) {\n    var _this = _super.call(this, props) || this;\n\n    if (SERVER_RENDERED) return _this;\n    _this.applied = false;\n    _this.appliedUserDefined = false;\n    _this.continueChange = false;\n    _this.detached = false;\n    _this.hydrated = false;\n\n    _this.initCb = function() {\n      if (_this.props.editorDidConfigure) {\n        _this.props.editorDidConfigure(_this.editor);\n      }\n    };\n\n    _this.mounted = false;\n\n    _this.onBeforeChangeCb = function() {\n      _this.continueChange = true;\n    };\n\n    return _this;\n  }\n\n  UnControlled.prototype.hydrate = function(props) {\n    var _this = this;\n\n    var _options = props && props.options ? props.options : {};\n\n    var userDefinedOptions = _extends({}, cm.defaults, this.editor.options, _options);\n\n    var optionDelta = Object.keys(userDefinedOptions).some(function(key) {\n      return _this.editor.getOption(key) !== userDefinedOptions[key];\n    });\n\n    if (optionDelta) {\n      Object.keys(userDefinedOptions).forEach(function(key) {\n        if (_options.hasOwnProperty(key)) {\n          if (_this.editor.getOption(key) !== userDefinedOptions[key]) {\n            _this.editor.setOption(key, userDefinedOptions[key]);\n          }\n        }\n      });\n    }\n\n    if (!this.hydrated) {\n      var doc = this.editor.getDoc();\n      var lastLine = doc.lastLine();\n      var lastChar = doc.getLine(doc.lastLine()).length;\n      doc.replaceRange(props.value || '', {\n        line: 0,\n        ch: 0\n      }, {\n        line: lastLine,\n        ch: lastChar\n      });\n    }\n\n    this.hydrated = true;\n  };\n\n  UnControlled.prototype.componentDidMount = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return;\n    this.detached = this.props.detach === true;\n\n    if (this.props.defineMode) {\n      if (this.props.defineMode.name && this.props.defineMode.fn) {\n        cm.defineMode(this.props.defineMode.name, this.props.defineMode.fn);\n      }\n    }\n\n    this.editor = cm(this.ref, this.props.options);\n    this.shared = new Shared(this.editor, this.props);\n    this.editor.on('beforeChange', function(cm, data) {\n      if (_this.props.onBeforeChange) {\n        _this.props.onBeforeChange(_this.editor, data, _this.editor.getValue(), _this.onBeforeChangeCb);\n      }\n    });\n    this.editor.on('change', function(cm, data) {\n      if (!_this.mounted || !_this.props.onChange) {\n        return;\n      }\n\n      if (_this.props.onBeforeChange) {\n        if (_this.continueChange) {\n          _this.props.onChange(_this.editor, data, _this.editor.getValue());\n        }\n      } else {\n        _this.props.onChange(_this.editor, data, _this.editor.getValue());\n      }\n    });\n    this.hydrate(this.props);\n    this.shared.apply(this.props);\n    this.applied = true;\n    this.mounted = true;\n    this.shared.wire(this.props);\n    this.editor.getDoc().clearHistory();\n\n    if (this.props.editorDidMount) {\n      this.props.editorDidMount(this.editor, this.editor.getValue(), this.initCb);\n    }\n  };\n\n  UnControlled.prototype.componentDidUpdate = function(prevProps) {\n    if (this.detached && this.props.detach === false) {\n      this.detached = false;\n\n      if (prevProps.editorDidAttach) {\n        prevProps.editorDidAttach(this.editor);\n      }\n    }\n\n    if (!this.detached && this.props.detach === true) {\n      this.detached = true;\n\n      if (prevProps.editorDidDetach) {\n        prevProps.editorDidDetach(this.editor);\n      }\n    }\n\n    if (SERVER_RENDERED || this.detached) return;\n    var preserved = {\n      cursor: null\n    };\n\n    if (this.props.value !== prevProps.value) {\n      this.hydrated = false;\n      this.applied = false;\n      this.appliedUserDefined = false;\n    }\n\n    if (!prevProps.autoCursor && prevProps.autoCursor !== undefined) {\n      preserved.cursor = this.editor.getDoc().getCursor();\n    }\n\n    this.hydrate(this.props);\n\n    if (!this.applied) {\n      this.shared.apply(prevProps);\n      this.applied = true;\n    }\n\n    if (!this.appliedUserDefined) {\n      this.shared.applyUserDefined(prevProps, preserved);\n      this.appliedUserDefined = true;\n    }\n  };\n\n  UnControlled.prototype.componentWillUnmount = function() {\n    if (SERVER_RENDERED) return;\n\n    if (this.props.editorWillUnmount) {\n      this.props.editorWillUnmount(cm);\n    }\n  };\n\n  UnControlled.prototype.shouldComponentUpdate = function(nextProps, nextState) {\n    var update = true;\n    if (SERVER_RENDERED) update = false;\n    if (this.detached && nextProps.detach) update = false;\n    return update;\n  };\n\n  UnControlled.prototype.render = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return null;\n    var className = this.props.className ? 'react-codemirror2 ' + this.props.className : 'react-codemirror2';\n    return React.createElement('div', {\n      className: className,\n      ref: function ref(self) {\n        return _this.ref = self;\n      }\n    });\n  };\n\n  return UnControlled;\n}(React.Component);\n\nexports.UnControlled = UnControlled;"],"sourceRoot":""}