{"version":3,"sources":["api-calls/user-api-calls.js","react-components/layout/SignedInLinks.js","react-components/layout/SignedOutLinks.js","react-components/fetchWrapper.js","react-components/layout/Header.js","react-components/auth/SignIn.js","react-components/auth/SignUp.js","react-components/auth/MainLogin.js","react-components/mainpage/SearchBar.js","react-components/mainpage/Sortby.js","react-components/mainpage/TitleCard.js","api-calls/question-api-calls.js","react-components/mainpage/MainPage.js","react-components/question-page/Editor.js","react-components/user/AnswerCard.js","react-components/user/Profile.js","letcode-code-runner/type.ts","letcode-code-runner/mapper.ts","letcode-code-runner/letcode-mapper.ts","react-components/post-question/type-popup.js","react-components/test-case/add-test-case.js","react-components/test-case/test-case-view-lg.js","react-components/post-question/create-question-testcase.js","api-calls/test-case-api-calls.js","react-components/post-question/create-question.js","react-components/question-page/QuestionDesc.js","img_source/placeholder.png","api-calls/answers-api-calls.js","react-components/question-page/Answers.js","react-components/question-page/TestCases.js","react-components/question-page/QuestionContainer.js","letcode-code-runner/code-runner.ts","react-components/answer-question/editor.js","letcode-code-runner/python/python-mapper.ts","letcode-code-runner/python/code-runner-python-impl.ts","letcode-code-runner/code-runner-global.ts","react-components/test-case/test-case-view-sm.js","react-components/answer-question/answer-question.js","App.js","reportWebVitals.js","index.js","react-codemirror2/index.js"],"names":["user","getCurrentUser","callback","a","fetch","method","headers","response","status","json","console","log","addCollection","question_id","removeCollection","loginUser","username","password","body","JSON","stringify","data","errors","usernameError","passwordError","signUpUser","SignedInLinks","this","props","className","NavLink","as","Link","to","NavDropdown","title","id","Item","onClick","then","err","logOutUser","window","location","reload","Component","SignedOutLinks","FetchWrapper","state","fetchComplete","authorized","loadData","setState","fetchData","onDataReady","private","React","cloneElement","children","history","replace","withRouter","Header","wrappedHeader","SignIn","handleChange","e","target","value","onSubmit","preventDefault","alert","push","Container","Row","Col","Form","Group","Label","Control","type","placeholder","onChange","Text","SignUp","confirmPwd","handleSubmit","MainLogin","SearchBar","Card","InputBase","theme","size","fill","Sortby","handleClickSortByPopular","handleClickSortByRecentPost","TitleCard","path","_id","name","desc","numUpVote","numAnswers","getQuestion","undefined","question","functionType","date","Date","toString","MainPage","questions","searchKey","sortByPopular","sort","b","sortByRecentPost","handleOnChange","map","obj","ind","wrappedMainPage","Editor","code","selectedLang","editor","cancel","onCodeChange","mustInclude","split","includes","lang","extraTheme","onBeforeChange","onEditorChange","bind","options","indentWithTabs","tabSize","indentUnit","lineWrapping","mode","getMode","lineNumbers","matchBrackets","matchhighlight","autoCloseBrackets","AnswerCard","changeCode","class","answer","index","href","votes","detail","language","readOnly","home","src","profilePic","alt","length","answers","cb","collections","Profile","fileUploadState","displayID","toggle","tab","ListGroup","action","wrappedProfile","Type","selfType","keyType","valueType","INT","FLOAT","STRING","BOOL","Error","VariableType","FunctionType","paramsType","returnType","CodeMapperAccumulator","vars","CodeMapper","int_","float_","string_","bool_","dict_","list_","input","acc","codeMap","Map","splitOutterMost","slice","kv","key_value","set","mapCode","codeList","x","TypeMapper","mapType","canBeMapped","isPair","str1","str2","l","str","by","strList","brackets","last","i","trim","pop","StringToLetCodeCodeMapper","val","test","f","String","parseInt","parseFloat","pairs","forEach","v","k","join","LetCodeTypeMapper","key","TypePopup","pushModal","keyTypeStr","valueTypeStr","getTypeselectionFrom","setKey","setValue","onComplete","onCancel","Modal","show","onHide","aria-labelledby","centered","closeButton","Title","Body","getBody","Footer","LIST","DICT","onSelected","defaultValue","selectedValue","o","AddtestCaseForm","upload","getEmptyVars","nameError","descError","userIn","error","isReturn","varsCp","field","update","newT","indexOf","varType","htmlFor","ty","updateVars","onAdd","local","required","rows","mapToGroup","result","inputs","output","isLocal","allPass","notEmpty","vt","formatted","message","AddTestCaseModal","TestCaseViewLarge","header","actualOutputHead","actualOutputVal","testCase","isModal","actualOutput","toDateString","numRun","TestCaseViewModal","mapStatus","TestCasePage","testCases","onBack","tc","newTc","aria-label","filter","aria-hidden","addTestCase","owner_id","CreateQuestion","description","functionName","returnDescription","currentInputName","currentInputDescription","currentInputType","page","testcases","popUps","handleAddInput","inputName","inputDescription","inputType","newPopUps","popLast","int","float","bool","string","checkVaild","postQuestion","getFunctionType","aria-describedby","handleTypeSelection","newInputs","postCurrentQuestion","QuestionDesc","collected","toggleCollect","strokeWidth","questionId","uid","Answers","answerList","upvotes","downvotes","warppedAnswers","getAnswers","TestCases","showAddTestCase","qid","onTestCaseAdd","wrappedTestCase","getTestCases","QuestionContainer","useState","activeTab","setActiveTab","useLocation","pathname","substring","lastIndexOf","sm","Nav","tabs","NavItem","classnames","active","TabContent","TabPane","tabId","offset","Button","color","warppedQuestionContainer","RunnerState","match","params","TestTracker","userCode","generatedCode","testCompletionTime","testPassed","TestCase","expectedOutput","onSuceess","onFailure","LetCodeToPythonCodeMapper","PythonTypeMapper","PythonLetCodeCodeMapperFuncName","PythonToLetCodeCodeMapper","testWarpingFunctionName","CoderunnerPythonImpl","UNINIT","interpreter_webworker","onStdout","onError","notifyRunnerState","currentTestTracker","resolveCurrentTracker","updateState","INITING","worker","default","addEventListener","onmessage","READY","handleMessage","onerror","handleError","postMessage","ERROR","COMPILING","s","testCasesInternalName","args","tcName","getVariableName","numTest","testWarperName","Promise","resolve","msg","RUNNING","testCaseNum","nameWanted","outputName","codeRuners","getCodeRunner","get","TestCaseViewSmall","role","xmlns","width","height","viewBox","d","selected","canSelect","_key","onSelect","checked","autoComplete","getHeader","getIconByStatus","AnswerQuestion","preferedLang","userId","supLang","func","langs","canSupportFunctionType","getSupportedLang","defaultLang","runner","setConsole","consoleOnMsg","consoleOnErr","starter","getStarterCode","store","parse","localStorage","getItem","localTestCase","setItem","supportedLang","concat","codeRunner","starterList","codeRunnerState","testCaseDetail","testCaseSortBy","testCasesView","runnerState","newLog","Math","max","messagesEnd","scrollIntoView","behavior","newCases","style","maxWidth","lastHistory","toLocaleString","onTestCaseSelect","testcase","h","runOnce","init","TestToRun","newTestCases","onTestOut","pass","nnTc","newTcs","info","runTest","codeTacker","newHistory","unshift","onLangSelectChange","getMustIncludeStarter","clear","ref","el","Tabs","activeKey","Tab","eventKey","DropdownButton","variant","Dropdown","mapTestCases","mapHistory","removeItem","getRecentTestInfo","disabled","toUpperCase","postAnswer","warppedAnswerQuestion","Flatten","getQuestionAllInfo","App","exact","component","QuestionPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","_typeof","Symbol","iterator","constructor","__extends","_extendStatics","setPrototypeOf","__proto__","Array","p","__","create","defineProperty","exports","UnControlled","Controlled","cm","require","SERVER_RENDERED","navigator","global","Helper","equals","y","_this","ok","keys","tx","every","Shared","delegateCursor","position","scroll","focus","doc","getDoc","setCursor","delegateScroll","coordinates","scrollTo","delegateSelection","ranges","setSelections","selection","cursor","autoScroll","getOption","applyNext","next","preserved","autoCursor","applyUserDefined","wire","prop","on","event","onBlur","onContextMenu","onCopy","onCursor","getCursor","onCursorActivity","onCut","onDblClick","onDragEnter","onDragLeave","onDragOver","onDragStart","onDrop","onFocus","lineNumber","gutter","onGutterClick","EditorChangeEvent","onInputRead","onKeyDown","onKeyHandled","onKeyPress","onKeyUp","onMouseDown","onPaste","line","element","onRenderLine","onScroll","getScrollInfo","onSelection","onTouchStart","onUpdate","from","onViewportChange","_super","applied","appliedNext","appliedUserDefined","deferred","emulating","hydrated","initCb","editorDidConfigure","mounted","hydrate","_options","userDefinedOptions","defaults","some","setOption","mirror","resolveChange","initChange","lastLine","lastChar","getLine","replaceRange","ch","clearHistory","origin","undo","redo","text","getValue","mirrorChange","setHistory","getHistory","componentDidMount","defineMode","fn","shared","originalData","phantomChange","editorDidMount","componentDidUpdate","prevProps","componentWillUnmount","editorWillUnmount","shouldComponentUpdate","nextProps","nextState","createElement","self","continueChange","detached","onBeforeChangeCb","detach","editorDidAttach","editorDidDetach"],"mappings":"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","file":"static/js/main.d22db01e.chunk.js","sourcesContent":["\nvar user = null\n\nexport async function getCurrentUser(callback) {\n    if (user) { \n        callback(user, true);\n    }\n\n    try {\n      const response = await fetch(\"/api/user/\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n    if (response.status != 200) { \n        callback(null, false);\n        return;\n    }\n    user = await response.json();  \n    callback(user);\n    } catch (err) {\n        console.log(err);\n        callback(null, false)\n    }\n}\n\n\n\n\nexport async function getUserPostHistory(userId, callback) {\n    try{\n        const response = await fetch('/api/user/' + userId + \"/postHistory\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json'}\n        })\n        const data = await response.json()\n        callback(data);\n        return \n    }catch(err){\n        console.log(err)\n    }\n}\n\n\nexport async function getUserCollection(userId, callback) {\n    console.log(\"enter get user collection\")\n    try{\n        const response = await fetch('/api/user/' + userId + \"/collections\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json'}\n        })\n        const data = await response.json()\n        callback(data);\n        return \n    }catch(err){\n        console.log(err)\n    }\n}\n\nexport async function addCollection(question_id) {\n    fetch('/api/user/' + question_id + '/collect', {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' }\n    })\n}\n\nexport async function removeCollection(question_id) {\n    fetch('/api/user/' + question_id + '/uncollect', {\n        method: 'PATCH',\n        headers: { 'Content-Type': 'application/json' }\n    })\n}\n\nexport const loginUser = async (username, password) => {\n\n    try {\n        const response = await fetch('/api/login', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        const data = await response.json()\n        if (data.errors) {\n            return {errors: {usernameError: data.errors.username, passwordError: data.errors.password}}\n        }\n        if (data.user) {\n            // check user type \n            user = data.user\n            return data\n        }\n    } catch (err) {\n        console.log(err)\n    }\n    \n}\n\nexport const signUpUser = async (username, password) => {\n    try {\n        const response = await fetch('/api/signup', {\n            method: 'POST',\n            body: JSON.stringify({ username, password }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        const data = await response.json()\n        user = data.user;\n        return data\n    } catch (err) {\n        console.log(err)\n    }\n    \n}\n\nexport const logOutUser = () => {\n    try {\n        fetch('/api/logout',\n            {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' }\n            })\n            .then(() => { \n            user = null;\n        })\n        \n    } catch (err) {\n        console.log(err)\n    }\n    \n}\n\n","import { NavLink, NavDropdown } from 'react-bootstrap'\n// import { getUser } from '../../api_code/GetFromBackend'\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { logOutUser } from \"../../api-calls/user-api-calls\"\n\n\nclass SignedInLinks extends Component {\n    render() {\n        const { user } = this.props;\n        return (\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                    <NavLink as={Link} to=\"/newquestion\">New Question</NavLink>\n                </li>\n                <NavDropdown title={'Hi! ' + user.username} id=\"basic-nav-dropdown\" className=\"active\">\n                    <NavDropdown.Item as={Link} to=\"/myprofile\">My profile</NavDropdown.Item>\n                    {/* <NavDropdown.Item onClick={()=>handleLogout(this.props.user.username)}>Log out</NavDropdown.Item> */}\n                    <NavDropdown.Item onClick={() => {\n                        logOutUser()\n                        window.location.reload();\n                    }}>Log out</NavDropdown.Item>\n                </NavDropdown>\n            </ul>\n        )\n    }\n}\n\n\nexport default  SignedInLinks","import React, { Component } from 'react'\nimport {NavLink} from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst SignedOutLinks = (props) => {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n                <NavLink as={Link} to=\"/signin_up\">Sign in/Sign up</NavLink>\n        </li>\n        </ul>\n    )\n}\nexport default SignedOutLinks","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass FetchWrapper extends React.Component {\n\n    state = {\n        data: null,\n        fetchComplete: false,\n        authorized: false\n    };\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    onDataReady(data, authorized) {\n        this.setState({\n            data: data,\n            fetchComplete: true,\n            authorized: authorized\n        });\n    }\n\n    loadData() {\n        this.props.fetchData((data, authorized) => this.onDataReady(data, authorized));\n    }\n\n    render() {\n        if (this.state.fetchComplete) {\n            if (!this.props.private || this.state.authorized) {\n                return React.cloneElement(this.props.children, { data: this.state.data, history: this.props.history, loadData: () => this.loadData() });\n            }\n            this.props.history.replace(\"/signin_up\");\n        }\n        return null;\n    }\n}\n\nexport default withRouter(FetchWrapper);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { NavLink } from 'react-bootstrap'\r\nimport { getCurrentUser } from '../../api-calls/user-api-calls'\r\nimport FetchWrapper from \"../fetchWrapper\"\r\n\r\nconst Header = (props) => {\r\n    return ( \r\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light py-1\">\r\n        \r\n        <div className=\"navbar navbar-expand-md navbar-light bg-light\">\r\n            <NavLink className=\"navbar-brand mx-auto\" as={Link} to=\"/\">LetCode</NavLink>\r\n        </div>\r\n        <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            {props.data ? <SignedInLinks user={props.data}></SignedInLinks> : <SignedOutLinks></SignedOutLinks>}\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nfunction wrappedHeader() {\r\n  return <FetchWrapper fetchData={getCurrentUser}><Header /></FetchWrapper>;\r\n}\r\n\r\n\r\n\r\nexport default wrappedHeader;","import React, { Component } from 'react'\nimport { Form, Container, Row, Col, ThemeProvider } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport { loginUser } from '../../api-calls/user-api-calls'\nimport './MainLogin.css'\nimport  wrappedHeader from '../layout/Header'\n\nclass SignIn extends Component {\n    state = {\n        username: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault()\n        const data = await loginUser(this.state.username, this.state.password)\n        if (data.errors){\n            alert(\"error\")\n        }\n        else if (data.user) {\n            wrappedHeader()\n            this.props.history.push(\"/\");\n            window.location.reload();\n            \n        }\n    }\n\n    render() {\n        return (\n            <div className=\"MainLogin-center\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h3>Sign In</h3>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Username\" id=\"username\" onChange={this.handleChange} />\n                                <Form.Text className=\"text-muted\">\n                                    We'll never share your email with anyone else.\n                        </Form.Text>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" id=\"password\" onChange={this.handleChange} />\n                            </Form.Group>\n\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <button className=\"blue\" type=\"submit\" onClick={this.onSubmit}>\n                            Sign In\n                    </button>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(SignIn)","import React, { Component } from 'react'\nimport { Form, Container, Row, Col } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport { signUpUser } from '../../api-calls/user-api-calls'\nimport './MainLogin.css'\n\nclass SignUp extends Component {\n    state = {\n        username: '',\n        password: '',\n        confirmPwd: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = async (e) => {\n        e.preventDefault()\n        if (!this.state.username  || !this.state.password || !this.state.confirmPwd) {\n            alert(\"Missing required information.\")\n        } \n        else if (this.state.password !== this.state.confirmPwd) {\n            alert(\"Confirmed password differ from the password.\")\n        } \n        // else if (this.state.password.length <= 8){\n        //     alert(\"Password need to be no less than 8 characters!\")\n        // }\n        else {\n            // let user = {\n            //     username: this.state.username,\n            //     password: this.state.password,\n            //     intro: \"hi\",\n            //     profilePic: '../../assets/placeholder.png'\n            // }\n            e.preventDefault()\n            let data = await signUpUser(this.state.username, this.state.password)\n            if (data.user) {\n                this.props.history.push(\"/\");\n                window.location.reload();\n            }\n            else { \n                alert(data.errors.username + \"\\n\" + data.errors.password);\n            }\n        }\n        \n    }\n\n    render() {\n        return (\n            <div className=\"MainLogin-center\">\n                <Container>\n                    <Row>\n                        <Col>\n                            <h3>Sign Up</h3>\n                        </Col>\n\n                    </Row>\n                    <Row>\n\n                        <Col>\n                            <p>Please fill in this form to create an account!</p>\n                        </Col>\n                    </Row>\n\n                    <Form>\n                        <Form.Row>\n                            <Col>\n                                <Form.Control placeholder=\"Username\" id=\"username\" onChange={this.handleChange} />\n                            </Col>\n                        </Form.Row>\n                    </Form>\n                    <br />\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" id=\"password\" onChange={this.handleChange} />\n                                <br></br>\n                                <Form.Control type=\"password\" placeholder=\"Confirm Password\" id=\"confirmPwd\" onChange={this.handleChange} />\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <button className=\"blue\" type=\"submit\" onClick={this.handleSubmit} >\n                            Sign Up\n                        </button>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(SignUp)","import React from 'react'\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst MainLogin = () => {\n    return (\n        <Container>\n            <Row>\n                <Col><SignIn></SignIn></Col>\n                <Col><SignUp></SignUp></Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default MainLogin","import React, { Component } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {Search, search} from '@icon-park/react'\nimport './cards.css'\n\n\nclass SearchBar extends Component {\n    render() {\n        return (\n            <Card className=\"shadow p-2 bg-white\" className=\"search-bar-background\"> \n            <InputBase className=\"search-input\"\n                placeholder=\"Search Question\"/>\n            <Search className=\"search-icon\" theme=\"outline\" size=\"30\" fill=\"#333\" onClick={()=>{console.log(\"search\")}}></Search>\n\n            </Card>        \n        )\n    }\n}\nexport default SearchBar;","import React, { Component } from 'react'\nimport { NavDropdown } from 'react-bootstrap'\n\n\nclass Sortby extends Component {\n    render() {\n        return (\n            <div>\n                <NavDropdown title=\"Sort by\" id=\"basic-nav-dropdown\" className=\"active\">\n                    <NavDropdown.Item onClick={this.props.handleClickSortByPopular}>Most Popular</NavDropdown.Item>\n                    <NavDropdown.Item onClick={this.props.handleClickSortByRecentPost}>Recently post</NavDropdown.Item>\n                </NavDropdown>\n            </div>       \n        )\n    }\n}\nexport default Sortby;","import React from 'react'\n// import { Star} from '@icon-park/react'\nimport { NavLink } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nfunction TitleCard(props){\n\n  const path ='/' + props.data._id + '/detail';\n\n    return (\n        <div className=\"card\"> \n        {/* <div className=\"block star-icon mystar\">\n          <Star onClick={() => changeCollection(props.data._id)} theme={collection ? \"filled\" : \"outline\" } size=\"30\" fill={collection ?  \"orange\" : \"#333\" }/></div>   */}\n          \n        <div className=\"card-body\">\n            <div className = \"col\">\n            <div className =\"row\">     \n              <NavLink as={Link} to={path}>{props.data.name}</NavLink>\n            </div>   \n            <br></br>\n            <div className=\"question-description\"> {props.data.desc} </div>\n            <br></br>\n            <div className=\"row\">\n              <div className=\"block upvote-number\">upvotes: {props.data.numUpVote}</div>\n              <div className=\"block reply-number\">answers: {props.data.numAnswers}</div>\n            </div>\n            </div>  \n          </div>       \n      </div>\n)\n}\n\nexport default TitleCard;\n","\n\nexport async function getQuestion(callback, id) {\n    if (id === undefined) { \n        const response = await fetch('/api/question/getAllQuestion', {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n        const data = await response.json()\n        callback(data, true)\n        return;\n    }\n    try {\n        const response = await fetch('/api/question/' + id, {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n        const data = await response.json()\n        callback(data, true)\n    }catch (err){\n        console.log(err)\n        callback(null, true)\n    }\n}\n\n//TODO:\nexport async function postQuestion(question, callback) { \n    try {\n        const response = await fetch('/api/question/add_question', {\n            method: 'POST',\n            body: JSON.stringify({\n                functionType: JSON.stringify(question.functionType),\n                name: question.name,\n                desc: question.desc,\n                date: new Date().toString(),\n                numUpVote: 0,\n                numAnswers: 0\n            }),\n            headers: { 'Content-Type': 'application/json' }\n        })\n        const data = await response.json()\n        callback(data, true)\n    }catch (err){\n        console.log(err)\n    }\n}\n\n\nexport async function getQuestionAllInfo(id, callback) {\n    try {\n        const response = await fetch('/api/question/' + id + '/allInfo', {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json'}\n        })\n        if (response.status !== 200) { \n            callback(null, false);\n            return;\n        }\n        const data = await response.json();\n        callback(data, true)\n    }catch (err){\n        console.log(err)\n    }\n}\n","import React, { Component } from 'react'\nimport SearchBar from './SearchBar';\nimport Sortby from './Sortby.js';\nimport TitleCard from './TitleCard';\nimport DailyQuestionCard from './DailyQuestionCard';\nimport { getQuestion } from '../../api-calls/question-api-calls'\nimport FetchWrapper from \"../fetchWrapper\"\nimport \"./MainPage.css\";\nimport { Search } from '@icon-park/react';\n\nclass MainPage extends Component {\n    state = {\n        questions: this.props.data,\n        searchKey: ''\n    }\n\n    handleClickSortByPopular = () => {\n        const sortByPopular = this.state.questions.sort(function(a, b){return b.numUpVote - a.numUpVote});\n        this.setState({\n            questions: sortByPopular\n        })\n    }\n\n    handleClickSortByRecentPost = () => {\n        const sortByRecentPost= this.state.questions.sort(function(a, b){return new Date(b.date) - new Date(a.date)});\n        this.setState({\n            questions: sortByRecentPost\n        })\n    }\n\n    handleOnChange = () =>{\n        \n    }\n    \n\n    render() {\n        return (\n            <div>\n                {/* <h1 className=\"question-of-the-day-title\">Question of the DAYYY</h1>\n                <div className=\"question-of-the-day-card\">\n                    <DailyQuestionCard items={{ \"id\": 2, \"title\": \"Longest Substring Without Repeating Characters\", \"description\": \"Given a string s, find the length of the longest substring without repeating characters.\" }} className=\"card\" />\n                </div> */}\n                <div className=\"search-bar\"><SearchBar></SearchBar></div>\n                <div className=\"row filter-rows\">\n                <div className=\"block sortby-filter\"><Sortby handleClickSortByPopular={this.handleClickSortByPopular} handleClickSortByRecentPost={this.handleClickSortByRecentPost}></Sortby></div>\n                </div>\n\n                {this.props.data.map((obj, ind) => <div className=\"question-card\" key={ind}><TitleCard data={obj} className=\"card\"/></div>)}\n            </div>\n        \n        )\n    }\n}\n\n\nfunction wrappedMainPage() {\n    return <FetchWrapper fetchData={getQuestion}><MainPage/></FetchWrapper>;\n}\n\n\nexport default wrappedMainPage;","import React from 'react';\nimport { Controlled as ControlledEditor } from '../../react-codemirror2/index'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/python/python'\nimport 'codemirror/mode/clike/clike'\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/search/match-highlighter'\n\n\nclass Editor extends React.Component {\n    \n    code = \"\"\n    getMode(selectedLang) { \n        if (selectedLang === \"Python\") {\n            return \"python\";\n        }\n        if (selectedLang === \"C\") { \n            return \"text/x-csrc\";\n        }\n        if (selectedLang  === \"C++\") { \n            return \"text/x-c++src\";\n        }\n        if (selectedLang  === \"Java\") {\n            return \"text/x-java\";\n        }\n        return \"\";\n    }\n\n    onEditorChange(editor, data, value, cancel) { \n        if (!this.props.onCodeChange || (this.props.mustInclude && !value.split(\"\\n\").includes(this.props.mustInclude))) {\n            cancel();\n        }\n        else { \n            this.props.onCodeChange(value);\n        }\n    }\n\n\n    render() { \n        const { code, lang, extraTheme } = this.props\n        return (\n            <div>\n                <ControlledEditor\n                    className=\"border border-gray\"\n                    onBeforeChange={this.onEditorChange.bind(this)}\n                    value={code}\n                    options={{\n                        indentWithTabs: true,\n                        tabSize: 4,\n                        indentUnit: 4,\n                        lineWrapping: true,\n                        mode: this.getMode(lang),\n                        lineNumbers: true,\n                        matchBrackets: true,\n                        matchhighlight: true,\n                        autoCloseBrackets: true,\n                        theme: \"default \" + (extraTheme ? extraTheme : \"\")\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Editor;","import React, { Component } from 'react'\nimport { Card, ListGroup } from 'react-bootstrap'\nimport Editor from '../question-page/Editor'\nimport \"./profile.css\"\n\n\nclass AnswerCard extends Component {\n    changeCode = (code) => {\n        return\n    }\n\n    render() {\n        return (\n            <div class=\"list-group\">\n                {this.state.props.map((answer, index) => (\n                    <a key={ index } href={\"/\" + answer._id + '/detail'} class=\"list-group-item list-group-item-action flex-column align-items-start\">\n                        <div class=\"d-flex w-100 justify-content-between\">\n                            <h5 class=\"mb-1\">Go to question</h5>\n                            <small>Votes: {answer.votes}</small>\n                        </div>\n                        <Editor\n                            lang={answer.detail.language}\n                            changeCode={this.changeCode}\n                            code={answer.detail.code}\n                            readOnly={true}\n                        >\n                        </Editor>\n                        <small>{answer.detail.language}</small>\n                    </a>\n                )\n                )}\n\n            </div>\n        )\n        \n    }  \n    \n}\n\nexport default AnswerCard \n","import React, { Component } from 'react'\nimport {ListGroup} from 'react-bootstrap'\nimport { getCurrentUser} from '../../api-calls/user-api-calls'\nimport {getQuestion} from '../../api-calls/question-api-calls'\nimport TitleCard from '../mainpage/TitleCard'\nimport AnswerCard from './AnswerCard'\nimport FetchWapper from \"../fetchWrapper\"\nimport \"./profile.css\"\n\n\n\nfunction home(user) {\n    return (\n        <div className='col-10'>\n            <div className='row-3'>\n                <img className='profileImg' src={user.profilePic} alt=\"profile\"></img>\n                <h3 className='text-center'>Welcome back, {user.username}</h3>\n            </div>\n            <div className='row-1'>\n            </div>\n            <div className='row-6'>\n                <div className='text-center'>\n                    <h4>Number of questions: {user.questions.length} </h4>\n                    <h4>Number of anwers: {user.answers.length} </h4>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nfunction questions(user) {\n    return (\n        <div className='col-10'>\n            {user.questions.map((question, index) => (\n                <FetchWapper key={index} fetchData={(cb) => getQuestion(cb, question)}><TitleCard/></FetchWapper>\n            )\n            )}\n            \n        </div>\n    )\n}\n\nfunction answers(user) {\n    return (\n        <div className='col-10'>\n            {user.answers.map((answer, index) => (\n                <FetchWapper key={index} fetchData={(cb) => getQuestion(cb, answer.question)}><AnswerCard/></FetchWapper>\n            )\n            )}\n            \n        </div>\n    )\n}\n\n\nfunction collections(user) {\n    return (\n        <div className='col-10'>\n             {user.collections.map((question, index) => (\n                <FetchWapper key={index} fetchData={(cb) => getQuestion(cb, question)}><TitleCard/></FetchWapper>\n            )\n            )}\n        </div>\n    )\n}\n\n\nclass Profile extends Component {\n    state = {\n        fileUploadState: \"\",\n        displayID: '1',\n    }\n\n\n    render() {\n        const user = this.props.data;\n        const toggle = tab => {\n            if (this.state.displayID !== tab){\n                this.setState({\n                    displayID: tab\n                })\n            };\n        }\n        return (\n            <div className=\"profile-container\">\n                <div className=\"row-full-screen\">\n                    <div className=\"col-2\">\n                        <ListGroup>\n                            <ListGroup.Item></ListGroup.Item>\n                            <ListGroup.Item action onClick={() =>  toggle('1')}>\n                                Home\n                            </ListGroup.Item>\n                            <ListGroup.Item action onClick={() => toggle('2')}>\n                                My questions\n                            </ListGroup.Item>\n                            <ListGroup.Item action onClick={() => toggle('3')}>\n                                My answers\n                            </ListGroup.Item>\n                            <ListGroup.Item action onClick={() => toggle('4')}>\n                                Collections\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </div>\n                    {this.state.displayID === '1' && home(user)}\n                    {/* {this.state.displayID === '2' && personalInfo(this.props.data)} */}\n                    {this.state.displayID === '2' && questions(user)}\n\n                    {/* {this.state.displayID === '2' && <FetchWapper fetchData={(cb) => getUserPostHistory(user._id, cb)}><PostHistroy/></FetchWapper>} */}\n                    {this.state.displayID === '3' && answers(user)}\n                    {/* {this.state.displayID === '4' && <FetchWapper fetchData={(cb) => getUserCollection(user.data._id, cb)}><MyCollection/></FetchWapper>} */}\n                    {this.state.displayID === '4' && collections(user)}\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction wrappedProfile() {\n    return <FetchWapper fetchData={getCurrentUser}><Profile /></FetchWapper>;\n}\n\nexport default wrappedProfile","\nexport class Type { \n    static readonly INT: Type = new Type(\"int\");\n    static readonly FLOAT: Type = new Type(\"float\");\n    static readonly STRING: Type = new Type(\"string\");\n    static readonly BOOL: Type = new Type(\"bool\");\n    static DICT(keyType: Type, valueType: Type): Type { \n        if (![Type.INT, Type.FLOAT, Type.STRING, Type.BOOL].includes(keyType)) { \n            throw new Error(\"key must be immutable type\");\n        }\n        if (!keyType || !valueType) { \n            throw new Error(\"key and value type must be specified!\");\n        }\n        return new Type(\"dict\", keyType, valueType);\n    }\n    static LIST(valueType: Type): Type { \n        if (!valueType) {\n            throw new Error(\"value type must be specified!\");\n        }\n        return new Type(\"list\", undefined, valueType);\n    }\n\n    private constructor(public readonly selfType: string, public readonly keyType?: Type , public readonly valueType?: Type) { } \n}\n\n\nexport class VariableType {\n    constructor(public readonly name: string, public readonly type: Type) { }\n}\n\nexport class FunctionType {\n    constructor(public readonly name: string, public readonly paramsType: VariableType[], public readonly returnType: VariableType) { }\n}\n","import { Type } from \"./type\"\n\nexport class CodeMapperAccumulator {\n    vars: string[] = [];\n    code: string = \"\"\n}\n\n// The accumlator(acc) can be useful if one line initialization of val is not supported by the target language\n// i.e let's say user's input is {\"a\": 1, \"b\": 2} and the target language don't support one line init of dict\n// we can only init a empty dict first, then insert all entries. Therefore we need append \"user_dict = new dict()\",\n// \"user_dict.insert(\"a\", 1)\" \"user_dict.insert(\"b\", \"2\")\" to acc.code; Append \"user_dict\" to acc.vars and return \n// \"user_dict\". However, if one line init is supported we can just return \"new dict {\"a\": 1, \"b\": 2}\" and don't use \n// the accmulator at all.\nexport class CodeMapper {\n    [key: string]: any;\n    constructor(public int_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public float_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public string_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public bool_?: (val: string, acc: CodeMapperAccumulator) => string,\n        public dict_?: (val: Map<string, string>, acc: CodeMapperAccumulator) => string,\n        public list_?: (val: string[], acc: CodeMapperAccumulator) => string,\n    ) { }\n\n    mapCode(input: string, type: Type, acc?: CodeMapperAccumulator): string {\n        if (!acc)\n            acc = new CodeMapperAccumulator();\n        if (input.length === 0)\n            throw new Error(\"input is empty\");\n\n        if (!this[type.selfType + \"_\"])\n            throw new Error(type.toString() + \" is not supported\");\n\n        if (type.selfType === \"dict\") {\n            if (input[0] !== \"{\" || input[input.length - 1] !== \"}\")\n                throw new Error(\"expect dict, got \" + input);\n            const codeMap = new Map<string, string>();\n            if (input.length === 2) \n                return this.dict_!(codeMap, acc);\n            for (let kv of splitOutterMost(input.slice(1, -1), \",\")) {\n                const key_value = splitOutterMost(kv, \":\");\n                if (key_value.length !== 2)\n                    throw new Error(\"expect key value pair but got \" + kv);\n                codeMap.set(this.mapCode(key_value[0], type.keyType!, acc),\n                    this.mapCode(key_value[1], type.valueType!, acc));\n            }\n            return this.dict_!(codeMap, acc);\n        }\n        if (type.selfType === \"list\") {\n            if (input[0] !== \"[\" || input[input.length - 1] !== \"]\")\n                throw new Error(\"expect list, got \" + input);\n            if (input.length === 2) \n                return this.list_!([], acc);\n            const codeList = splitOutterMost(input.slice(1, -1), \",\")\n                .map<string>(x => this.mapCode(x, type.valueType!, acc));\n            return this.list_!(codeList, acc);\n        }\n        return this[type.selfType + \"_\"](input, acc);\n    }\n}\n\nexport class TypeMapper {\n    [key: string]: any;\n    constructor(public int_?: () => string,\n        public float_?: () => string,\n        public string_?: () => string,\n        public bool_?: () => string,\n        public dict_?: (key: string, value: string) => string,\n        public list_?: (value: string) => string,\n    ) { }\n\n    mapType(type: Type): string {\n        if (!this[type.selfType + \"_\"])\n            throw new Error(type.selfType + \" is not supported\");\n\n        if (type.selfType === \"dict\") {\n            return this.dict_!(this.mapType(type.keyType!), this.mapType(type.valueType!));\n        }\n        if (type.selfType === \"list\") {\n            return this.list_!(this.mapType(type.valueType!));\n        }\n        return this[type.selfType + \"_\"]();\n    }\n\n    canBeMapped(type: Type): boolean {\n        if (type.selfType === \"dict\") {\n            return this.dict_ !== undefined && this.canBeMapped(type.keyType!) && this.canBeMapped(type.valueType!);\n        }\n        if (this.selfType === \"list\") {\n            return this.list_ !== undefined && this.canBeMapped(type.valueType!);\n        }\n        return this[type.selfType + \"_\"] !== undefined;\n    }\n}\n\nfunction isPair(str1: string, str2: string) { \n    let l = [str1, str2];\n    if (l.includes(\"{\") && l.includes(\"}\"))\n        return true;\n    if (l.includes(\"[\") && l.includes(\"]\"))\n        return true;\n    if (l.includes(\"(\") && l.includes(\")\"))\n        return true;\n    return false;\n}\n\nfunction splitOutterMost(str: string, by: string): string[] {\n    const strList: string[] = [];\n    const brackets: string[] = [];\n    let last = 0;\n    for (let i = 0; i < str.length; i++) { \n        if (str[i] === by && brackets.length === 0) { \n            strList.push(str.slice(last, i).trim());\n            last = i + 1;\n        }\n        else if ([\"[\", \"]\", \"{\", \"}\", \"(\", \")\"].includes(str[i])) {\n            if (isPair(str[i], brackets[brackets.length - 1]))\n                brackets.pop()\n            else brackets.push(str[i]);\n        }\n    }\n    strList.push(str.slice(last).trim());\n    return strList\n}\n","import { CodeMapper, TypeMapper } from \"./mapper\"\n\n// this is an example of how code mapping work, we are mapping user's input to LetCode standard form(it's syntex is similar to python)\n// It checkes if user's input can be mapped to this type during the mapping.\nconst mapDict = (val: Map<string, string>) => {\n    const pairs: String[] = []\n    val.forEach((v, k) => pairs.push(k + \":\" + v))\n    return \"{\" + pairs.join(\",\") + \"}\"\n}\n\nconst mapList = (val: string[]) => {\n    return \"[\" + val.join(\",\") + \"]\";\n}\n\nconst mapInt = (val: string) => {\n    if (!(/^\\-?(0|[1-9]\\d*)$/).test(val))\n        throw new Error(\"expect int, got \" + val);\n    return val\n}\n\nconst mapFloat = (val: string) => {\n    if (!(/^\\-?[\\d]*(\\.[\\d]+)?$/g).test(val))\n        throw new Error(\"expect float, got \" + val);\n    const f = String(parseInt(val));\n    if (f === val)\n        return f + \".0\";\n    return String(parseFloat(val));\n}\n\nconst mapString = (val: string) => {\n    if (val.length < 2 || (val[0] !== val[val.length - 1])|| (val[0] !== \"\\'\" && val[0] !== \"\\\"\"))\n        throw new Error(\"expect string, got \" + val);\n    return \"'\" + val.slice(1, -1) + \"'\";\n}\n\nconst mapBool = (val: string) => {\n    if (![\"True\", \"False\", \"true\", \"false\"].includes(val))\n        throw new Error(\"expect boolean, got \" + val);\n    if ([\"True\", \"true\"].includes(val))\n        return \"true\";\n    return \"false\";\n}\n\nconst StringToLetCodeCodeMapper = new CodeMapper(mapInt, mapFloat, mapString, mapBool, mapDict, mapList)\n \n// This is the type annotations mapping of LetCode standard form\nconst LetCodeTypeMapper =\n    new TypeMapper(\n        () => \"int\",\n        () => \"float\",\n        () => \"string\",\n        () => \"bool\",\n        (key, val) => \"dict<\" + key + \",\" + val + \">\",\n        (val) => \"list<\" + val + \">\"\n    )\n\nexport { StringToLetCodeCodeMapper, LetCodeTypeMapper }\n \n","import React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { Type } from '../../letcode-code-runner/type'\nimport { LetCodeTypeMapper } from \"../../letcode-code-runner/letcode-mapper\"\n\n\nclass TypePopup extends React.Component {\n\n    state = {\n        keyType: null,\n        valueType: null,\n    }\n\n    setKey(e) {\n        this.setState({\n            keyType: {\n                \"int\": Type.INT,\n                \"float\": Type.FLOAT,\n                \"bool\": Type.BOOL,\n                \"string\": Type.STRING\n            }[e.target.value]\n        });\n    }\n\n    setValue(e, pushModal) {\n        if (e.target.value === \"dict\" || e.target.value === \"list\") {\n            pushModal(e.target.value, value => {\n                this.setState({ valueType: value });\n            });\n        }\n        else { \n            this.setState({\n                valueType: {\n                    \"int\": Type.INT,\n                    \"float\": Type.FLOAT,\n                    \"bool\": Type.BOOL,\n                    \"string\": Type.STRING\n                }[e.target.value]\n            });\n        }\n        \n    }\n\n    getBody(type, pushModal) {\n        const keyTypeStr = this.state.keyType ? LetCodeTypeMapper.mapType(this.state.keyType) : \"selected\" \n        const valueTypeStr = this.state.valueType ? LetCodeTypeMapper.mapType(this.state.valueType) : \"selected\"\n        if (type === \"dict\") {\n            return (\n                <div>\n                    {getTypeselectionFrom(this.setKey.bind(this), \"key type\", keyTypeStr, [\"int\", \"float\", \"string\", \"bool\"])}\n                    {getTypeselectionFrom(e => this.setValue(e, pushModal), \"value type\", valueTypeStr, [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"])}\n                </div>\n            )\n        }\n        return getTypeselectionFrom(e => this.setValue(e, pushModal), \"element type\", valueTypeStr, [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"] )\n    }\n   \n    render() {\n\n        const {\n            type,\n            onComplete,\n            onCancel,\n            pushModal\n        } = this.props;\n\n\n        return (\n            <Modal\n                show={true}\n                size=\"md\"\n                onHide={onCancel}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        {type === \"dict\" ? \"Specify key and value type of dict\" : \"Specify value type of list\"}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.getBody(type, pushModal)}\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"blue bg-secondary\" onClick={onCancel}>\n                        Close\n                    </button>\n                    <button className=\"blue btn btn-primary\" onClick={() => { \n                        if (type === \"list\") {\n                            onComplete(Type.LIST(this.state.valueType));\n                        }\n                        else if (type === \"dict\") { \n                            onComplete(Type.DICT(this.state.keyType, this.state.valueType));\n\n                        }\n                        onCancel();\n                    }}>\n                        Done\n                    </button>\n                </Modal.Footer>\n            </Modal>)\n    }\n}\n\nfunction getTypeselectionFrom(onSelected, defaultValue, selectedValue, options, id) {\n    if (selectedValue !== \"selected\" && !options.includes(selectedValue)) { \n        options.push(selectedValue);\n    }\n    return (\n        <div className=\"col col-md-4\">\n            <select className=\"custom-select\" id={id} onChange={onSelected} value={selectedValue}>\n                <option value=\"selected\">{defaultValue}</option>\n                {options.map((o, i) => <option key={i} value={o}>{o}</option> )}\n            </select>\n        </div>\n    )\n}\n\n\nexport { TypePopup, getTypeselectionFrom };\n","import React from \"react\"\nimport { Modal } from \"react-bootstrap\"\nimport { StringToLetCodeCodeMapper, LetCodeTypeMapper} from \"../../letcode-code-runner/letcode-mapper\"\n\n\n\nclass AddtestCaseForm extends React.Component { \n    constructor(props) { \n        super(props)\n        this.state = {\n            upload: false,\n            vars: this.getEmptyVars(),\n            name: \"\",\n            nameError: \"\",\n            desc: \"\",\n            descError: \"\",\n            upload: false\n        }\n    }\n\n    getEmptyVars() { \n        const vars = this.props.functionType.paramsType.map((x) => {\n          return {\n            name: x.name,\n            type: x.type,\n            userIn: \"\",\n            error: \"\",\n          };\n        });\n        vars.push({\n           name: \"return\",\n           type: this.props.functionType.returnType.type,\n           userIn: \"\",\n           error: \"\",\n           isReturn: true,\n         });\n        return vars\n    }\n\n    updateVars(varsCp, target, field, update) { \n        let newT = { ...target };\n        newT[field] = update;\n        if (field !== \"error\")  \n            newT.error = \"\";\n        varsCp[this.state.vars.indexOf(target)] = newT\n        return varsCp;\n    }\n\n\n    mapToGroup(varType, ind) { \n        return (\n            <div className=\"form-group\" key={ind}>\n                <label htmlFor={varType.name}>{varType.name + \": \" + LetCodeTypeMapper.mapType(varType.type)}</label>\n                <input type=\"text\" className={\"form-control \" + (varType.error !== \"\" ? \"is-invalid\" : \"\")} id={varType.name + (!varType.isReturn ? \"-input\" : \"\")} onChange={(e) => {\n                    const varsCp = [...this.state.vars];\n                    for (let ty of this.state.vars) {\n                        if (ty.name + \"-input\" === e.target.id || (e.target.id === \"return\" && ty.name === \"return\")) {\n                            this.setState({ vars: this.updateVars(varsCp, ty, \"userIn\", e.target.value) });\n                            return;\n                        }\n                    }\n                }} value={this.state.vars[ind].userIn}/>\n                {varType.error !== \"\" ?\n                    <div className=\"text-danger small\">\n                        {varType.error}\n                    </div> : \"\"\n                }\n            </div>\n        );\n    }\n\n    render() {\n        const { functionType, onAdd, local } = this.props;\n        \n        return (\n            <form>\n                <div className=\"form-group\">\n                    <label htmlFor=\"add-testcase-name\">Name:</label>\n                    <input className={\"form-control \" + (this.state.nameError !== \"\" ? \"is-invalid\" : \"\")} id=\"add-testcase-name\" required onChange={(e) => { this.setState({ name: e.target.value, nameError: \"\" }) }} value={ this.state.name} />\n                    {this.state.nameError !== \"\" ?\n                        <div className=\"text-danger small\">\n                            {this.state.descError}\n                        </div> : null\n                    }\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"add-testcase-desc\">Description:</label>\n                    <textarea rows=\"4\" className={\"form-control \" + (this.state.descError !== \"\" ? \"is-invalid\" : \"\")} id=\"add-testcase-desc\" required onChange={(e) => { this.setState({ desc: e.target.value, descError: \"\" }) }} value={ this.state.desc} />\n                    {this.state.descError !== \"\" ?\n                        <div className=\"text-danger small\">\n                            {this.state.descError}\n                        </div> : null\n                    }\n                </div>\n                <div className=\"form-row\">\n                    <h5>Inputs:</h5>\n                </div>\n                {this.state.vars.map((x, ind) => !x.isReturn ? this.mapToGroup(x, ind) : null)}\n                <div className=\"form-row\">\n                    <h5>Output:</h5>\n                </div>\n                {this.state.vars.map((x, ind) => x.isReturn ? this.mapToGroup(x, ind) : null)}\n                <div className=\"form-row float-right mr-1\">\n                    {local ?\n                        <div className=\"form-check mr-4\">\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"testcase-to-server\" onChange={\n                                () => this.setState({ upload: !this.state.upload })\n                            } />\n                            <label className=\"form-check-label\" htmlFor=\"testcase-to-server\">\n                                Upload this test case to server\n                            </label>\n                        </div> : null}\n                    <button className=\"btn btn-primary\" onClick={(e) => { \n                        e.preventDefault();\n                        let result = {name:this.state.name, desc:this.state.desc, inputs:[], output:\"\", isLocal:!this.state.upload };\n                        let allPass = true;\n                        let varsCp = [...this.state.vars];\n                        let nameError = \"\"\n                        let descError = \"\";\n                        const notEmpty = \"this field cannot be empty!\";\n                        if (this.state.name === \"\") {\n                            nameError = notEmpty;\n                            allPass = false;\n                        }  \n                        if (this.state.desc === \"\") { \n                            descError = notEmpty;\n                            allPass = false;\n                        }\n                            \n                        for (let vt of this.state.vars) { \n                            if (vt.userIn === \"\") { \n                                this.updateVars(varsCp, vt, \"error\", notEmpty);\n                                allPass = false;\n                                continue;\n                            }\n                            try {\n                                let formatted = (StringToLetCodeCodeMapper.mapCode(vt.userIn, vt.type));\n                                if (vt.isReturn)\n                                    result.output = formatted;\n                                else\n                                    result.inputs.push(formatted);\n                            }\n                            catch (err) { \n                                this.updateVars(varsCp, vt, \"error\", err.message);\n                                allPass = false;\n                            }\n                        }\n                        if (allPass) { \n                            this.setState({\n                              name: \"\",\n                              desc: \"\",\n                              vars: this.getEmptyVars(),\n                            });\n                            onAdd(result);\n                            return;\n                        }\n                        this.setState({ nameError: nameError, descError:descError})\n                    }}>Add</button>\n                </div>\n            </form>\n        );\n    }\n}\n\n\nclass AddTestCaseModal extends React.Component {\n\n    render() {\n        const { show, functionType, onAdd, onHide, local } = this.props;\n        return (\n            <Modal\n                size={\"lg\"}\n                show={show}\n                onHide={onHide}\n                centered\n            >\n                <Modal.Header closeButton>\n                   <h5>New Test Case</h5>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <AddtestCaseForm functionType={functionType} onAdd={onAdd} local={local} />\n                </Modal.Body>\n\n\n            </Modal>\n        )\n\n    }\n}\n\nexport { AddTestCaseModal, AddtestCaseForm };","import React from \"react\"\nimport { Modal } from \"react-bootstrap\"\n\n\nclass TestCaseViewLarge extends React.Component {\n\n    render() {\n        const { testCase, functionType, isModal } = this.props;\n        let header;\n        if (!isModal) {\n            header =\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h5>{testCase.name} </h5>\n                    </div>\n                </div>\n        }\n        let actualOutputHead;\n        let actualOutputVal;\n        if (testCase.actualOutput) {\n            actualOutputHead =\n                <div className=\"col text-info\">\n                    Actual Output:\n                </div>;\n            actualOutputVal =\n                <div className=\"col\">\n                    {testCase.actualOutput}\n                </div>\n        }\n\n        return <div className=\"container-fluid\">\n            {header}\n            <div className=\"row\">\n                <div className=\"col  bg-light rounded p-2\">\n                    {testCase.desc}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col small text-muted pt-1 border-bottom\">\n                    Submitted on {new Date(testCase.date).toDateString()}, {testCase.numRun} runs\n                </div>\n            </div>\n            <div className=\"row mt-2\">\n                <div className=\"col text-info\">\n                    Inputs:\n                </div>\n                <div className=\"col text-info\">\n                    Expected Output:\n                </div>\n                {actualOutputHead}\n            </div>\n            <div className=\"row mt-2\">\n                <div className=\"col\">\n                    {testCase.inputs.map((x, ind) => <p key={ind}>{functionType.paramsType[ind].name + \": \" + x}</p>)}\n                </div>\n                <div className=\"col\">\n                    {testCase.output}\n                </div>\n                {actualOutputVal}\n            </div>\n        </div>\n\n    }\n}\n\n\nclass TestCaseViewModal extends React.Component {\n\n    mapStatus(status) {\n        if (status === \"pass\") {\n            return <h6 className=\"text-white bg-success ml-3 p-1 rounded\">Passed </h6>;\n        }\n        if (status === \"fail\") {\n            return <h6 className=\"text-white bg- bg-danger ml-3 p-1 rounded\">Failed </h6>\n        }\n        if (status === \"running\") {\n            return <h6 className=\"text-white bg- bg-secondary ml-3 p-1 rounded\">Running </h6>\n        }\n        return null;\n    }\n\n    render() {\n        const { testCase, functionType, onHide } = this.props;\n        if (!testCase) {\n            return null;\n        }\n        return (\n            <Modal\n                size={testCase.actualOutput ? \"lg\" : \"md\"}\n                show={true}\n                onHide={onHide}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <h5>Test Case: {testCase.name} </h5>\n                    {this.mapStatus(testCase.status)}\n                </Modal.Header>\n\n                <Modal.Body>\n                    <TestCaseViewLarge testCase={testCase} functionType={functionType} isModal={true} />\n                </Modal.Body>\n\n            </Modal>\n        )\n\n    }\n}\n\nexport { TestCaseViewLarge, TestCaseViewModal };","import React from \"react\";\nimport { AddtestCaseForm } from \"../test-case/add-test-case\";\nimport { TestCaseViewLarge } from \"../test-case/test-case-view-lg\";\n\nclass TestCasePage extends React.Component {\n  state = {\n    testCases: [],\n  };\n\n  render() {\n    const { functionType, onBack, onSubmit } = this.props;\n    return (\n      <div className=\"container\">\n        <h2 className=\"mt-2\">2. Add Test Case To Your Question</h2>\n        <div className=\"row mb-4\">\n          <div className=\"col-12\">\n            <AddtestCaseForm\n              functionType={functionType}\n              local={false}\n              onAdd={(tc) => {\n                const newTc = [...this.state.testCases];\n                newTc.push(tc);\n                this.setState({ testCases: newTc });\n              }}\n            />\n          </div>\n        </div>\n\n        {this.state.testCases.length === 0 ? (\n          <div className=\"row bg-light p-4 my-2\">\n            <h5 className=\"center\"> No Test Case Yet</h5>\n          </div>\n        ) : (\n          this.state.testCases.map((x, ind) => (\n            <div className=\"row card p-2 my-2\" key={ind}>\n              <div className=\"col\">\n                <button\n                  type=\"button\"\n                  className=\"close float-right\"\n                  aria-label=\"Close\"\n                  onClick={e =>\n                    this.setState({\n                      testCases: this.state.testCases.filter((x, i) => String(i) !== e.target.id)\n                    })\n                  }\n                >\n                  <span aria-hidden=\"true\" id={ind}>\n                    &times;\n                  </span>\n                </button>\n              </div>\n\n              <TestCaseViewLarge\n                testCase={x}\n                functionType={functionType}\n                isModal={false}\n              />\n            </div>\n          ))\n        )}\n            <button className=\"btn btn-link mb-5 mt-2 \" onClick={onBack}>{\"<<\"} Back</button>\n            <button className=\"btn btn-primary float-right mb-5 mt-2\" onClick={() => onSubmit(this.state.testCases)}>Post Question</button>\n       \n      </div>\n    );\n  }\n}\n\nexport default TestCasePage;\n","\n\nexport async function addTestCase(testCase, callback) { \n    try{\n        await fetch('/api/testcase/addTestcase', {\n            method: 'POST',\n            body: JSON.stringify(testCase),\n            headers: { 'Content-Type': 'application/json'}\n        })\n        \n        if(callback){\n            const response = await fetch('/api/testcase/' + testCase.owner_id + '/allTestcase', {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json'}\n            })\n            const data = await response.json()\n            callback(data);\n        }\n    }catch(err){\n        console.log(err)\n    }\n}\n\nexport async function getTestCases(question_id, callback) {\n    try{\n        const response = await fetch('/api/testcase/' + question_id + '/allTestcase', {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json'}\n        })\n        const data = await response.json()\n        callback(data);\n    }catch(err){\n        console.log(err)\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { TypePopup, getTypeselectionFrom } from \"./type-popup\";\nimport { Type } from \"../../letcode-code-runner/type\";\nimport { LetCodeTypeMapper } from \"../../letcode-code-runner/letcode-mapper\";\nimport { FunctionType, VariableType } from \"../../letcode-code-runner/type\";\nimport TestCasePage from \"./create-question-testcase\";\nimport { postQuestion } from \"../../api-calls/question-api-calls\"\nimport { addTestCase } from \"../../api-calls/test-case-api-calls\";\n\nclass CreateQuestion extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    functionName: \"\",\n    returnDescription: \"\",\n    returnType: null,\n    currentInputName: \"\",\n    currentInputDescription: \"\",\n    currentInputType: null,\n    page: 0,\n    inputs: [],\n    testcases: [],\n    popUps: []\n  };\n\n  handleChange(e) {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  pushModal(type, onComplete) {\n    const newPopUps = this.state.popUps;\n    newPopUps.push(() => (\n      <TypePopup\n        type={type}\n        onComplete={onComplete}\n        onCancel={this.popLast.bind(this)}\n        pushModal={this.pushModal.bind(this)}\n      />\n    ));\n    this.setState({ popUps: newPopUps });\n  }\n\n  popLast() {\n    const newPopUps = this.state.popUps;\n    newPopUps.pop();\n    this.setState({ popUps: newPopUps });\n  }\n\n  handleTypeSelection(e) {\n    if (e.target.value === \"dict\" || e.target.value === \"list\") {\n      this.pushModal(e.target.value, (type) => {\n        this.setState({ [e.target.id]: type });\n      });\n    } else {\n      this.setState({\n        [e.target.id]: {\n          int: Type.INT,\n          float: Type.FLOAT,\n          bool: Type.BOOL,\n          string: Type.STRING,\n        }[e.target.value],\n      });\n    }\n  }\n\n  handleAddInput = (e) => {\n    e.preventDefault();\n    const inputs = [\n      ...this.state.inputs,\n      { inputName: \"\", inputDescription: \"\", inputType: null },\n    ];\n    this.setState({\n      inputs: inputs,\n    });\n  };\n\n  getFunctionType() { \n    return new FunctionType(this.state.functionName, this.state.inputs.map(\n      x => new VariableType(x.inputName, x.inputType)\n    ),\n    new VariableType(\"return\", this.state.returnType));\n  }\n\n  postCurrentQuestion(testCases) { \n    this.checkVaild();\n    postQuestion({\n      functionType: this.getFunctionType(),\n      name: this.state.title,\n      desc: this.state.description\n    }, question => { \n        testCases.forEach(tc => {\n          tc.owner_id = question._id;\n          addTestCase(tc);\n        });\n        this.props.history.push(\"/\");\n    })\n  }\n\n  checkVaild() { \n    if (this.state.title === \"\"\n      || this.state.description === \"\"\n      || this.state.functionName === \"\"\n      || this.state.returnType === null\n      || this.state.returnDescription === \"\"\n    ) { \n      alert(\"Please fill all fields \")\n      return false;\n    }\n    if (this.state.inputs.length === 0) { \n      alert(\"The function needs to have at least one input!\")\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    return this.state.page === 0 ? (\n      <div className=\"container\">\n        <div className=\"row mt-2\">\n          <div className=\"col\">\n            <h2>1. Describe Your Question</h2>\n          </div>\n        </div>\n        <form>\n          <label htmlFor=\"title\" className=\"mt-2\">\n            Title:\n          </label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Enter title\"\n            id=\"title\"\n            value={this.state.title}\n            onChange={this.handleChange.bind(this)}\n          />\n          <label htmlFor=\"description\" className=\"mt-2\">\n            Description:\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"description\"\n            placeholder=\"Enter description here\"\n            value={this.state.description}\n            onChange={this.handleChange.bind(this)}\n            rows={10}\n          />\n\n          <label htmlFor=\"create-question-function\" className=\"mt-3\">\n            <h4>Describe Your Function:</h4>\n          </label>\n          <div\n            className=\"create-question-function-div\"\n            id=\"create-question-function\"\n          >\n            <div className=\"create-question-function-name\">\n              <label htmlFor=\"functionName\">Function Name:</label>\n              <input\n                id=\"functionName\"\n                className=\"form-control\"\n                aria-describedby=\"functionNameHint\"\n                value={this.state.functionName}\n                onChange={this.handleChange.bind(this)}\n              />\n              <small id=\"functionNameHint\" className=\"text-muted\">\n                Must be 4-20 characters long. You can use whatever naming\n                convention you like, but no space is allowed.\n              </small>\n            </div>\n\n            <label htmlFor=\"create-question-input\" className=\"mt-2\">\n              Input parameters:\n            </label>\n            <div className=\"form-row\" id=\"create-question-input\">\n              {getTypeselectionFrom(\n                this.handleTypeSelection.bind(this),\n                \"Select Input Type\",\n                this.state.currentInputType\n                  ? LetCodeTypeMapper.mapType(this.state.currentInputType)\n                  : \"selected\",\n                [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"],\n                \"currentInputType\"\n              )}\n\n              <div className=\"col col-md-2\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"currentInputName\"\n                  placeholder=\"name\"\n                  value={this.state.currentInputName}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n              <div className=\"col col-md-5\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"currentInputDescription\"\n                  placeholder=\"description of this input parameter\"\n                  value={this.state.currentInputDescription}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n              <div className=\"col col-md-1\">\n                <button\n                  className=\"btn btn-outline-primary\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    if (\n                      !this.state.currentInputType ||\n                      this.state.inputs.filter(\n                        (x) => x.inputName === this.state.currentInputName\n                      ).length ||\n                      this.state.currentInputName === \"\"\n                    ) {\n                      return;\n                    }\n                    const newInputs = [...this.state.inputs];\n                    newInputs.push({\n                      inputName: this.state.currentInputName,\n                      inputDescription: this.state.currentInputDescription,\n                      inputType: this.state.currentInputType,\n                    });\n                    this.setState({\n                      inputs: newInputs,\n                      currentInputName: \"\",\n                      currentInputType: null,\n                      currentInputDescription: \"\",\n                    });\n                  }}\n                >\n                  +\n                </button>\n              </div>\n            </div>\n            <div className=\"form-row justify-content-center mt-2 p-2 bg-light\">\n              {this.state.inputs.length === 0 ? (\n                <h5 className=\"text-secondary\">No input parameter</h5>\n              ) : (\n                <ul class=\"list-group pt-2 col-12\">\n                  {this.state.inputs.map((x) => (\n                    <li class=\"list-group-item\" key={x.inputName}>\n                      {x.inputName}:{\" \"}\n                      <text className=\"text-info px-2 bg-light mx-1\">\n                        {LetCodeTypeMapper.mapType(x.inputType)}\n                      </text>\n                      | Description:\n                      <text className=\"text-secondary ml-2\">\n                        {x.inputDescription}{\" \"}\n                      </text>\n                      <button\n                        type=\"button\"\n                        className=\"close\"\n                        aria-label=\"Close\"\n                        onClick={(e) =>\n                          this.setState({\n                            inputs: this.state.inputs.filter(\n                              (x) => x.inputName !== e.target.id\n                            ),\n                          })\n                        }\n                      >\n                        <span aria-hidden=\"true\" id={x.inputName}>\n                          &times;\n                        </span>\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n\n            <label htmlFor=\"create-question-return\" className=\"mt-2\">\n              Return:\n            </label>\n            <div className=\"form-row\" id=\"create-question-return\">\n              {getTypeselectionFrom(\n                this.handleTypeSelection.bind(this),\n                \"Select Return Type\",\n                this.state.returnType\n                  ? LetCodeTypeMapper.mapType(this.state.returnType)\n                  : \"selected\",\n                [\"int\", \"float\", \"string\", \"bool\", \"dict\", \"list\"],\n                \"returnType\"\n              )}\n              <div className=\"col col-md-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"returnDescription\"\n                  placeholder=\"description of the return value\"\n                  value={this.state.returnDescription}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n            </div>\n          </div>\n          <button\n            className=\"btn btn-link mt-3 mb-5 float-right\"\n            onClick={(e) => {\n              e.preventDefault();\n              if (this.checkVaild())\n                this.setState({ page: this.state.page + 1 });\n            }}\n          >\n            Next &gt;&gt;\n          </button>\n        </form>\n        {this.state.popUps.map((x) => x())}\n      </div>\n    ) : (\n      <TestCasePage\n        functionType={this.getFunctionType()}\n        onBack={() => this.setState({ page: 0 })}\n        onSubmit={this.postCurrentQuestion.bind(this)}\n      />\n    );\n  }\n}\n\nexport default CreateQuestion;\n","\nimport React, { Component } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Star} from '@icon-park/react'\nimport {addCollection, removeCollection} from '../../api-calls/user-api-calls'\n\nclass QuestionDesc extends Component {\n\n    state = {\n        collected: false\n    }\n\n    componentDidMount() {\n        this.setState({\n            collected: this.props.question.collected\n        })\n    }\n\n    toggleCollect = (id) => {\n        if (this.state.collected) {\n            removeCollection(id)\n        } else {\n            addCollection(id)\n        }\n        this.setState({\n            collected: !this.state.collected\n        })\n    }\n\n    render() {\n        const question = this.props.question\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <br></br>\n                        <h4>{question.name}</h4>\n                        <div onClick={() => this.toggleCollect(question._id)}>\n                            {!this.state.collected && <Star theme=\"outline\" size=\"24\" />}\n                            {this.state.collected && <Star theme=\"filled\" size=\"24\" fill=\"#fcef4e\" strokeWidth={3} />}\n                        </div>\n                        <br></br>\n                        <p>{question.desc}</p>\n                        \n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n    \n}\n\nexport default QuestionDesc","export default __webpack_public_path__ + \"static/media/placeholder.a1c30e1f.png\";","\nexport async function getAnswers(questionId, callback) { \n    try{\n        const response = await fetch('/api/answer/' + questionId + \"/getAnswers\", {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json'}\n        })\n        const data = await response.json()\n        callback(data);\n        return \n    }catch(err){\n        console.log(err)\n    }\n}\n    \nexport async function postAnswer(questionId, code, uid, callback) { \n    console.log(\"enter get user collection\")\n    try{\n        const response = await fetch(\n          \"/api/answer/\" + questionId + \"/postAnswer\",\n          {\n            method: \"POST\",\n            body: JSON.stringify({\n              code: code,\n              uid: uid,\n              language: \"Python\",\n            }),\n            headers: { \"Content-Type\": \"application/json\" },\n          }\n        );\n        const data = await response.json()\n        callback(data);\n        return \n    }catch(err){\n        console.log(err)\n    }\n}\n    ","import React, { Component } from 'react'\nimport Editor from './Editor'\nimport { UpOne, DownOne } from '@icon-park/react'\nimport \"./answers.css\"\nimport profilePic from '../../img_source/placeholder.png'\nimport FetchWapper from \"../fetchWrapper\"\nimport { getAnswers } from \"../../api-calls/answers-api-calls\"\n\nclass Answers extends Component {\n\n    changeCode = (code) => {\n        return\n    }\n\n    render() {\n        const answers = this.props.data;\n        const answerList = answers.length ? (\n            answers.map((answer, index) => {\n                return (\n                    <div className=\"indanswer\" key={index}>\n                        <div className=\"answerProfile\">\n                            <img className=\"answerProfilePic\" src={answer.user.profilePic} alt=\"profile\"></img>\n                            <h4 className=\"answerHeader\">{answer.user.username}</h4>\n                        </div>\n\n                        {/* <div className=\"answerComment\">\n                            <h5>comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment comment</h5>\n                        </div> */}\n\n                        <div>\n                            {/* <p className=\"answerText\">{answer.detail.code}</p> */}\n                            <Editor\n                                lang={answer.detail.language}\n                                changeCode={this.changeCode}\n                                code={answer.detail.code}\n                                readOnly={true}\n                            >\n                            </Editor>\n                        </div>\n                        <div className=\"answerReply\">\n                            <h5>replies</h5>\n                            <div className=\"row\">\n                                <img className='replyImg' src={profilePic} alt=\"reply\"></img>\n                                <h6>username</h6>\n                            </div>\n                            <div className='commentSolution'>\n                                <p>comment on the solution</p>\n                            </div>\n\n                        </div>\n                        <div className=\"answerButtons\">\n                            <button className=\"answerButton\">\n                                {answer.upvotes}\n                                <UpOne theme=\"outline\" size=\"24\" fill=\"#333\" />\n                            </button>\n                            <button className=\"answerButton\" >\n                                {answer.downvotes}\n                                <DownOne theme=\"outline\" size=\"24\" fill=\"#333\" />\n                            </button>\n                        </div>\n                    </div>\n                )\n            })\n        ) : (\n                <div>No answers</div>\n            )\n        return (\n            <div>\n                {answerList}\n            </div>\n        )\n    }\n}\n\nfunction warppedAnswers(props) { \n    return <FetchWapper fetchData={(cb) => getAnswers(props.id, cb)}><Answers/></FetchWapper>\n}\n\nexport default warppedAnswers\n\n\n","import React, { Component } from 'react'\nimport { TestCaseViewLarge, TestCaseViewModal } from \"../test-case/test-case-view-lg\"\nimport { Type, FunctionType, VariableType } from \"../../letcode-code-runner/type\"\nimport { AddTestCaseModal } from \"../test-case/add-test-case\"\nimport FetchWrapper from \"../fetchWrapper\"\nimport { getTestCases, addTestCase } from \"../../api-calls/test-case-api-calls\"\n\nclass TestCases extends Component {\n    constructor(props) { \n        super(props);\n        this.state = {\n            showAddTestCase: false,\n            testCases: props.data\n        }\n    }\n    \n    onTestCaseAdd(testCase) {\n        testCase.owner_id = this.props.qid\n        addTestCase(testCase, tc => { this.setState({showAddTestCase:false, testCases:tc})})\n    }\n\n    render() {\n        return (\n            <div>\n                <button type=\"button\" className=\"btn btn-link\" onClick={() => this.setState({ showAddTestCase: true })}>Add</button>\n                {this.props.data.map((x, ind) => {\n                    return (\n                        <TestCaseViewLarge key={ind}\n                            testCase={x}\n                            functionType={this.props.type}\n                            isModal={false} />)\n                    })\n                }\n                <AddTestCaseModal show={this.state.showAddTestCase} functionType={this.props.type}\n                    onAdd={this.onTestCaseAdd.bind(this)}\n                    onHide={() => {\n                        this.setState({ showAddTestCase: false })\n                    }} local={false} />\n        </div>\n    )}\n    \n}\n\nfunction wrappedTestCase(props) {\n    return <FetchWrapper fetchData={(cb) => getTestCases(props.id, cb)}><TestCases qid={ props.id} type={props.type}/></FetchWrapper>\n    \n}\n\nexport default wrappedTestCase","import React, { useState } from 'react'\nimport { Link, useLocation} from 'react-router-dom'\nimport QuestionDesc from './QuestionDesc'\nimport Answers from './Answers'\nimport TestCases from './TestCases'\nimport { TabContent, TabPane, Nav, NavItem, Row, Col, Button } from 'reactstrap'\nimport {NavLink, Container} from 'react-bootstrap'\nimport classnames from 'classnames'\nimport FetchWrapper from \"../fetchWrapper\"\nimport { getQuestion } from \"../../api-calls/question-api-calls\"\n\nconst QuestionContainer = (props) => {\n    const [activeTab, setActiveTab] = useState('1');\n\n    const toggle = tab => {\n        if (activeTab !== tab) setActiveTab(tab);\n    }\n    \n    const location = useLocation();\n    const path = location.pathname.substring(0, location.pathname.lastIndexOf('/')) + '/answer_question';\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"12\">\n                    <QuestionDesc question={props.data}></QuestionDesc>\n                </Col>\n            </Row>\n            <Nav tabs>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === '1' })}\n                        onClick={() => { toggle('1'); }}\n                    >\n                        Answers\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === '2' })}\n                        onClick={() => { toggle('2'); }}\n                    >\n                        Test cases\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"1\">\n                    <Row>\n                        <Col sm=\"3\">\n                            <NavLink as={Link} to={path}>Add Answers</NavLink>\n                        </Col>\n                        <Col sm={{ size: 'auto', offset: 5 }}>\n                            <Button color=\"link\">Sort by newest</Button>\n                            <Button color=\"link\">Sort by most upvote</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\">\n                            <Answers id={props.data._id}></Answers>\n                        </Col>\n                    </Row>\n                </TabPane>\n                <TabPane tabId=\"2\">\n                    <Row>\n                        <Col>\n                            {/* <TestCaseViewModal></TestCaseViewModal> */}\n                            <TestCases type={props.data.functionType} id={props.data._id}></TestCases>\n                        </Col>\n                    </Row>\n                </TabPane>\n            </TabContent>\n        </Container>\n    )\n}\n\nfunction warppedQuestionContainer(props) { \n    return <FetchWrapper fetchData={(cb) => getQuestion(cb, props.match.params.question_id)}><QuestionContainer/></FetchWrapper>\n}\n\n\nexport default warppedQuestionContainer\n","import { FunctionType } from \"./type\"\n\nexport enum RunnerState { \n    READY = \"ready\",\n    UNINIT = \"uninitialized\",\n    INITING = \"initializing\",\n    COMPILING = \"compiling\",\n    RUNNING = \"runing\",\n    ERROR = \"error\"\n}\n\nexport interface CodeRunner { \n    readonly state: RunnerState;\n\n    init(notifyRunnerState: (state: RunnerState) => void, config?: Map<string, string>): void;\n    setConsole(onStdout?: (out: string) => void, onError?: (err: string) => void): void\n    canSupportFunctionType(functionType: FunctionType): boolean;\n    getStarterCode(functionType: FunctionType): string;\n    runTest(functionType: FunctionType, testCases: TestCase[], userCode: string): Promise<TestTracker>\n}\n\nexport class TestTracker {\n    public testCompletionTime: string = \"\";\n    public testPassed: number = 0;\n\n    constructor(public readonly userCode: string,\n        public readonly testCases: TestCase[],\n        public readonly generatedCode: string,\n        ) { }\n\n}\n\nexport class TestCase { \n    constructor(public readonly inputs: string[],\n        public readonly expectedOutput: string,\n        public readonly onSuceess: (info: string) => void,\n        public readonly onFailure: (err: string) => void) { }\n\n}","import React from 'react';\nimport { Controlled as ControlledEditor } from '../../react-codemirror2/index'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/python/python'\nimport 'codemirror/mode/clike/clike'\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/search/match-highlighter'\n\n\nclass Editor extends React.Component {\n    \n    code = \"\"\n    getMode(selectedLang) { \n        if (selectedLang === \"Python\") {\n            return \"python\";\n        }\n        if (selectedLang === \"C\") { \n            return \"text/x-csrc\";\n        }\n        if (selectedLang  === \"C++\") { \n            return \"text/x-c++src\";\n        }\n        if (selectedLang  === \"Java\") {\n            return \"text/x-java\";\n        }\n        return \"\";\n    }\n\n    onEditorChange(editor, data, value, cancel) { \n        if (!this.props.onCodeChange || (this.props.mustInclude && !value.split(\"\\n\").includes(this.props.mustInclude))) {\n            cancel();\n        }\n        else { \n            this.props.onCodeChange(value);\n        }\n    }\n\n\n    render() { \n        const { code, lang, extraTheme } = this.props\n        return (\n            <div>\n                <ControlledEditor\n                    className=\"border border-gray\"\n                    onBeforeChange={this.onEditorChange.bind(this)}\n                    value={code}\n                    options={{\n                        indentUnit: 4,\n                        lineWrapping: true,\n                        mode: this.getMode(lang),\n                        lineNumbers: true,\n                        matchBrackets: true,\n                        matchhighlight: true,\n                        autoCloseBrackets: true,\n                        theme: \"default \" + (extraTheme ? extraTheme : \"\")\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Editor;","import { CodeMapper, TypeMapper } from \"../mapper\"\n\nconst mapDict = (val: Map<string, string>) => {\n    const pairs: String[] = []\n    val.forEach((v, k) => pairs.push(k + \":\" + v))\n    return \"{\" + pairs.join(\",\") + \"}\"\n}\n\nconst mapList = (val: string[]) => {\n    return \"[\" + val.join(\",\") + \"]\";\n}\n\nconst mapBool = (val: string) => {\n    if (val === \"true\")\n        return \"True\";\n    return \"False\";\n}\n\nconst LetCodeToPythonCodeMapper =\n    new CodeMapper(\n        (val: string) => val,\n        (val: string) => val,\n        (val: string) => val,\n        mapBool,\n        mapDict,\n        mapList\n    );\n\nconst PythonTypeMapper =\n    new TypeMapper(\n        () => \"int\",\n        () => \"float\",\n        () => \"str\",\n        () => \"bool\",\n        (key, val) => \"[\" + key + \",\" + val + \"]\",\n        (val) => \"[\" + val + \"]\"\n    );\n\nconst PythonLetCodeCodeMapperFuncName = \"____letcode_code_mapper____\"\n\nconst PythonToLetCodeCodeMapper =\n`def ${PythonLetCodeCodeMapperFuncName}(python_object: any) -> str:\n    if type(python_object) == dict:\n        return \"{\" + \",\".join([${PythonLetCodeCodeMapperFuncName}(k) + \":\" + ${PythonLetCodeCodeMapperFuncName}(v) for (k, v) in python_object]) + \"}\"\n    if type(python_object) == list:\n        return \"[\" + \",\".join([${PythonLetCodeCodeMapperFuncName}(v) for v in python_object])  + \"]\"\n    if type(python_object) == bool:\n        if python_object:\n            return \"true\"\n        return \"false\"\n    return str(python_object)\n    `;\n\n\nexport { LetCodeToPythonCodeMapper, PythonTypeMapper, PythonToLetCodeCodeMapper, PythonLetCodeCodeMapperFuncName}","import { RunnerState, CodeRunner, TestTracker, TestCase } from \"../code-runner\"\nimport { FunctionType } from \"../type\";\nimport { LetCodeToPythonCodeMapper, PythonTypeMapper, PythonToLetCodeCodeMapper, PythonLetCodeCodeMapperFuncName } from \"./python-mapper\"\n\nconst testWarpingFunctionName: string = \"___LETCODE_PYTHON_TEST_WARPING_FUNC\"\n\nexport default class CoderunnerPythonImpl implements CodeRunner {\n    //We need to warp user's code in a function scope before passing it to the interpretor\n    //so we can clean user defined vars after tests completed.\n    state: RunnerState = RunnerState.UNINIT;\n    private interpreter_webworker?: Worker; \n    private onStdout?: (out: string) => void;\n    private onError?: (err: string) => void;\n    // sould bind to something that the run button and disable the run button when state is not READY\n    private notifyRunnerState?: (state: RunnerState) => void;\n    private currentTestTracker: TestTracker | null = null;\n    private resolveCurrentTracker: ((tt: TestTracker) => void) | null = null;\n\n    init(notifyRunnerState: (state: RunnerState) => void): void {\n        this.notifyRunnerState = notifyRunnerState;\n        if (this.interpreter_webworker) {\n            notifyRunnerState(this.state);\n            return;\n        }\n        if (this.onStdout)\n            this.onStdout(\"Loading Python interpreter..\");\n        this.updateState(RunnerState.INITING);\n        import(\"worker-loader!./webworker/pyodide.worker\").then(worker => {\n            this.interpreter_webworker = new worker.default();\n            this.interpreter_webworker .addEventListener(\"error\", (e) => console.log(), false);\n\n            this.interpreter_webworker!.onmessage = () => {\n                if (this.onStdout)\n                    this.onStdout(\"Python interpreter loadded! Loading modules and output mapping function..\");\n                this.interpreter_webworker!.onmessage = (e) => {\n                    if (e.data.type === \"runCompleted\") { \n                        if (this.onStdout)\n                            this.onStdout(\"Python runner is ready!\")\n                        this.updateState(RunnerState.READY);\n                        this.interpreter_webworker!.onmessage = this.handleMessage.bind(this);\n                        this.interpreter_webworker!.onerror = this.handleError.bind(this);\n                    }\n                }\n                this.interpreter_webworker?.postMessage({\n                    type: \"run\",\n                    code: `import gc\\n${PythonToLetCodeCodeMapper}`\n                });\n            }\n            this.interpreter_webworker!.onerror = (err) => {\n                this.updateState(RunnerState.ERROR);\n            }\n        })\n    }\n\n    setConsole(onStdout?: (out: string) => void, onError?: (err: string) => void): void {\n        this.onStdout = onStdout;\n        this.onError = onError;\n    }\n\n    canSupportFunctionType(functionType: FunctionType): boolean {\n        for (let varType of functionType.paramsType) { \n            if (!PythonTypeMapper.canBeMapped(varType.type))\n                return false;\n        }\n        return PythonTypeMapper.canBeMapped(functionType.returnType.type)\n    }\n    getStarterCode(functionType: FunctionType): string {\n        return `\ndef ${functionType.name}(${functionType.paramsType.map(varType => varType.name + \":\" + PythonTypeMapper.mapType(varType.type))\n                .join(\", \")}) -> ${PythonTypeMapper.mapType(functionType.returnType.type)}:\n    # Input your code here:\n    return      `;\n    }\n\n    runTest(functionType: FunctionType, testCases: TestCase[], userCode: string): Promise<TestTracker>{\n        if (this.state !== RunnerState.READY)  \n            throw new Error(\"Runner is not ready!\");\n        \n        this.updateState(RunnerState.COMPILING);\n        let generatedCode = `def ${testWarpingFunctionName}() -> list:\\n` + userCode.split(\"\\n\").map(s => \"    \" + s).join(\"\\n\");\n        const testCasesInternalName: string[] = []\n        for (let tc of testCases) { \n            let args: string[] = [];\n            for (let i = 0; i < tc.inputs.length; i++) { \n                args.push(LetCodeToPythonCodeMapper.mapCode(tc.inputs[i], functionType.paramsType[i].type));\n            }\n            const tcName = getVariableName(\"testcase\" + testCases.indexOf(tc), generatedCode)\n            testCasesInternalName.push(tcName);\n            generatedCode += \n            `\n    def ${tcName}() -> str:\n        return ${PythonLetCodeCodeMapperFuncName}(${functionType.name}(${args.join(\", \")}))\n            `;\n        }\n        generatedCode +=\n            `\n    return [${testCasesInternalName.join(\", \")}]\n            `\n        console.log(\"generated code:\\n\", generatedCode)\n        this.currentTestTracker = new TestTracker(userCode, testCases, generatedCode);\n        this.interpreter_webworker!.postMessage({\n            type: \"runTest\",\n            code: generatedCode,\n            numTest: testCases.length,\n            testWarperName: testWarpingFunctionName\n        });\n        return new Promise(resolve => { \n            this.resolveCurrentTracker = resolve;\n        });\n    }\n\n    private handleMessage(msg: MessageEvent): void { \n        if (!msg.data) return;\n        if (msg.data.type === \"stdout\") {\n            if (this.onStdout && this.state === RunnerState.RUNNING) this.onStdout(msg.data.value);\n        }\n        else if (msg.data.type === \"compilationError\") {\n            this.currentTestTracker!.testCompletionTime = new Date().toString()\n            this.resolveCurrentTracker!(this.currentTestTracker!);\n            this.currentTestTracker!.testCases.forEach(tc => tc.onFailure(\"Compilation Failed\"))\n            this.currentTestTracker = null;\n            this.updateState(RunnerState.READY);\n            if (this.onError) this.onError(msg.data.value);\n        }\n        else if (msg.data.type === \"compilationSuccess\") { \n            this.updateState(RunnerState.RUNNING);\n        }\n           \n        else if (msg.data.type === \"testCaseResult\") {\n            if (!this.currentTestTracker)\n                return;\n            if (msg.data.error || msg.data.result !== this.currentTestTracker.testCases[msg.data.testCaseNum].expectedOutput)\n                this.currentTestTracker.testCases[parseInt(msg.data.testCaseNum)].onFailure(msg.data.result);\n            else if (this.currentTestTracker){\n                this.currentTestTracker.testCases[parseInt(msg.data.testCaseNum)].onSuceess(msg.data.result);\n                this.currentTestTracker.testPassed += 1;\n            }\n                \n        }\n        else if (msg.data.type === \"testingCompeleted\") {\n            this.updateState(RunnerState.READY);\n            this.currentTestTracker!.testCompletionTime = new Date().toString();\n            this.resolveCurrentTracker!(this.currentTestTracker!);\n            this.currentTestTracker = null;\n        }\n    }\n\n    private handleError(err: ErrorEvent): void { \n        if (this.onError) {\n            this.onError(err.message);\n            this.updateState(RunnerState.ERROR);\n        }\n    }\n\n    private updateState(state: RunnerState): void { \n        this.state = state;\n        if (this.notifyRunnerState) this.notifyRunnerState(state);\n    } \n}\n\n\n// get a varible name thta's close to nameWanted but not refrenced in userCode\n// It's a naive implimentation\nfunction getVariableName(nameWanted: string, userCode: string): string {\n    let outputName = \"____GENERATED_\" + nameWanted;\n    while (userCode.includes(outputName)) {\n        outputName += \"_\";\n    }\n    return outputName;\n}\n","import { CodeRunner } from \"./code-runner\";\nimport CoderunnerPythonImpl from \"./python/code-runner-python-impl\";\nimport { FunctionType } from \"./type\"\n\nconst codeRuners: Map<string, CodeRunner> = new Map();\ncodeRuners.set(\"Python\", new CoderunnerPythonImpl());\n\nexport function getCodeRunner(lang: string): CodeRunner|undefined { \n    return codeRuners.get(lang)\n}\n\nexport function getSupportedLang(func: FunctionType): string[] { \n    const langs:string[] = []\n    codeRuners.forEach((value: CodeRunner, key: string) => {\n        if (value.canSupportFunctionType(func)) { \n            langs.push(key);\n        }\n    });\n    return langs;\n}\n\nexport function getVersion(): string { \n    return \"Ver 1.0.0\";\n}","import React from 'react'\nimport \"./test-case-view-sm.css\"\n\n\nclass TestCaseViewSmall extends React.Component{\n\n\n    getIconByStatus(status) { \n        if (status) { \n            if (status === \"running\") { \n                return (\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                )\n            }\n            if (status === \"pass\") { \n                return (\n                    <svg className=\"testcase-fade-in\" xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                        <path fill=\"#28a745\" d=\"M18 32.34L9.66 24l-2.83 2.83L18 38l24-24-2.83-2.83z\" />\n                    </svg>\n                );\n            }\n            return (\n                <svg className=\"testcase-fade-in\" xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                    <path fill=\"#dc3545\" d=\"M22 30h4v4h-4zm0-16h4v12h-4zm1.99-10C12.94 4 4 12.95 4 24s8.94 20 19.99 20S44 35.05 44 24 35.04 4 23.99 4zM24 40c-8.84 0-16-7.16-16-16S15.16 8 24 8s16 7.16 16 16-7.16 16-16 16z\" />\n                </svg>\n            );\n        }\n        if (this.props.testCase.selected) { \n            return (\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                    <path fill=\"#007bff\" d=\"M45.4 37.9L27.1 19.6c1.8-4.6.8-10.1-2.9-13.8-4-4-10-4.8-14.8-2.5l8.7 8.7-6.1 6.1-8.7-8.7C1 14.2 1.8 20.2 5.8 24.2c3.7 3.7 9.2 4.7 13.8 2.9l18.3 18.3c.8.8 2.1.8 2.8 0l4.7-4.7c.8-.7.8-2 0-2.8z\" />\n                </svg>\n            );\n        }\n        return (\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"38\" height=\"38\" viewBox=\"0 0 48 48\">\n                <path fill=\"grey\"d=\"M24 14c5.52 0 10 4.48 10 10 0 1.29-.26 2.52-.71 3.65l5.85 5.85c3.02-2.52 5.4-5.78 6.87-9.5-3.47-8.78-12-15-22.01-15-2.8 0-5.48.5-7.97 1.4l4.32 4.31c1.13-.44 2.36-.71 3.65-.71zM4 8.55l4.56 4.56.91.91C6.17 16.6 3.56 20.03 2 24c3.46 8.78 12 15 22 15 3.1 0 6.06-.6 8.77-1.69l.85.85L39.45 44 42 41.46 6.55 6 4 8.55zM15.06 19.6l3.09 3.09c-.09.43-.15.86-.15 1.31 0 3.31 2.69 6 6 6 .45 0 .88-.06 1.3-.15l3.09 3.09C27.06 33.6 25.58 34 24 34c-5.52 0-10-4.48-10-10 0-1.58.4-3.06 1.06-4.4zm8.61-1.57l6.3 6.3L30 24c0-3.31-2.69-6-6-6l-.33.03z\" />\n            </svg>\n        )\n    }\n\n    getHeader(canSelect, _key, title) { \n        if (canSelect) { \n            return (\n                <div className=\"form-check\">\n                    <input type=\"checkbox\" className=\"form-check-input bg-light\" id={\"select-case\" + _key} onChange={\n                        () => {\n                            this.props.onSelect(this.props.testCase);\n                        }} checked={!!this.props.testCase.selected}\n                        autoComplete=\"off\" />\n                    <label className=\"form-check-label\" id=\"select-case-label\" htmlFor={\"select-case\" + _key} ><h5 className=\"card-title\" id=\"select-case-label-text\">{title} </h5></label>\n                </div>\n            );\n        }\n        return <h5 className=\"card-title\">{title} </h5>;\n    }\n\n    render() {\n        const { testCase, onClick, _key } = this.props;\n        return (\n            <div className=\"card testcase-view-sm-body\" onClick={(e) => {\n                if (e.target.id !== \"select-case\" + _key && e.target.id !== \"select-case-label\" && e.target.id !== \"select-case-label-text\") { \n                    onClick(testCase)\n                }\n            }}>\n                <div className={\"row no-gutters testcase-card-hover-\" + (testCase.status ? testCase.status : \"default\")}>\n                    <div className=\"col-md-10\">\n                        <div className=\"card-body\">\n                            {this.getHeader(testCase.status !== \"running\", _key, testCase.name)}\n                            <p className=\"card-text\">{testCase.desc}</p>\n                            <p className=\"card-text small text-muted\">Submitted on {new Date(testCase.date).toDateString()}, {testCase.numRun} runs</p>\n                        </div>\n                    </div>\n                    <div className=\"col-md-2 my-auto\">\n                        {this.getIconByStatus(testCase.status)}\n                    </div>\n                </div>\n            </div>)\n    }\n}\n\n\nexport default TestCaseViewSmall;","import React from \"react\"\nimport Editor from \"./editor\"\nimport { getCodeRunner, getSupportedLang, getVersion } from \"../../letcode-code-runner/code-runner-global\"\nimport { TestCase } from \"../../letcode-code-runner/code-runner\"\nimport TestCaseViewSmall from \"../test-case/test-case-view-sm\"\nimport { TestCaseViewModal } from \"../test-case/test-case-view-lg\"\nimport { AddTestCaseModal } from \"../test-case/add-test-case\"\nimport { Tabs, Tab, Dropdown, DropdownButton } from \"react-bootstrap\"\nimport Fetchwapper from \"../fetchWrapper\"\nimport { getQuestionAllInfo } from \"../../api-calls/question-api-calls\"\nimport { postAnswer } from \"../../api-calls/answers-api-calls\";\nimport { addTestCase } from \"../../api-calls/test-case-api-calls\"\nimport \"./answer-question.css\"\n\n\nconst newLine = \">> \"\nconst maxLogs = 100;\n\nclass AnswerQuestion extends React.Component{\n\n    constructor(props) {\n        super(props);\n        const { preferedLang, testCases, userId, question } = props;\n        const supLang = getSupportedLang(question.functionType);\n        const defaultLang = preferedLang && supLang.includes(preferedLang) ? preferedLang : supLang[0];\n        const runner = getCodeRunner(defaultLang);\n        runner.setConsole(this.consoleOnMsg.bind(this), this.consoleOnErr.bind(this));\n        const starter = runner.getStarterCode(question.functionType);\n        let store = JSON.parse(localStorage.getItem(userId));\n        if (!store) {\n            store = { [question._id]: { history: [], localTestCase: [] , code:starter} };\n        }\n        if (!store[question._id]) { \n            store[question._id] = { history: [], localTestCase: [], code: starter };\n        }\n        localStorage.setItem(userId,  JSON.stringify(store));\n\n        this.state = {\n            supportedLang: supLang,\n            selectedLang: defaultLang,\n            tab: \"Question\",\n            testCases: JSON.parse(JSON.stringify(testCases.concat(store[question._id].localTestCase))),\n            codeRunner: runner,\n            code: store[question._id].code,\n            starterList: starter.split(\"\\n\"),\n            log: [{ type: \"info\", value: \"Code Runner \" + getVersion() }],\n            codeRunnerState: runner.state,\n            showAddTestCase: false,\n            testCaseDetail: null,\n            testCaseSortBy: \"newest\",\n            testCasesView: \"all\",\n            runnerState: runner.state === \"uninitialized\" ? \"ready\" : runner.state,\n            history: store[question._id].history\n        };\n    }\n\n\n    onLangSelectChange(e) {\n        this.codeRunner.setConsole(null, null);\n        const runner = getCodeRunner(e.target.value)\n        runner.setConsole(this.consoleOnMsg.bind(this), this.consoleOnErr.bind(this));\n        const starter = runner.getStarterCode(this.props.question.functionType);\n        this.setState({\n            selectedLang: e.target.value,\n            codeRunner: runner,\n            code: starter,\n            starterList: starter.split(\"\\n\"),\n            codeRunnerState: runner.state\n        });\n    }\n\n    getMustIncludeStarter() { \n        //lang specific\n        if (this.state.selectedLang === \"Python\") { \n            return this.state.starterList[1];\n        }\n        return \"\"\n    }\n\n    consoleOnMsg(msg) {\n        const newLog = this.state.log;\n        newLog.push({ type: \"info\", value: msg });\n        this.setState({ log: newLog.slice(Math.max(newLog.length - maxLogs, 0)) });\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    consoleOnErr(err) { \n        const newLog = this.state.log;\n        newLog.push({ type: \"error\", value: err });\n        this.setState({ log: newLog.slice(Math.max(newLog.length - maxLogs, 0)) });\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    onTestCaseAdd(testCase) { \n        if (!testCase.isLocal) { \n            testCase.owner_id = this.props.question._id;\n            addTestCase(testCase, (tc) => { \n                this.setState({testCases: tc, showAddTestCase: false})\n            })\n            return;\n        }\n        testCase.numRun = 0;\n        testCase.date = new Date().toString();\n        const local = JSON.parse(localStorage.getItem(this.props.userId));\n        local[[this.props.question._id]].localTestCase.push(testCase);\n        localStorage.setItem(this.props.userId, JSON.stringify(local));\n        const newCases = [...this.state.testCases];\n        newCases.push(testCase);\n        this.setState({ testCases: newCases, showAddTestCase: false });\n    }\n\n\n    onTestCaseSelect(testCase) { \n        const newCases = [...this.state.testCases];\n        const update = { ...testCase };\n        update.selected = !update.selected;\n        newCases[newCases.indexOf(testCase)] = update;\n        this.setState({ testCases: newCases });\n    }\n\n    getRecentTestInfo() { \n        if (this.state.history.length === 0) { \n            return <span className=\"text-secondary text-left d-inline-block small text-truncate pl-2 pt-2\"\n                style={{ maxWidth: \"calc(42vw - 215px)\" }}>\n                Your code is brand new! Give it a try -{\">\"}\n            </span>\n        }\n        const lastHistory = this.state.history[0]\n        return (\n            <span className=\"text-secondary text-left d-inline-block small text-truncate pl-2 pt-1\"\n                style={{ maxWidth: \"calc(42vw - 215px)\" }}>\n                {\"Most recent test run on \" + new Date(lastHistory.testCompletionTime).toLocaleString()}\n                <br />\n                {String(lastHistory.testPassed) + \" passed, \" + String(lastHistory.testCases.length - lastHistory.testPassed) + \" failed\"}\n            </span>\n        )\n    }\n\n    mapTestCases() { \n        let testCases = this.state.testCases;\n        if (this.state.testCaseSortBy === \"newest\")\n            testCases = testCases.sort((a, b) => new Date(b.date) - new Date(a.date))\n        else if (this.state.testCaseSortBy === \"mostRuns\") { \n            testCases = testCases.sort((a, b) => b.numRun - a.numRun)\n        }\n            \n        if (this.state.testCasesView === \"selectedOnly\")\n            testCases = testCases.filter(tc => tc.selected);\n        return testCases.map((x, ind) =>\n            <TestCaseViewSmall\n                testCase={x} key={ind} _key={ind}\n                onSelect={this.onTestCaseSelect.bind(this)}\n                onClick={(testcase) => this.setState({ testCaseDetail: testcase })}\n            />);\n    }\n\n    mapHistory() { \n        return (\n            <ul className=\"list-group\">\n                {this.state.history.map((h, ind) => \n                    <li key={ind} className=\"list-group-item\">{\n                        new Date(h.testCompletionTime).toLocaleString()\n                        + \" | \" + String(h.testPassed) + \" passed, \"\n                        + String(h.testCases.length - h.testPassed)\n                        + \" failed\"}\n                        <button className=\"btn btn-link float-right p-0\" onClick={() => this.setState({code: h.userCode})}>Restore Code</button>\n                    </li>\n                )}\n            </ul>);\n    }\n\n    runTest() {\n        this.setState({tab:\"Test Cases\"})\n        let runOnce = false;\n        this.state.codeRunner.init((runnerState) => { \n            if (runnerState === \"ready\" && !runOnce) {\n                runOnce = true;\n                const TestToRun = [];\n                const newTestCases = [];\n                for (let tc of this.state.testCases) { \n                    const newTc = { ...tc };\n                    newTc.actualOutput = null;\n                    if (newTc.selected) {\n                        newTc.status = \"running\";\n                        const onTestOut = (pass, output) => {\n                            const nnTc = { ...newTc };\n                            nnTc.numRun += 1;\n                            nnTc.status = pass ? \"pass\" : \"fail\";\n                            nnTc.actualOutput = output;\n                            const newTcs = [...this.state.testCases];\n                            newTcs[newTcs.indexOf(newTc)] = nnTc;\n                            this.setState({ testCases: newTcs });\n                        }\n                        TestToRun.push(new TestCase(newTc.inputs, newTc.output,\n                            (info) => onTestOut(true, info),\n                            (err) => onTestOut(false, err)));\n                    }\n                    else { \n                        newTc.status = null;\n                    }\n                    newTestCases.push(newTc);\n                }\n                this.state.codeRunner\n                    .runTest(this.props.question.functionType, TestToRun, this.state.code)\n                    .then(codeTacker => {\n                        const newHistory = [...this.state.history];\n                        newHistory.unshift(codeTacker);\n                        const store = JSON.parse(localStorage.getItem(this.props.userId));\n                        store[this.props.question._id].history = newHistory;\n                        localStorage.setItem(this.props.userId, JSON.stringify(store));\n                        this.setState({history:newHistory})\n                    });\n                this.setState({ testCases: newTestCases});\n            }\n            else if (runnerState === \"error\") {\n                alert(\"Error occured, try refresh your browser\")\n            }\n            this.setState({ runnerState: runnerState });\n        })\n    }\n    \n    \n    render() {\n        const { question, userId } = this.props;\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-7 p-0\">\n                        <select className=\"custom-select rounded-0 border-gray border-bottom-0 \"\n                            onChange={this.onLangSelectChange.bind(this)}\n                            value={this.state.selectedLang}>\n                            {this.state.supportedLang.map((x, ind) => <option key={ind}>{x}</option>)}\n                        </select>\n                        <Editor code={this.state.code}\n                            onCodeChange={(code) => {\n                                const store = JSON.parse(localStorage.getItem(userId));\n                                store[question._id].code = code;\n                                localStorage.setItem(userId, JSON.stringify(store));\n                                this.setState({ code: code })\n                            }}\n                            lang={this.state.selectedLang}\n                            mustInclude={this.getMustIncludeStarter()}\n                            extraTheme=\"answer-editor\"\n                        />\n                        <div className=\"answer-console\">\n                            <div className=\"answer-console-title\">\n                                Console Output:\n                            </div>\n                            <div className=\"answer-console-body\">\n                                {this.state.log.map((x, ind) => { \n                                    if (x.type === \"info\") \n                                        return <p className=\"answer-console-text m-0 text-secondary\" key={ind}><span className=\"text-info\">{newLine}</span>{x.value}</p>\n                                    if (x.type === \"error\") \n                                        return <p className=\"answer-console-text bg-danger text-white\" key={ind}>{x.value}</p>\n                                    return null\n                                })}\n                                <div style={{ float: \"left\", clear: \"both\" }}\n                                    ref={(el) => { this.messagesEnd = el; }}>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-5 p-0\">\n                        <div className=\"answer-info-tab\">\n                            <Tabs activeKey={this.state.tab} onSelect={(k) => this.setState({tab: k})}>\n                                <Tab eventKey=\"Question\" title=\"Question\">\n                                    <div className=\"p-3 answer-question-body\">\n                                        <br/>\n                                        <h4 className=\"text-center px-4\"> {question.name}</h4>\n                                        <br/>\n                                        <p className=\"lead px-4\">\n                                            {question.desc}\n                                        </p>\n                                        <div className=\"text-secondary text-right small\">Posted by <a href=\"#\">{question.by}</a> on {new Date(question.date).toDateString()}</div>\n                                        <div className=\"text-secondary text-right small\">{question.numUpVote} upvote, {question.numAnswers} answers</div>\n                                    </div>  \n                                </Tab>\n                                <Tab className=\"bg-light\" eventKey=\"Test Cases\" title=\"Test Cases\">\n                                    <div className=\"p-2 btn-group\" role=\"group\">\n                                        <button type=\"button\" className=\"btn btn-link\" onClick={() => this.setState({showAddTestCase:true})}>Add</button>\n                                        <DropdownButton variant=\"link\" title=\"Sort By\">\n                                            <Dropdown.Item active={this.state.testCaseSortBy === \"newest\"}\n                                                onClick={() => this.setState({ testCaseSortBy: \"newest\" })}>Newest</Dropdown.Item>\n                                            <Dropdown.Item active={this.state.testCaseSortBy === \"mostRuns\"}\n                                                onClick={() => this.setState({ testCaseSortBy: \"mostRuns\" })}>Most Runs</Dropdown.Item>\n                                        </DropdownButton>\n                                        <DropdownButton variant=\"link\" title=\"View\">\n                                            <Dropdown.Item active={this.state.testCasesView === \"all\"}\n                                                onClick={() => this.setState({ testCasesView: \"all\" })}>All</Dropdown.Item>\n                                            <Dropdown.Item active={this.state.testCasesView === \"selectedOnly\"}\n                                                onClick={() => this.setState({ testCasesView: \"selectedOnly\" })}>Selected Only</Dropdown.Item>\n                                        </DropdownButton>\n                                    </div>\n                                    \n                                    <div className=\"answer-test-case-body\">\n                                        {this.mapTestCases()}\n                                    </div>\n                                </Tab>\n                                <Tab className=\"bg-light\" eventKey=\"Test History\" title=\"Test History\">\n                                    <div className=\"answer-question-body\">\n                                        {this.mapHistory()}\n                                    </div>\n                                </Tab>\n                                <Tab eventKey=\"Setting\" title=\"Setting\">\n                                    <div className=\"text-center mt-4\">\n                                        LetCode Code Runner: {getVersion()}\n                                    </div>\n                                    <div className=\"text-center mt-2\">\n                                        <button type=\"button\" className=\"btn btn-link\" onClick={() => {\n                                            localStorage.removeItem(userId);\n                                            window.location.reload(false);\n                                        }}>Clear Local Storage</button>\n                                    </div>\n                                </Tab>\n                            </Tabs>\n                        </div>\n                        <div className=\"answer-button-group\">\n                            {this.getRecentTestInfo()}\n                            <div className=\"btn-group float-right py-1\" role=\"group\">\n                                {this.state.runnerState !== \"ready\" ? \n                                    <button type=\"button\" className=\"btn btn-primary rounded-0 mr-2\" disabled={true}>\n                                        <span className=\"mr-2\">{this.state.runnerState[0].toUpperCase() + this.state.runnerState.slice(1)}</span>\n                                        <span className=\"spinner-border spinner-border-sm\"></span>\n                                    </button>\n                                    :\n                                    <button type=\"button\" className=\"btn btn-primary rounded-0 mr-2\" onClick={this.runTest.bind(this)}>\n                                        <span className=\"mr-2\">Run Test</span>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n                                            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                                            <path d=\"M8 5v14l11-7z\" fill=\"white\" />\n                                        </svg>\n                                    </button>\n                                }\n                                \n                                <button type=\"button\" className=\"btn btn-primary rounded-0 mr-1\" onClick={() => { \n                                    postAnswer(question._id, this.state.code, userId, ()=> {\n                                        this.props.history.push(\"/\" + question._id + \"/detail\");\n                                    })\n                                }}>Submit</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <TestCaseViewModal functionType={this.props.question.functionType}\n                    testCase={this.state.testCaseDetail}\n                    onHide={() => this.setState({ testCaseDetail: null })} />\n                <AddTestCaseModal show={this.state.showAddTestCase} functionType={this.props.question.functionType}\n                    onAdd={this.onTestCaseAdd.bind(this)}\n                    onHide={() => { \n                    this.setState({showAddTestCase: false})\n                }} local={true}/>\n\n            </div>\n            \n        )\n    }\n}\n\n\nfunction warppedAnswerQuestion(props) { \n    const Flatten = (props) => {\n        return <AnswerQuestion history={props.history} userId={props.data.userId} question={props.data.question} testCases={props.data.testCases} />\n    }\n    return (\n      <Fetchwapper\n        fetchData={(cb) =>\n          getQuestionAllInfo(props.match.params.question_id, cb)\n        }\n        private={true}\n      >\n        <Flatten />\n      </Fetchwapper>\n    );\n}\n\n\n\n\nexport default warppedAnswerQuestion;","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom'\nimport Header from './react-components/layout/Header'\nimport MainLogin from './react-components/auth/MainLogin'\nimport MainPage from './react-components/mainpage/MainPage'\nimport Profile from './react-components/user/Profile'\nimport CreateQuestion from './react-components/post-question/create-question'\nimport QuestionPage from './react-components/question-page/QuestionContainer'\nimport AnswerQuestion from './react-components/answer-question/answer-question'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\n\nfunction App() {\n  // testRunner();\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Switch>\n        <Route exact path=\"/\" component={MainPage}></Route>\n        <Route path='/signin_up' component={MainLogin}></Route>\n        <Route path='/:username/profile' component={Profile}></Route>\n        <Route path='/newquestion' component={CreateQuestion}></Route>\n        <Route path='/:question_id/detail' component={QuestionPage}></Route>\n        <Route path='/:question_id/answer_question' component={AnswerQuestion}></Route>\n        <Route path='/myprofile' component={Profile}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","'use strict';\n\nfunction _extends() {\n  _extends = Object.assign || function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\n\nvar __extends = void 0 && (void 0).__extends || function() {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    }\n    instanceof Array && function(d, b) {\n      d.__proto__ = b;\n    } || function(d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function(d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.UnControlled = exports.Controlled = void 0;\n\nvar React = require('react');\n\nvar SERVER_RENDERED = typeof navigator === 'undefined' || global['PREVENT_CODEMIRROR_RENDER'] === true;\nvar cm;\n\nif (!SERVER_RENDERED) {\n  cm = require('codemirror');\n}\n\nvar Helper = function() {\n  function Helper() {}\n\n  Helper.equals = function(x, y) {\n    var _this = this;\n\n    var ok = Object.keys,\n      tx = _typeof(x),\n      ty = _typeof(y);\n\n    return x && y && tx === 'object' && tx === ty ? ok(x).length === ok(y).length && ok(x).every(function(key) {\n      return _this.equals(x[key], y[key]);\n    }) : x === y;\n  };\n\n  return Helper;\n}();\n\nvar Shared = function() {\n  function Shared(editor, props) {\n    this.editor = editor;\n    this.props = props;\n  }\n\n  Shared.prototype.delegateCursor = function(position, scroll, focus) {\n    var doc = this.editor.getDoc();\n\n    if (focus) {\n      this.editor.focus();\n    }\n\n    scroll ? doc.setCursor(position) : doc.setCursor(position, null, {\n      scroll: false\n    });\n  };\n\n  Shared.prototype.delegateScroll = function(coordinates) {\n    this.editor.scrollTo(coordinates.x, coordinates.y);\n  };\n\n  Shared.prototype.delegateSelection = function(ranges, focus) {\n    var doc = this.editor.getDoc();\n    doc.setSelections(ranges);\n\n    if (focus) {\n      this.editor.focus();\n    }\n  };\n\n  Shared.prototype.apply = function(props) {\n    if (props && props.selection && props.selection.ranges) {\n      this.delegateSelection(props.selection.ranges, props.selection.focus || false);\n    }\n\n    if (props && props.cursor) {\n      this.delegateCursor(props.cursor, props.autoScroll || false, this.editor.getOption('autofocus') || false);\n    }\n\n    if (props && props.scroll) {\n      this.delegateScroll(props.scroll);\n    }\n  };\n\n  Shared.prototype.applyNext = function(props, next, preserved) {\n    if (props && props.selection && props.selection.ranges) {\n      if (next && next.selection && next.selection.ranges && !Helper.equals(props.selection.ranges, next.selection.ranges)) {\n        this.delegateSelection(next.selection.ranges, next.selection.focus || false);\n      }\n    }\n\n    if (props && props.cursor) {\n      if (next && next.cursor && !Helper.equals(props.cursor, next.cursor)) {\n        this.delegateCursor(preserved.cursor || next.cursor, next.autoScroll || false, next.autoCursor || false);\n      }\n    }\n\n    if (props && props.scroll) {\n      if (next && next.scroll && !Helper.equals(props.scroll, next.scroll)) {\n        this.delegateScroll(next.scroll);\n      }\n    }\n  };\n\n  Shared.prototype.applyUserDefined = function(props, preserved) {\n    if (preserved && preserved.cursor) {\n      this.delegateCursor(preserved.cursor, props.autoScroll || false, this.editor.getOption('autofocus') || false);\n    }\n  };\n\n  Shared.prototype.wire = function(props) {\n    var _this = this;\n\n    Object.keys(props || {}).filter(function(p) {\n      return /^on/.test(p);\n    }).forEach(function(prop) {\n      switch (prop) {\n        case 'onBlur': {\n          _this.editor.on('blur', function(cm, event) {\n            _this.props.onBlur(_this.editor, event);\n          });\n        }\n        break;\n\n      case 'onContextMenu': {\n        _this.editor.on('contextmenu', function(cm, event) {\n          _this.props.onContextMenu(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onCopy': {\n        _this.editor.on('copy', function(cm, event) {\n          _this.props.onCopy(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onCursor': {\n        _this.editor.on('cursorActivity', function(cm) {\n          _this.props.onCursor(_this.editor, _this.editor.getDoc().getCursor());\n        });\n      }\n      break;\n\n      case 'onCursorActivity': {\n        _this.editor.on('cursorActivity', function(cm) {\n          _this.props.onCursorActivity(_this.editor);\n        });\n      }\n      break;\n\n      case 'onCut': {\n        _this.editor.on('cut', function(cm, event) {\n          _this.props.onCut(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDblClick': {\n        _this.editor.on('dblclick', function(cm, event) {\n          _this.props.onDblClick(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDragEnter': {\n        _this.editor.on('dragenter', function(cm, event) {\n          _this.props.onDragEnter(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onDragLeave': {\n        _this.editor.on('dragleave', function(cm, event) {\n          _this.props.onDragLeave(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDragOver': {\n        _this.editor.on('dragover', function(cm, event) {\n          _this.props.onDragOver(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onDragStart': {\n        _this.editor.on('dragstart', function(cm, event) {\n          _this.props.onDragStart(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onDrop': {\n        _this.editor.on('drop', function(cm, event) {\n          _this.props.onDrop(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onFocus': {\n        _this.editor.on('focus', function(cm, event) {\n          _this.props.onFocus(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onGutterClick': {\n        _this.editor.on('gutterClick', function(cm, lineNumber, gutter, event) {\n          _this.props.onGutterClick(_this.editor, lineNumber, gutter, event);\n        });\n      }\n      break;\n\n      case 'onInputRead': {\n        _this.editor.on('inputRead', function(cm, EditorChangeEvent) {\n          _this.props.onInputRead(_this.editor, EditorChangeEvent);\n        });\n      }\n      break;\n\n      case 'onKeyDown': {\n        _this.editor.on('keydown', function(cm, event) {\n          _this.props.onKeyDown(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onKeyHandled': {\n        _this.editor.on('keyHandled', function(cm, key, event) {\n          _this.props.onKeyHandled(_this.editor, key, event);\n        });\n      }\n      break;\n\n      case 'onKeyPress': {\n        _this.editor.on('keypress', function(cm, event) {\n          _this.props.onKeyPress(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onKeyUp': {\n        _this.editor.on('keyup', function(cm, event) {\n          _this.props.onKeyUp(_this.editor, event);\n        });\n      }\n      break;\n\n      case 'onMouseDown': {\n        _this.editor.on('mousedown', function(cm, event) {\n          _this.props.onMouseDown(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onPaste': {\n        _this.editor.on('paste', function(cm, event) {\n          _this.props.onPaste(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onRenderLine': {\n        _this.editor.on('renderLine', function(cm, line, element) {\n          _this.props.onRenderLine(_this.editor, line, element);\n        });\n\n        break;\n      }\n\n      case 'onScroll': {\n        _this.editor.on('scroll', function(cm) {\n          _this.props.onScroll(_this.editor, _this.editor.getScrollInfo());\n        });\n      }\n      break;\n\n      case 'onSelection': {\n        _this.editor.on('beforeSelectionChange', function(cm, data) {\n          _this.props.onSelection(_this.editor, data);\n        });\n      }\n      break;\n\n      case 'onTouchStart': {\n        _this.editor.on('touchstart', function(cm, event) {\n          _this.props.onTouchStart(_this.editor, event);\n        });\n\n        break;\n      }\n\n      case 'onUpdate': {\n        _this.editor.on('update', function(cm) {\n          _this.props.onUpdate(_this.editor);\n        });\n      }\n      break;\n\n      case 'onViewportChange': {\n        _this.editor.on('viewportChange', function(cm, from, to) {\n          _this.props.onViewportChange(_this.editor, from, to);\n        });\n      }\n      break;\n      }\n    });\n  };\n\n  return Shared;\n}();\n\nvar Controlled = function(_super) {\n  __extends(Controlled, _super);\n\n  function Controlled(props) {\n    var _this = _super.call(this, props) || this;\n\n    if (SERVER_RENDERED) return _this;\n    _this.applied = false;\n    _this.appliedNext = false;\n    _this.appliedUserDefined = false;\n    _this.deferred = null;\n    _this.emulating = false;\n    _this.hydrated = false;\n\n    _this.initCb = function() {\n      if (_this.props.editorDidConfigure) {\n        _this.props.editorDidConfigure(_this.editor);\n      }\n    };\n\n    _this.mounted = false;\n    return _this;\n  }\n\n  Controlled.prototype.hydrate = function(props) {\n    var _this = this;\n\n    var _options = props && props.options ? props.options : {};\n\n    var userDefinedOptions = _extends({}, cm.defaults, this.editor.options, _options);\n\n    var optionDelta = Object.keys(userDefinedOptions).some(function(key) {\n      return _this.editor.getOption(key) !== userDefinedOptions[key];\n    });\n\n    if (optionDelta) {\n      Object.keys(userDefinedOptions).forEach(function(key) {\n        if (_options.hasOwnProperty(key)) {\n          if (_this.editor.getOption(key) !== userDefinedOptions[key]) {\n            _this.editor.setOption(key, userDefinedOptions[key]);\n\n            _this.mirror.setOption(key, userDefinedOptions[key]);\n          }\n        }\n      });\n    }\n\n    if (!this.hydrated) {\n      this.deferred ? this.resolveChange(props.value) : this.initChange(props.value || '');\n    }\n\n    this.hydrated = true;\n  };\n\n  Controlled.prototype.initChange = function(value) {\n    this.emulating = true;\n    var doc = this.editor.getDoc();\n    var lastLine = doc.lastLine();\n    var lastChar = doc.getLine(doc.lastLine()).length;\n    doc.replaceRange(value || '', {\n      line: 0,\n      ch: 0\n    }, {\n      line: lastLine,\n      ch: lastChar\n    });\n    this.mirror.setValue(value);\n    doc.clearHistory();\n    this.mirror.clearHistory();\n    this.emulating = false;\n  };\n\n  Controlled.prototype.resolveChange = function (value) {\n    this.emulating = true;\n    var doc = this.editor.getDoc();\n\n    if (this.deferred.origin === 'undo') {\n      doc.undo();\n    } else if (this.deferred.origin === 'redo') {\n      doc.redo();\n    } else {\n      doc.replaceRange(this.deferred.text, this.deferred.from, this.deferred.to, this.deferred.origin);\n    }\n    if (value && value !== doc.getValue()) {\n      var cursor = doc.getCursor();\n      doc.setValue(value);\n      doc.setCursor(cursor);\n    }\n\n    this.emulating = false;\n    this.deferred = null;\n  };\n\n  Controlled.prototype.mirrorChange = function(deferred) {\n    var doc = this.editor.getDoc();\n\n    if (deferred.origin === 'undo') {\n      doc.setHistory(this.mirror.getHistory());\n      this.mirror.undo();\n    } else if (deferred.origin === 'redo') {\n      doc.setHistory(this.mirror.getHistory());\n      this.mirror.redo();\n    } else {\n      this.mirror.replaceRange(deferred.text, deferred.from, deferred.to, deferred.origin);\n    }\n\n    return this.mirror.getValue();\n  };\n\n  Controlled.prototype.componentDidMount = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return;\n\n    if (this.props.defineMode) {\n      if (this.props.defineMode.name && this.props.defineMode.fn) {\n        cm.defineMode(this.props.defineMode.name, this.props.defineMode.fn);\n      }\n    }\n\n    this.editor = cm(this.ref, this.props.options);\n    this.shared = new Shared(this.editor, this.props);\n    this.mirror = cm(function() {}, this.props.options);\n    this.editor.on('electricInput', function() {\n      _this.mirror.setHistory(_this.editor.getDoc().getHistory());\n    });\n    this.editor.on('cursorActivity', function() {\n      _this.mirror.setCursor(_this.editor.getDoc().getCursor());\n    });\n    this.editor.on('beforeChange', function(cm, data) {\n      if (_this.emulating) {\n        return;\n      }\n\n      data.cancel();\n      _this.deferred = data;\n      var originalData = _this.mirror.getValue();\n      var phantomChange = _this.mirrorChange(_this.deferred);\n      if (_this.props.onBeforeChange) _this.props.onBeforeChange(cm, _this.deferred, phantomChange, () => { \n        _this.mirror.setValue(originalData);\n      });\n    });\n    this.editor.on('change', function(cm, data) {\n      if (!_this.mounted) {\n        return;\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(_this.editor, data, _this.editor.getValue());\n      }\n    });\n    this.hydrate(this.props);\n    this.shared.apply(this.props);\n    this.applied = true;\n    this.mounted = true;\n    this.shared.wire(this.props);\n\n    if (this.editor.getOption('autofocus')) {\n      this.editor.focus();\n    }\n\n    if (this.props.editorDidMount) {\n      this.props.editorDidMount(this.editor, this.editor.getValue(), this.initCb);\n    }\n  };\n\n  Controlled.prototype.componentDidUpdate = function(prevProps) {\n    if (SERVER_RENDERED) return;\n    var preserved = {\n      cursor: null\n    };\n\n    if (this.props.value !== prevProps.value) {\n      this.hydrated = false;\n    }\n\n    if (!this.props.autoCursor && this.props.autoCursor !== undefined) {\n      preserved.cursor = this.editor.getDoc().getCursor();\n    }\n\n    this.hydrate(this.props);\n\n    if (!this.appliedNext) {\n      this.shared.applyNext(prevProps, this.props, preserved);\n      this.appliedNext = true;\n    }\n\n    this.shared.applyUserDefined(prevProps, preserved);\n    this.appliedUserDefined = true;\n  };\n\n  Controlled.prototype.componentWillUnmount = function() {\n    if (SERVER_RENDERED) return;\n\n    if (this.props.editorWillUnmount) {\n      this.props.editorWillUnmount(cm);\n    }\n  };\n\n  Controlled.prototype.shouldComponentUpdate = function(nextProps, nextState) {\n    return !SERVER_RENDERED;\n  };\n\n  Controlled.prototype.render = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return null;\n    var className = this.props.className ? 'react-codemirror2 ' + this.props.className : 'react-codemirror2';\n    return React.createElement('div', {\n      className: className,\n      ref: function ref(self) {\n        return _this.ref = self;\n      }\n    });\n  };\n\n  return Controlled;\n}(React.Component);\n\nexports.Controlled = Controlled;\n\nvar UnControlled = function(_super) {\n  __extends(UnControlled, _super);\n\n  function UnControlled(props) {\n    var _this = _super.call(this, props) || this;\n\n    if (SERVER_RENDERED) return _this;\n    _this.applied = false;\n    _this.appliedUserDefined = false;\n    _this.continueChange = false;\n    _this.detached = false;\n    _this.hydrated = false;\n\n    _this.initCb = function() {\n      if (_this.props.editorDidConfigure) {\n        _this.props.editorDidConfigure(_this.editor);\n      }\n    };\n\n    _this.mounted = false;\n\n    _this.onBeforeChangeCb = function() {\n      _this.continueChange = true;\n    };\n\n    return _this;\n  }\n\n  UnControlled.prototype.hydrate = function(props) {\n    var _this = this;\n\n    var _options = props && props.options ? props.options : {};\n\n    var userDefinedOptions = _extends({}, cm.defaults, this.editor.options, _options);\n\n    var optionDelta = Object.keys(userDefinedOptions).some(function(key) {\n      return _this.editor.getOption(key) !== userDefinedOptions[key];\n    });\n\n    if (optionDelta) {\n      Object.keys(userDefinedOptions).forEach(function(key) {\n        if (_options.hasOwnProperty(key)) {\n          if (_this.editor.getOption(key) !== userDefinedOptions[key]) {\n            _this.editor.setOption(key, userDefinedOptions[key]);\n          }\n        }\n      });\n    }\n\n    if (!this.hydrated) {\n      var doc = this.editor.getDoc();\n      var lastLine = doc.lastLine();\n      var lastChar = doc.getLine(doc.lastLine()).length;\n      doc.replaceRange(props.value || '', {\n        line: 0,\n        ch: 0\n      }, {\n        line: lastLine,\n        ch: lastChar\n      });\n    }\n\n    this.hydrated = true;\n  };\n\n  UnControlled.prototype.componentDidMount = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return;\n    this.detached = this.props.detach === true;\n\n    if (this.props.defineMode) {\n      if (this.props.defineMode.name && this.props.defineMode.fn) {\n        cm.defineMode(this.props.defineMode.name, this.props.defineMode.fn);\n      }\n    }\n\n    this.editor = cm(this.ref, this.props.options);\n    this.shared = new Shared(this.editor, this.props);\n    this.editor.on('beforeChange', function(cm, data) {\n      if (_this.props.onBeforeChange) {\n        _this.props.onBeforeChange(_this.editor, data, _this.editor.getValue(), _this.onBeforeChangeCb);\n      }\n    });\n    this.editor.on('change', function(cm, data) {\n      if (!_this.mounted || !_this.props.onChange) {\n        return;\n      }\n\n      if (_this.props.onBeforeChange) {\n        if (_this.continueChange) {\n          _this.props.onChange(_this.editor, data, _this.editor.getValue());\n        }\n      } else {\n        _this.props.onChange(_this.editor, data, _this.editor.getValue());\n      }\n    });\n    this.hydrate(this.props);\n    this.shared.apply(this.props);\n    this.applied = true;\n    this.mounted = true;\n    this.shared.wire(this.props);\n    this.editor.getDoc().clearHistory();\n\n    if (this.props.editorDidMount) {\n      this.props.editorDidMount(this.editor, this.editor.getValue(), this.initCb);\n    }\n  };\n\n  UnControlled.prototype.componentDidUpdate = function(prevProps) {\n    if (this.detached && this.props.detach === false) {\n      this.detached = false;\n\n      if (prevProps.editorDidAttach) {\n        prevProps.editorDidAttach(this.editor);\n      }\n    }\n\n    if (!this.detached && this.props.detach === true) {\n      this.detached = true;\n\n      if (prevProps.editorDidDetach) {\n        prevProps.editorDidDetach(this.editor);\n      }\n    }\n\n    if (SERVER_RENDERED || this.detached) return;\n    var preserved = {\n      cursor: null\n    };\n\n    if (this.props.value !== prevProps.value) {\n      this.hydrated = false;\n      this.applied = false;\n      this.appliedUserDefined = false;\n    }\n\n    if (!prevProps.autoCursor && prevProps.autoCursor !== undefined) {\n      preserved.cursor = this.editor.getDoc().getCursor();\n    }\n\n    this.hydrate(this.props);\n\n    if (!this.applied) {\n      this.shared.apply(prevProps);\n      this.applied = true;\n    }\n\n    if (!this.appliedUserDefined) {\n      this.shared.applyUserDefined(prevProps, preserved);\n      this.appliedUserDefined = true;\n    }\n  };\n\n  UnControlled.prototype.componentWillUnmount = function() {\n    if (SERVER_RENDERED) return;\n\n    if (this.props.editorWillUnmount) {\n      this.props.editorWillUnmount(cm);\n    }\n  };\n\n  UnControlled.prototype.shouldComponentUpdate = function(nextProps, nextState) {\n    var update = true;\n    if (SERVER_RENDERED) update = false;\n    if (this.detached && nextProps.detach) update = false;\n    return update;\n  };\n\n  UnControlled.prototype.render = function() {\n    var _this = this;\n\n    if (SERVER_RENDERED) return null;\n    var className = this.props.className ? 'react-codemirror2 ' + this.props.className : 'react-codemirror2';\n    return React.createElement('div', {\n      className: className,\n      ref: function ref(self) {\n        return _this.ref = self;\n      }\n    });\n  };\n\n  return UnControlled;\n}(React.Component);\n\nexports.UnControlled = UnControlled;"],"sourceRoot":""}